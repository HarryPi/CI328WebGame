{"version":3,"sources":["webpack:///./src/constants/GameConstants.ts","webpack:///./src/component/component.ts","webpack:///./src/fsm/state.ts","webpack:///./src/states/state.ts","webpack:///./src/util/Assets.ts","webpack:///./src/index.ts","webpack:///./styles/style.styl","webpack:///./src/states/boot.state.ts","webpack:///./assets/images/progressBar.png","webpack:///./assets/images/logo.png","webpack:///./assets/levels/level1.json","webpack:///./assets/spritesheet/tanks_xml.xml","webpack:///./assets/spritesheet/tanks.png","webpack:///./assets/spritesheet/grassLayer.png","webpack:///./assets/spritesheet/backgroundElements.png","webpack:///./src/states/preload.state.ts","webpack:///./src/states/game.state.ts","webpack:///./src/util/input.ts","webpack:///./src/TankWorldFactory.ts","webpack:///./src/component/camera.component.ts","webpack:///./src/component/movable.component.ts","webpack:///./src/entities/entity.ts","webpack:///./src/component/physics.component.ts","webpack:///./src/config/levels/levelOne.ts","webpack:///./src/config/levels/tankLevel.ts","webpack:///./src/util/vector.ts","webpack:///./src/component/shoot.component.ts","webpack:///./src/component/layer.component.ts","webpack:///./src/component/bullet.component.ts","webpack:///./src/component/collisions.component.ts","webpack:///./src/component/ai.component.ts","webpack:///./src/util/math.util.ts","webpack:///./src/component/state.component.ts","webpack:///./src/fsm/stateMachine.ts","webpack:///./src/fsm/idle.state.ts","webpack:///./src/fsm/seek.state.ts","webpack:///./src/fsm/firing.state.ts","webpack:///./src/component/owner.component.ts","webpack:///./src/util/guid.ts","webpack:///./src/fsm/flee.state.ts","webpack:///./src/util/ScreenMetrics.ts"],"names":[],"mappings":"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","file":"js/main.js","sourcesContent":["export enum States {\n  BOOT_STATE = 'boot_state',\n  PRELOAD_STATE = 'preload_state',\n  GAME_STATE = 'game_state'\n}\n\nexport enum Levels {\n  LEVEL_ONE = 'level_one',\n  LEVEL_TWO = 'level_two'\n}\n\nexport enum   TankLayout {\n  GREEN_FORTRESS = 'tanks_tankGreen1.png', GREEN_ARTILERY = 'tanks_tankGreen2.png',\n  GREEN_HUNTER = 'tanks_tankGreen3.png', GREEN_RECON = 'tanks_tankGreen4.png',\n  GREEN_LIGHT = 'tanks_tankGreen5.png',\n  GREY_FORTRESS = 'tanks_tankGrey1.png', GREY_ARTILERY = 'tanks_tankGrey2.png',\n  GREY_HUNTER = 'tanks_tankGrey3.png', GREY_RECON = 'tanks_tankGrey4.png',\n  GREY_LIGHT = 'tanks_tankGrey5.png',\n  CANDY_FORTRESS = 'tanks_tankDesert1.png', CANDY_ARTILLERY = 'tanks_tankDesert2.png',\n  CANDY_HUNTER = 'tanks_tankDesert3.png', CANDY_RECON = 'tanks_tankDesert4.png',\n  CANDY_LIGHT = 'tanks_tankDesert5.png',\n  DARK_FORTRESS = 'tanks_tankNavy1.png', DARK_ARTILLERY = 'tanks_tankNavy2.png',\n  DARK_HUNTER = 'tanks_tankNavy3.png', DARK_RECON = 'tanks_tankNavy4.png',\n  DARK_LIGHT = 'tanks_tankNavy5.png',\n  BULLET_ONE = 'tank_bullet1.png', BULLET_TWO = 'tank_bullet2.png',\n  BULLET_THREE = 'tank_bullet3.png', BULLET_FOUR = 'tank_bullet4.png',\n  BULLET_FIVE = 'tank_bullet5.png', BULLET_SIX = 'tank_bullet6.png',\n  EXPLOSION_ONE = 'tank_explosion1.png',\n  EXPLOSION_TWO = 'tank_explosion2.png',\n  EXPLOSION_THREE = 'tank_explosion3.png',\n  EXPLOSION_FOUR = 'tank_explosion4.png',\n  EXPLOSION_FIVE = 'tank_explosion5.png',\n  EXPLOSION_SIX = 'tank_explosion6.png',\n  EXPLOSION_SEVEN = 'tank_explosion7.png',\n  EXPLOSION_EIGHT = 'tank_explosion8.png',\n  EXPLOSION_NINE = 'tank_explosion9.png',\n  EXPLOSION_TEN = 'tank_explosion10.png',\n  EXPLOSION_ELEVEN = 'tank_explosion11.png',\n  EXPLOSION_TWELVE = 'tank_explosion12.png',\n  TANK_SPRITESHEET  = 'tankSpritesheet'\n}\n\nexport enum ComponentType {\n  OWNER = 'owner_component',\n  STATE = 'state_component',\n  AI = 'ai_component',\n  COLLISION = 'collision_component',\n  BULLET = 'bullet_component',\n  LAYER = 'layer_component',\n  SHOOT = 'shoot_component',\n  PHYSICS = 'physics_component',\n  CAMERA = 'camera_component',\n  MOVABLE = 'movable_component'\n}\n\nexport enum UIComponents {\n  PROGRESS_BAR = 'progresBar',\n  LOGO = 'logo'\n}\n\nexport enum TileLayers {\n  GRASS_LAYER = 'grassLayer',\n  BACKGROUND = 'background'\n}\n\nexport enum InputType {\n  STOP = 'stop',\n  RIGHT_INPUT = 'right',\n  LEFT_INPUT = 'left',\n  SHOOT = 'shoot'\n}\n\nexport enum TankWorldEvents {\n  SPAWN_BULLET = 'spawnBullet',\n}\n\nexport enum Action {\n  EXPLODE = 'explode_action',\n  DAMAGE = 'damage_action',\n  NOTHING = 'no_action'\n}\n\nexport enum AnimationTypes {\n  EXPLOSION = 'explosion_animation'\n}\nexport enum FSMStates {\n  IDLE,\n  SEEK,\n  FIRING,\n  FLEEING\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/GameConstants.ts","import { ComponentType } from '../constants/GameConstants';\nimport { Entity } from '../entities/entity';\n\nexport abstract class Component {\n\n  protected _name: ComponentType;\n  protected _target: Entity;\n  protected _requiredComponents: Array<ComponentType> = [];\n\n  constructor(name: ComponentType){\n    this._name = name;\n  }\n  get name(): ComponentType {\n    return this._name;\n  }\n\n  get target(): Entity {\n    return this._target;\n  }\n\n  set target(target: Entity) {\n    this._target = target;\n  }\n\n\n  public update(params?: any): void {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/component.ts","import {Entity} from '../entities/entity';\n\nexport abstract class State {\n  protected _entity: Entity;\n\n  public abstract enter(): void;\n  public abstract leave(): void;\n  public abstract update(): void;\n\n  public set entity(entity: Entity) {\n    this._entity = entity;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fsm/state.ts","'use strict';\r\n/** Imports */\r\n\r\nabstract class State extends Phaser.State {\r\n  game: Phaser.Game; // Necessary if we add property to `App` class // todo: Comment: game is exported globally is this needed now?\r\n}\r\n\r\nexport default State;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/state.ts","import { Levels, TankLayout, TileLayers, UIComponents } from '../constants/GameConstants';\n\nclass AssetLoader {\n\n  // Asset URL;\n\n  private _levelOneUrl: string;\n  private _tankSpritesheetUrl: string;\n  private _tankSpritesheetUrlXLM: string;\n  private _progressBarUrl: string;\n  private _logoUrl: string;\n  private _grassLayerUrl: string;\n  private _backgroundUrl: string;\n\n  // Phaser.Loader\n  private _loader: Phaser.Loader;\n\n  // Animations\n  private _animations: Map<string, Phaser.Animation> = new Map();\n\n  constructor() {\n\n    // Images\n    this._progressBarUrl = require('assets/images/progressBar.png');\n    this._logoUrl = require('assets/images/logo.png');\n\n    // Levels\n    this._levelOneUrl = require('assets/levels/level1.json');\n\n    // Atlas\n    this._tankSpritesheetUrlXLM = require('assets/spritesheet/tanks_xml.xml');\n    this._tankSpritesheetUrl = require('assets/spritesheet/tanks.png');\n\n    // Spritesheet\n    this._grassLayerUrl = require('assets/spritesheet/grassLayer.png');\n    this._backgroundUrl = require('assets/spritesheet/backgroundElements.png');\n  }\n\n  /**\n   * Run once during Boot state to pass reference to loader.\n   * @param {Phaser.Loader} loader   The phaser loader\n   * @return {void}\n   **/\n\n  init(loader: Phaser.Loader): void {\n    this.loader = loader;\n  }\n\n  loadBoot(): void {\n    try {\n      this.loader.image(UIComponents.PROGRESS_BAR, this._progressBarUrl);\n      this.loader.image(UIComponents.LOGO, this._logoUrl);\n    } catch (e) {\n      console.log(e);\n      // todo: Exception handling class\n    }\n  }\n\n  public setLoadingScreen(state: Phaser.State): void {\n    let logo = state.add.sprite(state.game.world.centerX, state.game.world.centerY, UIComponents.LOGO);\n    let progressBar = state.add.sprite(state.game.world.centerX, state.game.world.centerY + 128, UIComponents.PROGRESS_BAR);\n\n    logo.anchor.setTo(0.5);\n    progressBar.anchor.setTo(0.5);\n    state.load.setPreloadSprite(progressBar);\n  }\n\n  loadAll(): void {\n    this.loader.tilemap(Levels.LEVEL_ONE, this._levelOneUrl, null, Phaser.Tilemap.TILED_JSON);\n    this.loader.atlasXML(TankLayout.TANK_SPRITESHEET, this._tankSpritesheetUrl, this._tankSpritesheetUrlXLM);\n    this.loader.image(TileLayers.GRASS_LAYER, this._grassLayerUrl);\n    this.loader.image(TileLayers.BACKGROUND, this._backgroundUrl);\n  }\n\n  get loader(): Phaser.Loader {\n    if (this._loader === null) {\n      throw new Error('Loader cannot be empty, ensure AssetsUtils.init() has run before');\n    }\n    return this._loader;\n  }\n\n  set loader(value: Phaser.Loader) {\n    this._loader = value;\n  }\n\n}\n\n// noinspection TsLint\nconst AssetsUtils = new AssetLoader();\nexport default AssetsUtils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/Assets.ts","'use strict';\n/** Imports */\nrequire('pixi');\nrequire('p2');\nrequire('phaser');\n\nimport 'styles/style.styl';\nimport { States } from './constants/GameConstants';\nimport { BootState } from './states/boot.state';\nimport { PreloadState } from './states/preload.state';\nimport { GameState } from './states/game.state';\nimport { DEFAULT_GAME_HEIGHT, DEFAULT_GAME_WIDTH, SCALE_MODE, ScreenMetrics, ScreenUtils } from './util/ScreenMetrics';\n\n// The main class of our application\nexport class App extends Phaser.Game {\n  constructor(config: Phaser.IGameConfig) {\n    super(config);\n    this.state.add(States.BOOT_STATE, BootState);\n    this.state.add(States.PRELOAD_STATE, PreloadState);\n    this.state.add(States.GAME_STATE, GameState);\n\n    this.state.start(States.BOOT_STATE);\n  }\n}\n\n\n// Like python's `__name__ == \"__main__\"` checks whether the module is part\n// of another program or it is executable.\nif (!module.parent) {\n  window.onload = () => {\n    let gameWidth: number = DEFAULT_GAME_WIDTH;\n    let gameHeight: number = DEFAULT_GAME_HEIGHT;\n\n    if (SCALE_MODE === 'USER_SCALE') {\n      let screenMetrics: ScreenMetrics = ScreenUtils.calculateScreenMetrics(gameWidth, gameHeight);\n\n      gameWidth = screenMetrics.gameWidth;\n      gameHeight = screenMetrics.gameHeight;\n    }\n\n    const config: Phaser.IGameConfig = {\n      width: gameWidth, // width of canvas\n      height: gameHeight, // height of canvas\n      renderer: Phaser.AUTO, // rendering context. The recommended parameter is Phaser.AUTO\n      parent: '',\n      resolution: 1,\n      forceSetTimeOut: false // tell Phaser to use `setTimeOut` even if `requestAnimationFrame` is available.\n    };\n\n   new App(config); // Initialize the application. It will automatically inject <canvas /> into <body />\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./styles/style.styl\n// module id = 22\n// module chunks = 0","import State from './state';\nimport { States } from '../constants/GameConstants';\nimport AssetsLoader from '../util/Assets';\n\nexport class BootState extends State {\n\n  constructor() {\n    super();\n  }\n\n  preload(): void {\n    AssetsLoader.init(this.load);\n    AssetsLoader.loadBoot();\n\n    this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n    this.scale.pageAlignVertically = true;\n    this.scale.pageAlignHorizontally = true;\n    this.scale.setGameSize(window.innerWidth, window.innerHeight);\n  }\n\n  create(): void {\n    this.game.stage.backgroundColor = '#FFF';\n    this.game.state.start(States.PRELOAD_STATE);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/boot.state.ts","module.exports = __webpack_public_path__ + \"assets/images/progressBar.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/progressBar.png\n// module id = 29\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/logo.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/logo.png\n// module id = 30\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/levels/level1.json\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/levels/level1.json\n// module id = 31\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/tanks_xml.xml\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/tanks_xml.xml\n// module id = 32\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/tanks.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/tanks.png\n// module id = 33\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/grassLayer.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/grassLayer.png\n// module id = 34\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/backgroundElements.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/backgroundElements.png\n// module id = 35\n// module chunks = 0","import State from './state';\nimport AssetsUtils from '../util/Assets';\nimport { States } from '../constants/GameConstants';\n\nexport class PreloadState extends State {\n  constructor() {\n    super();\n    console.log(this.load);\n  }\n\n  preload() {\n\n    AssetsUtils.setLoadingScreen(this);\n    // Reminder to me: When loading phaser assets, it must be done on a state prior to the state of usage!\n    AssetsUtils.loadAll();\n    // Set World variables\n    this.game.physics.startSystem(Phaser.Physics.P2JS);\n    this.game.physics.p2.gravity.y = 1400;\n    this.game.physics.p2.setImpactEvents(true);\n    this.game.physics.p2.setBoundsToWorld(true, true, true, true);\n\n  }\n\n  create() {\n    // todo: Set main menu instead of level one\n    this.game.state.start(States.GAME_STATE);\n  }\n\n  update() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/preload.state.ts","import State from './state';\r\nimport Input from '../util/input';\r\nimport TankWorldFactory from '../TankWorldFactory';\r\nimport { ComponentType, InputType } from '../constants/GameConstants';\r\nimport { Entity } from '../entities/entity';\r\nimport { MovableComponent } from '../component/movable.component';\r\nimport { ShootComponent } from '../component/shoot.component';\r\nimport CollisionGroup = Phaser.Physics.P2.CollisionGroup;\r\n\r\nexport class GameState extends State {\r\n  private _input: Input;\r\n  private _inputSubscription;\r\n  private _direction: InputType;\r\n  private _factory: TankWorldFactory;\r\n\r\n\r\n  constructor() {\r\n    super();\r\n    this._input = new Input();\r\n  }\r\n\r\n  preload() {\r\n    // As we have generated our own world bounds we need to reset them and tell phaser we have them in a group, which rests in factort\r\n    this._factory = new TankWorldFactory(this.game);\r\n  }\r\n\r\n  create() {\r\n    // Input\r\n    let player: Entity = this._factory.newPlayer();\r\n    this._input.add(this.game.input.keyboard.addKey(Phaser.Keyboard.RIGHT), InputType.RIGHT_INPUT);\r\n    this._input.add(this.game.input.keyboard.addKey(Phaser.Keyboard.LEFT), InputType.LEFT_INPUT);\r\n    this._input.add(this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR), InputType.SHOOT);\r\n\r\n    // Subscribe to inputs\r\n    this._inputSubscription = this._input.emitter.subscribe((input: InputType) => {\r\n        input !== InputType.SHOOT.toString() ? player.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = input\r\n                                             : player.getComponent<ShootComponent>(ComponentType.SHOOT).canShoot = true;\r\n    });\r\n    this._factory.newEnemy();\r\n  }\r\n\r\n  update() {\r\n    this._input.run();\r\n    this._factory.entities.forEach((e) => {\r\n      e.update();\r\n    });\r\n  }\r\n  shutdown(){\r\n    // Ensure no memory leaks\r\n    this._inputSubscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/game.state.ts","import { Subject } from 'rxjs/Subject';\nimport { InputType } from '../constants/GameConstants';\n\nexport default class Input {\n  private _emitter: Subject<InputType>;\n  private _map: Map<any, InputType>;\n  private _game: Phaser.Game;\n\n  constructor(){\n    this._map = new Map<Phaser.Key, InputType>();\n    this._emitter = new Subject();\n  }\n  add(condition: Phaser.Key, action: InputType){\n    this._map.set(condition, action);\n  }\n\n  run(){\n    this._map.forEach((value: InputType, key: Phaser.Key) => {\n      if (key.isDown === true)  {\n        this._emitter.next(value);\n      }\n    });\n  }\n  get emitter(): Subject<InputType> {\n    return this._emitter;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/input.ts","import {CameraComponent} from './component/camera.component';\nimport {MovableComponent} from './component/movable.component';\nimport {Entity} from './entities/entity';\nimport {Action, ComponentType, FSMStates, Levels, TankLayout} from './constants/GameConstants';\nimport {PhysicsComponent} from './component/physics.component';\nimport TankLevel from './config/levels/tankLevel';\nimport {LevelOne} from './config/levels/levelOne';\nimport {ShootComponent} from './component/shoot.component';\nimport {LayerComponent} from './component/layer.component';\nimport {BulletComponent} from './component/bullet.component';\nimport {CollisionsComponent} from './component/collisions.component';\nimport CollisionGroup = Phaser.Physics.P2.CollisionGroup;\nimport {AiComponent} from './component/ai.component';\nimport {StateComponent} from './component/state.component';\nimport {IdleState} from './fsm/idle.state';\nimport {SeekState} from './fsm/seek.state';\nimport {FiringState} from './fsm/firing.state';\nimport {OwnerComponent} from './component/owner.component';\nimport {Guid} from './util/guid';\nimport {FleeState} from './fsm/flee.state';\n\nexport default class TankWorldFactory {\n\n  private _game: Phaser.Game;\n  private _player: Entity;\n  // Levels\n  private _currentLevel: TankLevel;\n\n  // Arrays\n  private _levels: Array<TankLevel> = [];\n  private _entities: Array<Entity> = [];\n\n  // Collision Groups\n  private _tankCollisionGroup: CollisionGroup;\n  private _enemyTankCollisionGroup: CollisionGroup;\n  private _bulletCollisionGroup: CollisionGroup;\n  private _enemyBulletsCollisionGroup: CollisionGroup;\n  private _groundCollisionGroup: CollisionGroup;\n\n  // Phaser groups\n  private _tanks: Phaser.Group;\n  private _bullets: Phaser.Group;\n\n  constructor(game: Phaser.Game) {\n    this._levels.push(new LevelOne(game));\n    this._levels.forEach((level: TankLevel) => {\n      level.init();\n    });\n\n    this._currentLevel = this._levels[0];\n    this._game = game;\n\n    // init collision groups\n\n    this._tankCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    this._bulletCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    this._groundCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    this._enemyTankCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    this._enemyBulletsCollisionGroup = this._game.physics.p2.createCollisionGroup();\n\n    // Have to do this here as we cannot enforce layer to be Entity to attach component\n    this._currentLevel.collisionLayer.forEach((layer) => {\n      layer.setCollisionGroup(this._groundCollisionGroup);\n      layer.collides([\n        this._tankCollisionGroup, this._bulletCollisionGroup,\n        this._enemyBulletsCollisionGroup, this._enemyTankCollisionGroup\n      ]);\n    });\n\n    // Force all groups to collide with world bounds\n    this._game.physics.p2.updateBoundsCollisionGroup();\n  }\n\n  public newPlayer(): Entity {\n    let player = new Entity(this._game, this._currentLevel.playerStartPos.x, this._currentLevel.playerStartPos.y)\n      .withComponent(\n        [new MovableComponent(),\n          new CameraComponent(this._game),\n          new PhysicsComponent(this._game),\n          new ShootComponent(this._game, this),\n          new LayerComponent(),\n          new CollisionsComponent()]);\n\n    player.getComponent<CameraComponent>(ComponentType.CAMERA).setFocus(player.sprite);\n    player.getComponent<PhysicsComponent>(ComponentType.PHYSICS)\n      .addPhysics()\n      .delayGravity(false);\n\n    player.getComponent<LayerComponent>(ComponentType.LAYER).addLayer(TankLayout.CANDY_HUNTER);\n\n    player.getComponent<CollisionsComponent>(ComponentType.COLLISION)\n      .setCollisionGroup(this._tankCollisionGroup)\n      .collidesWith(this._groundCollisionGroup, [Action.NOTHING])\n      .collidesWith(this._enemyTankCollisionGroup, [Action.NOTHING])\n      .collidesWith(this._enemyBulletsCollisionGroup, [Action.NOTHING]);\n\n    this._entities.push(player);\n    this._player = player;\n\n    this._player.sprite.data = {\n      tag: Guid.newGuid()\n    };\n    return player;\n  }\n\n  public newEnemy() {\n    let enemy = new Entity(this._game, this._currentLevel.enemyStartPos.x, this._currentLevel.enemyStartPos.y, null)\n      .withComponent(\n        [\n          new MovableComponent(),\n          new PhysicsComponent(this._game),\n          new ShootComponent(this._game, this),\n          new LayerComponent(),\n          new CollisionsComponent(),\n          new StateComponent(),\n          new AiComponent(this._player)]);\n\n    enemy.getComponent<StateComponent>(ComponentType.STATE)\n      .addState(FSMStates.SEEK, new SeekState())\n      .addState(FSMStates.IDLE, new IdleState())\n      .addState(FSMStates.FIRING, new FiringState())\n      .addState(FSMStates.FLEEING, new FleeState())\n      .setState(FSMStates.IDLE);\n\n    enemy.getComponent<PhysicsComponent>(ComponentType.PHYSICS)\n      .addPhysics()\n      .flipSprite();\n\n    enemy.getComponent<LayerComponent>(ComponentType.LAYER).addLayer(TankLayout.DARK_ARTILLERY);\n    enemy.getComponent<CollisionsComponent>(ComponentType.COLLISION)\n      .setCollisionGroup(this._enemyTankCollisionGroup)\n      .collidesWith(this._groundCollisionGroup, [Action.NOTHING])\n      .collidesWith(this._tankCollisionGroup, [Action.NOTHING])\n      .collidesWith(this._bulletCollisionGroup, [Action.NOTHING]);\n\n    this._entities.push(enemy);\n    enemy.sprite.data = {\n      tag: Guid.newGuid()\n    };\n    return enemy;\n  }\n\n  public newBullet(x: number, y: number, owner: Entity): Entity {\n\n    let bullet = new Entity(this._game, x, y)\n      .withComponent([new PhysicsComponent(this._game), new LayerComponent(),\n        new BulletComponent(this._game), new CollisionsComponent(),\n        new OwnerComponent()]);\n\n    bullet.getComponent<OwnerComponent>(ComponentType.OWNER).owner = owner;\n    bullet.getComponent<PhysicsComponent>(ComponentType.PHYSICS)\n      .addPhysics(false);\n\n    bullet.getComponent<LayerComponent>(ComponentType.LAYER).addLayer(TankLayout.BULLET_FIVE);\n    bullet.getComponent<BulletComponent>(ComponentType.BULLET)\n      .bulletInit();\n\n    bullet.getComponent<CollisionsComponent>(ComponentType.COLLISION)\n      .setCollisionGroup(this.setBulletColisionGroup(owner))\n      .collidesWith(this._tankCollisionGroup, [Action.EXPLODE, Action.DAMAGE])\n      .collidesWith(this._groundCollisionGroup, [Action.EXPLODE]);\n\n    this._entities.push(bullet);\n    return bullet;\n\n  }\n\n  get entities(): Array<Entity> {\n    return this._entities;\n\n  }\n\n  private setBulletColisionGroup(owner: Entity): CollisionGroup {\n    if (owner.sprite.data.tag === this._player.sprite.data.tag) {\n      return this._bulletCollisionGroup;\n    }\n    return this._enemyBulletsCollisionGroup;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/TankWorldFactory.ts","import { ComponentType } from '../constants/GameConstants';\nimport { Component } from './component';\nimport { Entity } from '../entities/entity';\n\nexport class CameraComponent extends Component{\n  private _game: Phaser.Game;\n\n  constructor(game: Phaser.Game) {\n    super(ComponentType.CAMERA);\n    this._game = game;\n  }\n  setFocus(entity: Phaser.Sprite) {\n    this._game.camera.follow(entity);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/camera.component.ts","import { Component } from './component';\nimport { ComponentType, InputType } from '../constants/GameConstants';\nimport Print from '../util/print';\n\nexport class MovableComponent extends Component {\n\n  private _speed: number = 300;\n  private _direction: InputType;\n  private _isMoving: boolean = false;\n\n  constructor() {\n    super(ComponentType.MOVABLE);\n  }\n\n  private _correctRotation() {\n    if (this.target.sprite.body.velocity.x > 0 && this.target.sprite.body.velocity.y < 0) {\n      this.target.sprite.body.angle = Math.atan2(this.target.sprite.body.velocity.y, this.target.sprite.body.velocity.x) * 180 / Math.PI;\n    }\n    if (this.target.sprite.body.velocity.x < 0 && this.target.sprite.body.velocity.y < 0) {\n      this.target.sprite.body.angle = Math.atan2(-this.target.sprite.body.velocity.y, -this.target.sprite.body.velocity.x) * 180 / Math.PI;\n    }\n  }\n\n  private moveRight(): void {\n    this.target.sprite.body.moveRight(this._speed);\n  }\n  private moveLeft(): void {\n    this.target.sprite.body.moveLeft(this._speed);\n  }\n  public update(){\n    switch (this._direction) {\n      case InputType.LEFT_INPUT:\n        this.moveLeft();\n        this._correctRotation();\n        this._direction = InputType.STOP;\n        break;\n      case InputType.RIGHT_INPUT:\n        this.moveRight();\n        this._correctRotation();\n        this._direction = InputType.STOP;\n        break;\n      default:\n        break;\n    }\n  }\n\n  get direction(): InputType {\n    return this._direction;\n  }\n\n  set direction(value: InputType) {\n    this._direction = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/movable.component.ts","import { Component } from '../component/component';\nimport { ComponentType, FSMStates, TankLayout } from '../constants/GameConstants';\nimport StateMachine from '../fsm/stateMachine';\n\nexport class Entity {\n\n  private _components: Map<string, Component> = new Map();\n  private _sprite: Phaser.Sprite;\n  private _owner: Entity;\n\n  constructor(game: Phaser.Game, x: number, y: number, components?: Array<Component>) {\n    if (components) {\n        components.forEach((component: Component) => {\n          this.addComponent(component);\n        });\n    }\n    this._sprite = game.add.sprite(x, y, TankLayout.TANK_SPRITESHEET);\n\n  }\n\n  private addComponent(component: Component): Component {\n    this._components.set(component.name, component);\n    this._components.get(component.name).target = this;\n    return component;\n  }\n\n  public getComponent<T extends Component>(componentName: string): T {\n    return this._components.get(componentName) as T;\n  }\n\n  public update(): void {\n    this._components.forEach((componentType) => {\n      this._components.get(componentType.name).update();\n    });\n  }\n  withComponent(components: Array<Component>): this {\n    if (components) {\n      components.forEach((component: Component) => {\n        this.addComponent(component);\n      });\n      return this;\n    }\n  }\n\n  get components(): Map<string, Component> {\n    return this._components;\n  }\n  get sprite(): Phaser.Sprite {\n    return this._sprite;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/entity.ts","import { Component } from './component';\nimport { ComponentType } from '../constants/GameConstants';\nimport Vector from '../util/vector';\n\nexport class PhysicsComponent extends Component {\n  private _game: Phaser.Game;\n\n  constructor(game: Phaser.Game) {\n    super(ComponentType.PHYSICS);\n    this._game = game;\n  }\n\n  public addPhysics(gravity: boolean = true): PhysicsComponent {\n    this._game.physics.p2.enable(this.target.sprite);\n    this.target.sprite.anchor.setTo(0.5, 0.5);\n    gravity ? this.target.sprite.body.angularDamping = 0.7 : this.target.sprite.body.angularDamping = 0.0;\n\n    return this;\n  }\n\n  public delayGravity(bool: boolean = true, delay: number = 2000) {\n    this.target.sprite.body.enableGravity = false;\n    if (bool) {\n      setInterval(() => {\n        this.target.sprite.body.enableGravity = true;\n      }, delay);\n    }\n  }\n\n  public flipSprite(): PhysicsComponent{\n    this.target.sprite.scale.x = -1;\n    return this;\n  }\n  public stopSprite() {\n    this.target.sprite.body.motionState = Phaser.Physics.P2.Body.STATIC;\n    this.target.sprite.body.restitution = 0.0;\n    this.target.sprite.body.velocity.x = 0;\n    this.target.sprite.body.velocity.y = 0;\n    this.target.sprite.body.allowGravity = false;\n    this.target.sprite.body.angularDumping = 1;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/physics.component.ts","import TankLevel from './tankLevel';\nimport { Levels, TankLayout, TileLayers } from '../../constants/GameConstants';\nimport Vector from '../../util/vector';\nimport CollisionGroup = Phaser.Physics.P2.CollisionGroup;\n\nexport class LevelOne extends TankLevel {\n  constructor(game: Phaser.Game){\n    super(game);\n  }\n\n  public init(): void {\n    let map = this._game.add.tilemap(Levels.LEVEL_ONE);\n    map.addTilesetImage(TileLayers.GRASS_LAYER, TileLayers.GRASS_LAYER);\n    map.addTilesetImage(TileLayers.BACKGROUND, TileLayers.BACKGROUND);\n\n    map.createLayer('SkySecondary').resizeWorld();\n    map.createLayer('SkyPrimary').resizeWorld();\n    map.createLayer('GroundSecondary').resizeWorld();\n    map.createLayer('GroundPrimary').resizeWorld();\n\n    this._collisionLayer = this._game.physics.p2.convertCollisionObjects(map, 'GroundPath', true);\n\n    this._playerStartPos = new Vector(this._game.world.bounds.left, this._game.world.centerY + 100);\n    this._enemyStartPos = new Vector(this._game.world.bounds.right, this._game.world.centerY);\n\n  }\n\n  public destroy(): void {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/levels/levelOne.ts","import { Entity } from '../../entities/entity';\nimport Vector from '../../util/vector';\n\nexport default abstract class TankLevel {\n  // vars\n  protected _enemies: Phaser.Group;\n  protected _playerStartPos: Vector;\n  protected _enemyStartPos: Vector;\n  protected _game: Phaser.Game;\n  protected _collisionLayer: Array<Phaser.Physics.P2.Body>;\n\n\n  constructor(game: Phaser.Game){\n    this._game = game;\n  }\n\n  // functions\n  public abstract init(): void;\n  public abstract destroy(): void;\n  protected spawnEnemy(): Entity {\n    return null;\n  }\n\n  get enemies(): Phaser.Group {\n    return this._enemies;\n  }\n\n  get playerStartPos(): Vector {\n    return this._playerStartPos;\n  }\n\n  get enemyStartPos(): Vector {\n    return this._enemyStartPos;\n  }\n  get collisionLayer(): Array<Phaser.Physics.P2.Body>{\n    return this._collisionLayer;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/levels/tankLevel.ts","export default class Vector {\n\n  private _x: number;\n  private _y: number;\n\n  constructor(x?: number, y?: number){\n    this._x = x;\n    this._y = y;\n  }\n\n  get x(): number {\n    return this._x;\n  }\n\n  set x(value: number) {\n    this._x = value;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n\n  set y(value: number) {\n    this._y = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/vector.ts","import { ComponentType, InputType, TankWorldEvents } from '../constants/GameConstants';\nimport { Component } from './component';\nimport TankWorldFactory from '../TankWorldFactory';\n\nexport class ShootComponent extends Component{\n  private _canShoot: boolean = false;\n  private _factory: TankWorldFactory;\n  private _timer = 0;\n\n  constructor(game: Phaser.Game, factory: TankWorldFactory){\n      super(ComponentType.SHOOT);\n      this._factory = factory;\n    }\n\n    update(){\n      if (this._canShoot) {\n        this._canShoot = false;\n        if (Date.now() - this._timer > 1500) {\n          this.shootBullet();\n        }\n      }\n    }\n  set canShoot(value: boolean) {\n    this._canShoot = value;\n  }\n\n  private shootBullet(){\n    this._factory.newBullet(this.target.sprite.x + 50 , this.target.sprite.y - 20, this.target);\n    this._timer = Date.now();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/shoot.component.ts","import {Component} from './component';\nimport {ComponentType} from '../constants/GameConstants';\n\nexport class LayerComponent extends Component {\n  constructor() {\n    super(ComponentType.LAYER);\n  }\n\n  addLayer(cachedName: string) {\n    if (cachedName) {\n      this.target.sprite.frameName = cachedName;\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/layer.component.ts","import { Component } from './component';\nimport { ComponentType } from '../constants/GameConstants';\nimport { OwnerComponent } from './owner.component';\nimport { MathUtil } from '../util/math.util';\nimport { AiComponent } from './ai.component';\n\nexport class BulletComponent extends Component {\n  private _game: Phaser.Game;\n  // todo: Should this be on the PhysicsComponent?\n  constructor(game: Phaser.Game) {\n    super(ComponentType.BULLET);\n    this._game = game;\n    this._requiredComponents.push(ComponentType.OWNER);\n  }\n\n  bulletInit() {\n    let cOwner = this.target.getComponent<OwnerComponent>(ComponentType.OWNER);\n    if (!cOwner) {\n      return;\n    }\n\n    let seekObject = {\n      x: this._game.input.activePointer.x,\n      y: this._game.input.activePointer.y\n    };\n\n    // Check if there is an AIComponent if yes this is not our player\n    let ownerComponent = this.target.getComponent<OwnerComponent>(ComponentType.OWNER);\n    let aiComponent = ownerComponent ? ownerComponent.owner.getComponent<AiComponent>(ComponentType.AI) : null;\n    if (aiComponent) {\n      // If yes do not fire bulet according to mouse but to player; AIComponent knows where the player is\n      seekObject.x = aiComponent.player.sprite.x;\n      seekObject.y = aiComponent.player.sprite.y;\n    }\n    this.accelerateToObject(this.target.sprite, seekObject);\n  }\n\n  private degToRad(degrees: number): number {\n    return degrees * Math.PI / 180;\n  }\n\n  private accelerateToObject(obj1, obj2, speed = 1400) {\n    let angle = Math.atan2(obj2.y - obj1.y, obj2.x - obj1.x);\n    obj1.body.velocity.x = Math.cos(angle) * speed;    // accelerateToObject\n    obj1.body.velocity.y = Math.sin(angle) * speed;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/bullet.component.ts","import { Component } from './component';\r\nimport { Action, ComponentType, TankLayout } from '../constants/GameConstants';\r\nimport { PhysicsComponent } from './physics.component';\r\nimport CollisionGroup = Phaser.Physics.P2.CollisionGroup;\r\nimport { OwnerComponent } from './owner.component';\r\n\r\nexport class CollisionsComponent extends Component {\r\n  private _ignoreCollision: boolean = true;\r\n\r\n  constructor() {\r\n    super(ComponentType.COLLISION);\r\n    this._requiredComponents = [ComponentType.PHYSICS];\r\n  }\r\n\r\n  public setCollisionGroup(ownerCollisionGroup: CollisionGroup): CollisionsComponent {\r\n    this.target.sprite.body.setCollisionGroup(ownerCollisionGroup);\r\n    return this;\r\n  }\r\n\r\n  public collidesWith(collidesWith: CollisionGroup, actions: Array<Action>): CollisionsComponent {\r\n    let body: Phaser.Physics.P2.Body = this.target.sprite.body;\r\n\r\n    if (body.collidesWith.includes(collidesWith)) {\r\n      return; // In case we attempt to set the same collision group twice\r\n    }\r\n\r\n    actions.forEach((action) => {\r\n      switch (action) {\r\n        case Action.NOTHING:\r\n          body.collides(collidesWith);\r\n          break;\r\n\r\n        case Action.EXPLODE:\r\n          body.collides(collidesWith, this.explode, this);\r\n          break;\r\n\r\n        case Action.DAMAGE:\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  private explode(ownerBody: Phaser.Physics.P2.Body, impacted: Phaser.Physics.P2.Body): void {\r\n    // If layout is imported with tiled, which we do the body doesn't have a sprite therefor would throw an exception\r\n    let impactedSprite = impacted.sprite;\r\n    let ownerComponent = this.target.getComponent<OwnerComponent>(ComponentType.OWNER);\r\n    if (impactedSprite) {\r\n      // not all entities have an owner\r\n      if (ownerComponent) {\r\n        if (ownerComponent.owner.sprite.data.tag === impactedSprite.data.tag) {\r\n          return; // do nothing\r\n        }\r\n      }\r\n    }\r\n    this.target.getComponent<PhysicsComponent>(ComponentType.PHYSICS).stopSprite();\r\n    ownerBody.sprite.animations.add(Action.EXPLODE, Phaser.Animation.generateFrameNames('tank_explosion', 1, 8, '.png'), 15, false);\r\n    ownerBody.sprite.animations.play(Action.EXPLODE).onComplete.add(() => {\r\n      ownerBody.sprite.kill();\r\n      ownerBody.sprite.destroy();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/collisions.component.ts","import {Component} from './component';\nimport {ComponentType, FSMStates} from '../constants/GameConstants';\nimport {Entity} from '../entities/entity';\nimport {StateComponent} from './state.component';\nimport {MathUtil} from '../util/math.util';\n\nexport class AiComponent extends Component {\n  private _player: Entity;\n\n  constructor(player: Entity) {\n    super(ComponentType.AI);\n    this._requiredComponents = [ComponentType.MOVABLE, ComponentType.PHYSICS, ComponentType.SHOOT];\n    this._player = player;\n  }\n\n  update() {\n    this.decide();\n  }\n\n  private decide() {\n    let distance: number = MathUtil.normalize(this._player.sprite.x - this.target.sprite.x);\n    // Justify this in the report say tanks can only spawn on the right of the player\n    let sComp = this._target.getComponent<StateComponent>(ComponentType.STATE);\n    console.log(Math.abs(distance));\n    if (sComp) {\n      if (Math.abs(distance) >= 0.15) {\n        sComp.setState(FSMStates.SEEK);\n      } else if (Math.abs(distance) <= 0.08) {\n        sComp.setState(FSMStates.FLEEING);\n      }\n      else {\n        sComp.setState(FSMStates.FIRING);\n      }\n    }\n  }\n\n  get player(): Entity {\n    return this._player;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/ai.component.ts","export class MathUtil {\n  public static normalize(val, max = 4941, min = -46) {\n    return (val - min) / (max - min);\n  }\n  public static degToRad(degrees: number): number {\n    return degrees * Math.PI / 180;\n  }\n  public static radToDeg(rad: number): number {\n    return rad * 180 / Math.PI;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/math.util.ts","import { ComponentType, FSMStates } from '../constants/GameConstants';\nimport { Component } from './component';\nimport StateMachine from '../fsm/stateMachine';\nimport { State } from '../fsm/state';\n\nexport class StateComponent extends Component{\n  private _fsm: StateMachine;\n  constructor(){\n    super(ComponentType.STATE);\n    this._fsm = new StateMachine();\n  }\n  public addState(name: FSMStates, state: State): StateComponent {\n    this._fsm.add(name, state);\n    state.entity = this.target;\n    return this;\n  }\n  public setState(name: FSMStates): StateComponent {\n    this._fsm.enter(name);\n    return this;\n  }\n  update(): void {\n      this._fsm.update();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/state.component.ts","import {FSMStates} from '../constants/GameConstants';\nimport {State} from './state';\n\nexport default class StateMachine {\n\n  private _states: Map<FSMStates, State>;\n  private _current: State;\n\n  constructor(){\n    this._states = new Map();\n  }\n  public add(name: FSMStates, state: State) {\n    this._states.set(name, state);\n  }\n  public enter(name: FSMStates){\n    if (this._current) {\n      this._current.leave();\n    }\n    this._current = this._states.get(name);\n    this._current.enter();\n  }\n  public update(){\n    if (this._current) {\n      this._current.update();\n    }\n  }\n  public hasState(name: FSMStates): boolean {\n    return this._states.has(name);\n  }\n  public get current(): State{\n    return this._current;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fsm/stateMachine.ts","\nimport {State} from './state';\n\nexport class IdleState extends State {\n\n  enter(): void {\n    console.log('Idle state enter function');\n  }\n\n  leave(): void {\n    console.log('Idle state leave function');\n  }\n\n  update(): void {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fsm/idle.state.ts","import { State } from './state';\nimport { MovableComponent } from '../component/movable.component';\nimport { ComponentType, InputType } from '../constants/GameConstants';\n\nexport class SeekState extends State {\n\n  enter(): void {\n    // We know any component implementing SeekState will have an AI component\n    this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.LEFT_INPUT;\n  }\n\n  leave(): void {\n    this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.STOP;\n  }\n\n  update(): void {\n    this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).update();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fsm/seek.state.ts","import {State} from './state';\nimport {ComponentType} from '../constants/GameConstants';\nimport {ShootComponent} from '../component/shoot.component';\n\nexport class FiringState extends State {\n  enter(): void {\n    this._entity.getComponent<ShootComponent>(ComponentType.SHOOT).canShoot = true;\n  }\n\n  leave(): void {\n    this._entity.getComponent<ShootComponent>(ComponentType.SHOOT).canShoot = false;\n  }\n\n  update(): void {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fsm/firing.state.ts","import {Component} from './component';\nimport {ComponentType} from '../constants/GameConstants';\nimport {Entity} from '../entities/entity';\n\nexport class OwnerComponent extends Component{\n  private _owner: Entity;\n  constructor(){\n    super(ComponentType.OWNER);\n  }\n  set owner(owner: Entity){\n    this._owner = owner;\n  }\n  get owner(): Entity {\n    return this._owner;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/owner.component.ts","export class Guid {\n  static newGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/guid.ts","import {ComponentType, InputType} from '../constants/GameConstants';\nimport {MovableComponent} from '../component/movable.component';\nimport {State} from './state';\n\nexport class FleeState extends State {\n\n  enter(): void {\n    // We know any component implementing SeekState will have an AI component\n    this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.RIGHT_INPUT;\n  }\n\n  leave(): void {\n    this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.STOP;\n  }\n\n  update(): void {\n    this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).update();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fsm/flee.state.ts","export declare let DEBUG: boolean;\r\nexport declare let DEFAULT_GAME_WIDTH: number;\r\nexport declare let DEFAULT_GAME_HEIGHT: number;\r\nexport declare let MAX_GAME_WIDTH: number;\r\nexport declare let MAX_GAME_HEIGHT: number;\r\nexport declare let SCALE_MODE: string;\r\n\r\n/*\r\n    The Screen[...] classes are modified versions of the classes in an article I found.\r\n    Author: Tomáš Rychnovský\r\n    Article: http://sbcgamesdev.blogspot.ca/2015/04/phaser-tutorial-manage-different-screen.html\r\n    Date: Thursday, April 9, 2015\r\n    Big thanks to Tomáš!\r\n\r\n */\r\n\r\nexport enum ScreenOrientation {\r\n  PORTRAIT,\r\n  LANDSCAPE\r\n}\r\n\r\nexport class ScreenMetrics {\r\n  windowWidth: number;\r\n  windowHeight: number;\r\n\r\n  defaultGameWidth: number;\r\n  defaultGameHeight: number;\r\n\r\n  maxGameWidth: number;\r\n  maxGameHeight: number;\r\n\r\n  gameWidth: number;\r\n  gameHeight: number;\r\n\r\n  scaleX: number;\r\n  scaleY: number;\r\n\r\n  offsetX: number;\r\n  offsetY: number;\r\n}\r\n\r\nexport class ScreenUtils {\r\n  public static screenMetrics: ScreenMetrics;\r\n\r\n  public static calculateScreenMetrics(defaultWidth: number, defaultHeight: number, orientation: ScreenOrientation = ScreenOrientation.LANDSCAPE, maxGameWidth?: number, maxGameHeight?: number): ScreenMetrics {\r\n    // Just to give some explanation as to the numbers and colors in the included background;\r\n    // The GREEN is the safe area and will be displayed fully on any device and is based on 16:10 aspect ratio, build your actual gameplay here\r\n    // The YELLOW is the extra area that will be visible on devices with a 3:2 aspect ratio (iPhone 4S and below)\r\n    // The BLUE is the extra area that will be visible on devices with a 4:3 aspect ratio (iPads)\r\n    // The RED is the extra area that will be visible on devices with a 16:9 aspect ratio (iPhone 5 and above) (this is probably the most common ratio overall...)\r\n    // The GREY area will most likely never be seen, unless some device has a really odd aspect ratio (and with Android, I wouldn't be surprised if there is a few out there)\r\n    this.screenMetrics = new ScreenMetrics();\r\n\r\n    this.screenMetrics.windowWidth = window.innerWidth;\r\n    this.screenMetrics.windowHeight = window.innerHeight;\r\n\r\n    this.screenMetrics.defaultGameWidth = defaultWidth;\r\n    this.screenMetrics.defaultGameHeight = defaultHeight;\r\n\r\n    // Swap width and height if necessary to match the specified orientation\r\n    let dimensionsOppositeForLandscape: boolean = ((this.screenMetrics.windowWidth < this.screenMetrics.windowHeight) && orientation === ScreenOrientation.LANDSCAPE);\r\n    let dimensionsOppositeForPortrait: boolean = ((this.screenMetrics.windowHeight < this.screenMetrics.windowWidth) && orientation === ScreenOrientation.PORTRAIT);\r\n\r\n    if (dimensionsOppositeForLandscape || dimensionsOppositeForPortrait) {\r\n      [this.screenMetrics.windowWidth, this.screenMetrics.windowHeight] = [this.screenMetrics.windowHeight, this.screenMetrics.windowWidth];\r\n    }\r\n\r\n    // Calculate the max width and max height if not provided; ratios are based off iPad (4:3) and iPhone 5+ (16:9) as the extremes in both width and height\r\n    if (!maxGameWidth || !maxGameHeight) {\r\n      if (orientation === ScreenOrientation.LANDSCAPE) {\r\n        this.screenMetrics.maxGameWidth = Math.round(this.screenMetrics.defaultGameWidth * (MAX_GAME_WIDTH / DEFAULT_GAME_WIDTH));\r\n        this.screenMetrics.maxGameHeight = Math.round(this.screenMetrics.defaultGameHeight * (MAX_GAME_HEIGHT / DEFAULT_GAME_HEIGHT));\r\n      } else {\r\n        this.screenMetrics.maxGameWidth = Math.round(this.screenMetrics.defaultGameWidth * (MAX_GAME_HEIGHT / DEFAULT_GAME_HEIGHT));\r\n        this.screenMetrics.maxGameHeight = Math.round(this.screenMetrics.defaultGameHeight * (MAX_GAME_WIDTH / DEFAULT_GAME_WIDTH));\r\n      }\r\n    } else {\r\n      this.screenMetrics.maxGameWidth = maxGameWidth;\r\n      this.screenMetrics.maxGameHeight = maxGameHeight;\r\n    }\r\n\r\n    let defaultAspectRatio: number = ((orientation === ScreenOrientation.LANDSCAPE) ? (DEFAULT_GAME_WIDTH / DEFAULT_GAME_HEIGHT) : (DEFAULT_GAME_HEIGHT / DEFAULT_GAME_WIDTH));\r\n    let windowAspectRatio: number = (this.screenMetrics.windowWidth / this.screenMetrics.windowHeight);\r\n\r\n    if (windowAspectRatio > defaultAspectRatio) {\r\n      this.screenMetrics.gameHeight = this.screenMetrics.defaultGameHeight;\r\n      this.screenMetrics.gameWidth = (Math.ceil((this.screenMetrics.gameHeight * windowAspectRatio) * 0.5) * 2);\r\n      this.screenMetrics.gameWidth = Math.min(this.screenMetrics.gameWidth, this.screenMetrics.maxGameWidth);\r\n\r\n      this.screenMetrics.offsetX = ((this.screenMetrics.gameWidth - this.screenMetrics.defaultGameWidth) * 0.5);\r\n      this.screenMetrics.offsetY = 0;\r\n    } else {\r\n      this.screenMetrics.gameWidth = this.screenMetrics.defaultGameWidth;\r\n      this.screenMetrics.gameHeight = (Math.ceil((this.screenMetrics.gameWidth / windowAspectRatio) * 0.5) * 2);\r\n      this.screenMetrics.gameHeight = Math.min(this.screenMetrics.gameHeight, this.screenMetrics.maxGameHeight);\r\n\r\n      this.screenMetrics.offsetX = 0;\r\n      this.screenMetrics.offsetY = ((this.screenMetrics.gameHeight - this.screenMetrics.defaultGameHeight) * 0.5);\r\n    }\r\n\r\n    // Calculate scaling\r\n    this.screenMetrics.scaleX = (this.screenMetrics.windowWidth / this.screenMetrics.gameWidth);\r\n    this.screenMetrics.scaleY = (this.screenMetrics.windowHeight / this.screenMetrics.gameHeight);\r\n\r\n    return this.screenMetrics;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/ScreenMetrics.ts"],"sourceRoot":""}