{"version":3,"sources":["webpack:///./src/constants/GameConstants.ts","webpack:///./src/config/data.config.ts","webpack:///./src/util/math.util.ts","webpack:///./src/component/component.ts","webpack:///./src/UI/uimanagers.ts","webpack:///./src/util/vector.ts","webpack:///./src/index.ts","webpack:///./styles/style.styl","webpack:///./src/util/ScreenMetrics.ts","webpack:///./src/states/gameStates.ts","webpack:///./src/UI/Assets.ts","webpack:///./assets/images/progressBar.png","webpack:///./assets/images/logo.png","webpack:///./assets/images/levelOneImage.png","webpack:///./assets/images/levelTwoImage.png","webpack:///./assets/images/tanks_tankDesert1.png","webpack:///./assets/images/tanks_tankDesert2.png","webpack:///./assets/images/tanks_tankDesert3.png","webpack:///./assets/images/tanks_tankDesert4.png","webpack:///./assets/images/tanks_tankDesert5.png","webpack:///./assets/levels/level1.json","webpack:///./assets/levels/level2.json","webpack:///./assets/spritesheet/tanks_xml.xml","webpack:///./assets/spritesheet/tanks.png","webpack:///./assets/spritesheet/grassLayer.png","webpack:///./assets/spritesheet/candyLayer.png","webpack:///./assets/spritesheet/backgroundElements.png","webpack:///./assets/spritesheet/UISpritesheet.png","webpack:///./assets/spritesheet/UISpritesheet_xml.xml","webpack:///./assets/spritesheet/playerVisuals.png","webpack:///./assets/spritesheet/playerVisuals.xml","webpack:///./src/TankWorldFactory.ts","webpack:///./src/entities/entity.ts","webpack:///./src/util/guid.ts","webpack:///./src/AI/fsm/fsm.states.ts","webpack:///./src/component/collision.components.ts","webpack:///./src/config/menu.config.ts","webpack:///./src/component/control.components.ts","webpack:///./src/component/data.components.ts","webpack:///./src/UI/tank.util.ts","webpack:///./src/component/action.components.ts","webpack:///./src/component/state.component.ts","webpack:///./src/AI/fsm/stateMachine.ts","webpack:///./src/util/input.ts","webpack:///./src/config/levels/levels.tankLevels.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAY,MAMX;AAND,WAAY,MAAM;IAChB,0CAAgC;IAChC,6CAAmC;IACnC,mCAAyB;IACzB,yCAA+B;IAC/B,mCAAyB;AAC3B,CAAC,EANW,MAAM,GAAN,cAAM,KAAN,cAAM,QAMjB;AAED,IAAY,MAGX;AAHD,WAAY,MAAM;IAChB,iCAAuB;IACvB,iCAAuB;AACzB,CAAC,EAHW,MAAM,GAAN,cAAM,KAAN,cAAM,QAGjB;AAED,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,+CAAU;IACV,2CAAQ;IACR,+CAAU;IACV,2CAAQ;AACV,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;AAED,IAAY,UA6BX;AA7BD,WAAY,UAAU;IACpB,qDAAuC;IAAE,qDAAuC;IAChF,mDAAqC;IAAE,kDAAoC;IAC3E,kDAAoC;IACpC,mDAAqC;IAAE,mDAAqC;IAC5E,iDAAmC;IAAE,gDAAkC;IACvE,gDAAkC;IAClC,sDAAwC;IAAE,uDAAyC;IACnF,oDAAsC;IAAE,mDAAqC;IAC7E,mDAAqC;IACrC,mDAAqC;IAAE,oDAAsC;IAC7E,iDAAmC;IAAE,gDAAkC;IACvE,gDAAkC;IAClC,6CAA+B;IAAE,6CAA+B;IAChE,+CAAiC;IAAE,8CAAgC;IACnE,8CAAgC;IAAE,6CAA+B;IACjE,mDAAqC;IACrC,mDAAqC;IACrC,qDAAuC;IACvC,oDAAsC;IACtC,oDAAsC;IACtC,mDAAqC;IACrC,qDAAuC;IACvC,qDAAuC;IACvC,oDAAsC;IACtC,oDAAsC;IACtC,uDAAyC;IACzC,uDAAyC;IACzC,kDAAoC;AACtC,CAAC,EA7BW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QA6BrB;AAED,IAAY,aAcX;AAdD,WAAY,aAAa;IACvB,gDAA+B;IAC/B,4CAA2B;IAC3B,wCAAuB;IACvB,0CAAyB;IACzB,0CAAyB;IACzB,oCAAmB;IACnB,kDAAiC;IACjC,4CAA2B;IAC3B,0CAAyB;IACzB,0CAAyB;IACzB,8CAA6B;IAC7B,4CAA2B;IAC3B,8CAA6B;AAC/B,CAAC,EAdW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAcxB;AAED,IAAY,YAiBX;AAjBD,WAAY,YAAY;IACtB,2CAA2B;IAC3B,6BAAa;IACb,yCAAyB;IACzB,kDAAkC;IAClC,qDAAqC;IACrC,gDAAgC;IAChC,gDAAgC;IAChC,mDAAmC;IACnC,mDAAmC;IACnC,yDAAyC;IAAE,2DAA2C;IACtF,qDAAqC;IAAE,mDAAmC;IAC1E,mDAAmC;IACnC,yEAAyD;IACzD,gDAAgC;IAChC,gDAAgC;IAChC,kDAAkC;AACpC,CAAC,EAjBW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAiBvB;AAED,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,wCAA0B;IAC1B,uCAAyB;IACzB,wCAA0B;AAC5B,CAAC,EAJW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAIrB;AAED,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,0BAAa;IACb,kCAAqB;IACrB,gCAAmB;IACnB,4BAAe;AACjB,CAAC,EALW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAKpB;AAED,IAAY,MAIX;AAJD,WAAY,MAAM;IAChB,oCAA0B;IAC1B,kCAAwB;IACxB,+BAAqB;AACvB,CAAC,EAJW,MAAM,GAAN,cAAM,KAAN,cAAM,QAIjB;AAED,IAAY,cAEX;AAFD,WAAY,cAAc;IACxB,mDAAiC;AACnC,CAAC,EAFW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAEzB;AAED,IAAY,YAOX;AAPD,WAAY,YAAY;IACtB,iDAAK;IACL,qDAAO;IACP,+CAAI;IACJ,+CAAI;IACJ,uDAAQ;IACR,qDAAO;AACT,CAAC,EAPW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAOvB;AAED,IAAY,eAQX;AARD,WAAY,eAAe;IACzB,wCAAqB;IACrB,4CAAyB;IACzB,8CAA2B;IAC3B,gDAA6B;IAC7B,kDAA+B;IAC/B,0DAAuC;IACvC,gCAAa;AACf,CAAC,EARW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAQ1B;AACD,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,mDAAQ;IACR,6CAAK;IACL,uDAAU;IACV,6DAAa;AACf,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;;;;;;;;;;ACpID,+CAA4E;AAE5E;;;KAGK;AACL;IAgBE;;;SAGK;IACL,MAAM,KAAK,KAAK;QACd,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;;SAIK;IACL,MAAM,KAAK,KAAK,CAAC,KAAa;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,MAAM,KAAK,IAAI,CAAC,KAAyI;QACvJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,MAAM,KAAK,IAAI;QACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;;;SAIK;IACL,MAAM,CAAC,UAAU;QACf,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;QAEvE,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED;;;SAGK;IACL,MAAM,CAAC,aAAa;QAClB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAChF,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3E,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACzG,UAAU,CAAC,YAAY,EAAE,CAAC;IAC5B,CAAC;IAED;;;SAGK;IACL,MAAM,CAAC,YAAY;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAGD,MAAM,KAAK,eAAe;QACxB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACzB,KAAK,0BAAU,CAAC,IAAI;gBAClB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,MAAM;gBACpB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,IAAI;gBAClB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,MAAM;gBACpB,MAAM,CAAC,CAAC,CAAC;YACX;gBACE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAED,MAAM,KAAK,WAAW;QACpB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACzB,KAAK,0BAAU,CAAC,IAAI,CAAC;YACrB,KAAK,0BAAU,CAAC,MAAM;gBACpB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,IAAI;gBAClB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,MAAM;gBACpB,MAAM,CAAC,EAAE,CAAC;YACZ;gBACE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IACD,MAAM,KAAK,YAAY;QACrB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACzB,KAAK,0BAAU,CAAC,IAAI;gBAClB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,MAAM;gBACpB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,IAAI,CAAC;YACrB,KAAK,0BAAU,CAAC,MAAM;gBACpB,MAAM,CAAC,CAAC,CAAC;YACX;gBACE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAED,MAAM,KAAK,WAAW;QACpB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACzB,KAAK,0BAAU,CAAC,IAAI,CAAC;YACrB,KAAK,0BAAU,CAAC,MAAM;gBACpB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,IAAI;gBAClB,MAAM,CAAC,CAAC,CAAC;YACX,KAAK,0BAAU,CAAC,MAAM;gBACpB,MAAM,CAAC,CAAC,CAAC;YACX;gBACE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAED,MAAM,KAAK,UAAU;QACnB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,MAAM,KAAK,UAAU,CAAC,KAAiB;QACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;;AAvIc,iBAAM,GAAW,sBAAM,CAAC,SAAS,CAAC;AAClC,gBAAK,GAKhB,0BAAU,CAAC,YAAY,CAAC;AACb,sBAAW,GAAe,0BAAU,CAAC,MAAM,CAAC;AAb7D,gCA8IC;;;;;;;;;;;ACpJD;IAES,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE;QAChD,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACnC,CAAC;IACM,MAAM,CAAC,QAAQ,CAAC,OAAe;QACpC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;IACjC,CAAC;IACM,MAAM,CAAC,QAAQ,CAAC,GAAW;QAChC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;IAC7B,CAAC;IACD;;;;;;SAMK;IACE,MAAM,CAAC,qBAAqB,CAAC,GAAW,EAAE,GAAW;QAE1D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC3D,CAAC;IAEK,MAAM,CAAC,SAAS,CAAC,SAAS,EAAG,GAAW,EAAG,GAAW;QAC1D,EAAE,CAAC,CAAC,GAAG,GAAG,SAAS,IAAI,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IAChB,CAAC;CACD;AA7BD,4BA6BC;;;;;;;;;;AC1BD;IAME,YAAY,IAAmB;QAFrB,wBAAmB,GAAyB,EAAE,CAAC;QAGvD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IACD,IAAI,IAAI;QACN,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,IAAI,MAAM;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,MAAM,CAAC,MAAc;QACvB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAEM,4BAA4B;QACjC,IAAI,WAAW,GAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,IAAmB,EAAE,EAAE;YACvD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACrC,WAAW,IAAI,sBAAsB,IAAI,CAAC,QAAQ,EAAE,oBAAoB,IAAI,CAAC,KAAK,GAAG,CAAC;YACxF,CAAC;QACH,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IACM,MAAM,CAAC,MAAY,IAAS,CAAC;CACrC;AAjCD,8BAiCC;;;;;;;;;;;;;;;;;;ACpCD,+CAGoC;AACpC,yCAAoC;AACpC,6CAAmD;AACnD,8CAAmD;AAEnD,IAAiB,UAAU,CA2kB1B;AA3kBD,WAAiB,UAAU;IACzB;QASE;;;;WAIG;QACI,MAAM,CAAC,gBAAgB,CAAC,KAAmB;YAChD,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,4BAAY,CAAC,IAAI,CAAC,CAAC;YACnG,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,EAAE,4BAAY,CAAC,YAAY,CAAC,CAAC;YAExH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvB,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC3C,CAAC;QAED;;;;;;;;;;;WAWG;QACK,MAAM,CAAC,SAAS,CAAC,SAAiB,EAAE,QAAuB,EAC1C,KAAmB,EAAE,YAA4B,EACjD,cAAuB,IAAI,EAC3B,kBAAgC,4BAAY,CAAC,WAAW,EACxD,wBAAgC,IAAI,gBAAM,CAAC,GAAG,EAAE,GAAG,CAAC;YAC3E,IAAI,GAAG,GAAG,EAAE,CAAC;YAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;gBAEnC,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,4BAAY,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;gBAC1G,IAAI,KAAK,GAAG,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC;gBAChH,IAAI,UAAkB,CAAC;gBAEvB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC7B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAE9B,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACjB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxD,CAAC;gBACD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACf,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC/D,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;wBAC1D,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAE,qBAAqB,CAAC,CAAC,CAAC,CAAC;wBAC3E,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;oBAE/B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;wBAC5D,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAE,qBAAqB,CAAC,CAAC,CAAC,CAAC;wBACxE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC5B,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC;gBAClC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnB,CAAC;YACD,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAED;;;;;;;WAOG;QACI,MAAM,CAAC,uBAAuB,CAAC,UAAkB,EAAE,cAAsB,EAAE,KAAmB;YACnG,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,GAAG,GAAG,IAAI,CAAC,SAAS,CAClB,CAAC,EACD,CAAC,UAAU,CAAC,EACZ,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,4BAAY,CAAC,UAAU,CACxB,CAAC;YACF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CACrB,CAAC,EACD,CAAC,cAAc,CAAC,EAChB,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,4BAAY,CAAC,SAAS,CACvB,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBAC3B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAC9G,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAED;;;;;WAKG;QACI,MAAM,CAAC,YAAY,CAAC,KAAmB,EAAE,cAAuB,KAAK;YAC1E,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,sBAAM,CAAC,aAAa,IAAI,WAAW,CAAC,CAAC,CAAC;gBACtD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAM,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACtD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,MAAM,CAAC;YACT,CAAC;YACD,IAAI,OAAO,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;YACxD,IAAI,MAAM,GAAG,IAAI,wBAAU,EAAE,CAAC;YAE9B,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EACxB;gBACE,IAAI,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBACvF,IAAI,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;gBACnF,IAAI,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;aAAC,EACjE,KAAK,EACL,OAAO,CAAC,CAAC;YAEX,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBAC3B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC5G,MAAM,CAAC,SAAS,CAAC,+BAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACzF,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACjC,KAAK,CAAC,UAAU,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,IAAI,GAAmB,CAAC;YAExB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzB,GAAG,GAAG,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAM,CAAC,SAAS,CAAC,CAAC;gBACpE,GAAG,CAAC,eAAe,CAAC,0BAAU,CAAC,WAAW,EAAE,0BAAU,CAAC,WAAW,CAAC,CAAC;gBACpE,GAAG,CAAC,eAAe,CAAC,0BAAU,CAAC,UAAU,EAAE,0BAAU,CAAC,UAAU,CAAC,CAAC;gBAElE,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC5C,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,WAAW,EAAE,CAAC;gBACjD,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC/C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACtB,CAAC;YAED,MAAM,CAAC,SAAS,CAAC,+BAAe,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBACrE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;gBACrD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAM,CAAC,UAAU,CAAC,CAAC,CAAC,6CAA6C;YAC1F,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,+BAAe,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBACxE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,CAAC;QAEhB,CAAC;QAED;;;;;;WAMG;QACI,MAAM,CAAC,cAAc,CAAC,KAAmB,EAAE,cAAoC;YACpF,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACrC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACnB,cAAc,CAAC,OAAO,CAAC,CAAC,MAAqB,EAAE,EAAE;wBAC/C,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;4BACpC,CAAC,EAAE,GAAG;4BACN,CAAC,EAAE,GAAG;yBACP,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE;4BAC3E,MAAM,CAAC,OAAO,EAAE,CAAC;4BACjB,OAAO,EAAE,CAAC;wBACZ,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,EAAE,CAAC;gBACX,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED;;;;;;WAMG;QACI,MAAM,CAAC,eAAe,CAAC,KAAmB;YAC/C,IAAI,MAAM,GAAG,IAAI,wBAAU,EAAE,CAAC;YAC9B,IAAI,OAAO,GAAG,CAAC,cAAc,EAAE,eAAe,EAAE,mBAAmB,EAAE,MAAM,CAAC,CAAC;YAE7E,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EACxB;gBACE,IAAI,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBACvF,IAAI,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;gBACnF,IAAI,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC9D,IAAI,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;aAAC,EACtF,KAAK,EACL,OAAO,CAAC,CAAC;YAEX,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBAC3B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC5G,MAAM,CAAC,SAAS,CAAC,+BAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACzF,qCAAqC;gBACrC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,cAAc;YACd,MAAM,CAAC,SAAS,CAAC,+BAAe,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBACjE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,+BAAe,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC9E,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,sBAAsB;YACtB,MAAM,CAAC,SAAS,CAAC,+BAAe,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBACzE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,gCAAgC;oBAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,+BAAe,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC1E,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,gCAAgC;oBAChC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED;;;;;WAKG;QACI,MAAM,CAAC,gBAAgB,CAAC,KAAmB;YAChD,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,IAAI,MAAM,GAAe,IAAI,wBAAU,EAAE,CAAC;YAC1C,IAAI,KAAK,GAAG;gBACV,4BAAY,CAAC,eAAe;gBAC5B,4BAAY,CAAC,eAAe;gBAC5B,4BAAY,CAAC,gBAAgB;gBAC7B,4BAAY,CAAC,mBAAmB;gBAChC,4BAAY,CAAC,kBAAkB;aAChC,CAAC;YACF,IAAI,IAAI,GAAa;gBACnB,IAAI,gBAAM,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC5B,IAAI,gBAAM,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC;gBACjD,IAAI,gBAAM,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE,OAAO,CAAC;gBACrD,IAAI,gBAAM,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;gBACjD,IAAI,gBAAM,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;aACvE,CAAC;YAEF,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CACtB,KAAK,CAAC,MAAM,EACZ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,IAAI,EACJ,4BAAY,CAAC,KAAK,CACnB,CAAC;YACF,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBAC3B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC5G,MAAM,CAAC,SAAS,CAAC,4BAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACpF,qCAAqC;YACvC,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,4BAAY,CAAC,mBAAmB,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC7E,wBAAU,CAAC,IAAI,GAAG,0BAAU,CAAC,eAAe,CAAC;YAC/C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,4BAAY,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC5E,wBAAU,CAAC,IAAI,GAAG,0BAAU,CAAC,cAAc,CAAC;YAC9C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,4BAAY,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC1E,wBAAU,CAAC,IAAI,GAAG,0BAAU,CAAC,YAAY,CAAC;YAC5C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,4BAAY,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBACzE,wBAAU,CAAC,IAAI,GAAG,0BAAU,CAAC,WAAW,CAAC;YAC3C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,4BAAY,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBACzE,wBAAU,CAAC,IAAI,GAAG,0BAAU,CAAC,WAAW,CAAC;YAC3C,CAAC,CAAC,CAAC;YAEH,IAAI,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACrC,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,gBAAM,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,gBAAM,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;YACrJ,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAClC,wBAAU,CAAC,YAAY,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAClC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACjC,wBAAU,CAAC,aAAa,EAAE,CAAC;gBAC3B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAEM,MAAM,CAAC,cAAc,CAAC,KAAmB;YAC9C,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,IAAI,MAAM,GAAe,IAAI,wBAAU,EAAE,CAAC;YAC1C,IAAI,YAAY,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACxD,IAAI,GAAG,GAAG;gBACR,IAAI,gBAAM,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBACrD,IAAI,gBAAM,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;gBACjD,IAAI,gBAAM,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC5B,IAAI,gBAAM,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;aAClD,CAAC;YAEF,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EACxB,GAAG,EACH,KAAK,EACL,YAAY,CAAC,CAAC;YAEhB,GAAG,CAAC,OAAO,CAAC,CAAC,MAAqB,EAAE,KAAa,EAAE,EAAE;gBACnD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC7G,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACd,KAAK,CAAC;wBACJ,MAAM,CAAC,SAAS,CAAC,0BAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;wBAC1C,KAAK,CAAC;oBACR,KAAK,CAAC;wBACJ,MAAM,CAAC,SAAS,CAAC,0BAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;wBAC5C,KAAK,CAAC;oBACR,KAAK,CAAC;wBACJ,MAAM,CAAC,SAAS,CAAC,0BAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;wBAC1C,KAAK,CAAC;oBACR,KAAK,CAAC;wBACJ,MAAM,CAAC,SAAS,CAAC,0BAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;wBAC5C,KAAK,CAAC;oBACR;wBACE,KAAK,CAAC;gBACV,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,0BAAU,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC5D,wBAAU,CAAC,UAAU,GAAG,0BAAU,CAAC,IAAI,CAAC;YAC1C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,0BAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC9D,wBAAU,CAAC,UAAU,GAAG,0BAAU,CAAC,MAAM,CAAC;YAC5C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,0BAAU,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC5D,wBAAU,CAAC,UAAU,GAAG,0BAAU,CAAC,IAAI,CAAC;YAC1C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,0BAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC9D,wBAAU,CAAC,UAAU,GAAG,0BAAU,CAAC,MAAM,CAAC;YAC5C,CAAC,CAAC,CAAC;YAEH,IAAI,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACrC,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,gBAAM,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,gBAAM,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;YACrJ,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAClC,wBAAU,CAAC,YAAY,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAClC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACjC,wBAAU,CAAC,aAAa,EAAE,CAAC;gBAC3B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED;;;;WAIG;QACI,MAAM,CAAC,UAAU,CAAC,KAAmB;YAC1C,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,IAAI,MAAM,GAAe,IAAI,wBAAU,EAAE,CAAC;YAC1C,IAAI,MAAM,GAAG,CAAC,4BAAY,CAAC,eAAe,EAAE,4BAAY,CAAC,eAAe,CAAC,CAAC;YAE1E,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EACxB;gBACE,IAAI,gBAAM,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC5B,IAAI,gBAAM,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC;aAAC,EACpD,KAAK,EACL,MAAM,EAAE,IAAI,EACZ,4BAAY,CAAC,KAAK,CAAC,CAAC;YAEtB,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBAC3B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC5G,IAAI,IAAI,GAAG,4BAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;gBACvE,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC9B,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;oBAChC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC1B,wBAAU,CAAC,KAAK,GAAG,sBAAM,CAAC,SAAS,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACjC,wBAAU,CAAC,KAAK,GAAG,sBAAM,CAAC,SAAS,CAAC;oBACtC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,sBAAsB;YACtB,IAAI,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACrC,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,gBAAM,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,gBAAM,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;YACrL,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAClC,wBAAU,CAAC,YAAY,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBAClC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACjC,wBAAU,CAAC,aAAa,EAAE,CAAC;gBAC3B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAEM,MAAM,CAAC,YAAY,CAAC,KAAmB,EAAE,KAAa;YAC3D,IAAI,GAAmB,CAAC;YACxB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YAC1B,CAAC;YACD,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAM,CAAC,SAAS,CAAC,CAAC;YAC/C,GAAG,CAAC,eAAe,CAAC,0BAAU,CAAC,WAAW,EAAE,0BAAU,CAAC,WAAW,CAAC,CAAC;YACpE,GAAG,CAAC,eAAe,CAAC,0BAAU,CAAC,UAAU,EAAE,0BAAU,CAAC,UAAU,CAAC,CAAC;YAElE,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;YAC5C,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,WAAW,EAAE,CAAC;YACjD,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC;YAC/C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YAEpB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,IAAI,GAAG,GAAG,CAAC,IAAI,gBAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;YAEzC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAoB,EAAE,KAAK,EAAE,EAAE;gBACnF,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC5G,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACjC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;oBAChC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,OAAO,GAAG,GAAG,EAAE,8BAA8B,KAAK,GAAG,EAAE;gBACvG,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,SAAS;aAChB,CAAC,CAAC;YACH,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACjH,CAAC;QAEM,MAAM,CAAC,aAAa,CAAC,KAAmB;YAC7C,MAAM,WAAW,GAAG,GAAG,CAAC;YAExB,IAAI,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,4BAAY,CAAC,cAAc,EAAE,4BAAY,CAAC,WAAW,CAAC,CAAC;YACpJ,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;YAE1J,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACjC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC7B,SAAS,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC7C,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;YAC9B,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;YAE/B,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,GAAG,EAAE;gBAErC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC/B,MAAM,CAAC;gBACT,CAAC;gBAED,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEzB,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,4BAAY,CAAC,cAAc,EAAE,4BAAY,CAAC,WAAW,CAAC,CAAC;gBACxL,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,4BAAY,CAAC,cAAc,EAAE,4BAAY,CAAC,WAAW,CAAC,CAAC;gBAExM,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;gBAC9J,IAAI,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;gBAErJ,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;gBACtC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;gBAErC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBAClC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAE5B,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC;gBAChC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;gBAE5B,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,GAAG,EAAE;oBACvC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,GAAG,EAAE;oBACnC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAC1B,WAAW,CAAC,OAAO,EAAE,CAAC;oBACtB,OAAO,CAAC,OAAO,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QAEM,MAAM,CAAC,cAAc;QAE5B,CAAC;;IAlhBD,oBAAoB;IACL,0BAAc,GAAY,KAAK,CAAC;IAGhC,0BAAc,GAAW,GAAG,CAAC;IAC7B,yBAAa,GAAW,EAAE,CAAC;IAC3B,yBAAa,GAAW,GAAG,CAAC;IAPhC,sBAAW,cAohBvB;IAED;QAKE,YAAY,KAAoB;YAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;QAEM,sBAAsB;YAC3B,IAAI,CAAC,UAAU,CAAC,wBAAU,CAAC,eAAe,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,EAAE,4BAAY,CAAC,UAAU,CAAC,CAAC;QAC9I,CAAC;QAEM,mBAAmB,CAAC,MAAc;YACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChC,IAAI,KAAK,GAAG,oBAAoB,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,WAA0B,EAAE,EAAE;oBACxF,MAAM,CAAC,WAAW,CAAC,SAAS,KAAK,4BAAY,CAAC,UAAU,IAAI,WAAW,CAAC,SAAS,KAAK,4BAAY,CAAC,UAAU,CAAC;gBAChH,CAAC,CAAC,CAAC;gBACH,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACV,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,KAAK,4BAAY,CAAC,UAAU,CAAC,CAAC,CAAC;wBAChD,KAAK,CAAC,SAAS,GAAG,4BAAY,CAAC,WAAW,CAAC;oBAC7C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACR,KAAK,CAAC,SAAS,GAAG,4BAAY,CAAC,UAAU,CAAC;oBAC1C,CAAC;oBACD,oBAAoB,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,4CAA4C;gBACzF,CAAC;YACH,CAAC;QACH,CAAC;QAEM,yBAAyB,CAAC,OAAe;YAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClC,IAAI,KAAK,GAAG,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAoB,EAAE,EAAE;oBACxE,MAAM,CAAC,KAAK,CAAC,KAAK,KAAK,4BAAY,CAAC,WAAW,IAAI,KAAK,CAAC,KAAK,KAAK,4BAAY,CAAC,UAAU,CAAC;gBAC7F,CAAC,CAAC,CAAC;gBACH,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,4BAAY,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC5C,KAAK,CAAC,KAAK,GAAG,4BAAY,CAAC,UAAU,CAAC;gBACxC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAK,CAAC,KAAK,GAAG,4BAAY,CAAC,UAAU,CAAC;gBACxC,CAAC;YACH,CAAC;QACH,CAAC;QAEO,UAAU,CAAC,EAAU,EAAE,CAAS,EAAE,CAAS,EAAE,WAAyF;YAC5I,MAAM,UAAU,GAAG,GAAG,CAAC;YACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,4BAAY,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC;gBACtH,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC3B,KAAK,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACzC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC;;IA/Cc,+BAAU,GAAyB,EAAE,CAAC;IAH1C,+BAAoB,uBAmDhC;AACH,CAAC,EA3kBgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QA2kB1B;;;;;;;;;;ACnlBD;IAKE,YAAY,CAAU,EAAE,CAAU;QAChC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACd,CAAC;IAED,IAAI,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACjB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IAClB,CAAC;IAED,IAAI,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACjB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IAClB,CAAC;CACF;AAzBD,yBAyBC;;;;;;;;8CCzBY;;AAGb,cAAc;AACd,mBAAO,CAAC,EAAM,CAAC,CAAC;AAChB,mBAAO,CAAC,EAAI,CAAC,CAAC;AACd,mBAAO,CAAC,EAAQ,CAAC,CAAC;AAElB,wBAA2B;AAC3B,+CAAmD;AAEnD,gDAAuH;AACvH,6CAAiD;AAEjD,IAAO,SAAS,GAAG,uBAAU,CAAC,SAAS,CAAC;AACxC,IAAO,YAAY,GAAG,uBAAU,CAAC,YAAY,CAAC;AAC9C,IAAO,SAAS,GAAG,uBAAU,CAAC,aAAa,CAAC;AAC5C,IAAO,aAAa,GAAG,uBAAU,CAAC,aAAa,CAAC;AAChD,IAAO,aAAa,GAAG,uBAAU,CAAC,aAAa,CAAC;AAEhD,oCAAoC;AACpC,SAAiB,SAAQ,MAAM,CAAC,IAAI;IAClC,YAAY,MAA0B;QACpC,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,sBAAM,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,sBAAM,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,sBAAM,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,sBAAM,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,sBAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;CACF;AAVD,kBAUC;AAGD,2EAA2E;AAC3E,0CAA0C;AAC1C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACnB,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;QACnB,IAAI,SAAS,GAAW,kCAAkB,CAAC;QAC3C,IAAI,UAAU,GAAW,mCAAmB,CAAC;QAE7C,EAAE,CAAC,CAAC,0BAAU,KAAK,YAAY,CAAC,CAAC,CAAC;YAChC,IAAI,aAAa,GAAkB,2BAAW,CAAC,sBAAsB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAE7F,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;YACpC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;QACxC,CAAC;QAED,MAAM,MAAM,GAAuB;YACjC,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE,UAAU;YAClB,QAAQ,EAAE,MAAM,CAAC,IAAI;YACrB,MAAM,EAAE,EAAE;YACV,UAAU,EAAE,CAAC;YACb,eAAe,EAAE,KAAK,CAAC,gFAAgF;SACxG,CAAC;QAEH,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,oFAAoF;IACtG,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;;AC3DD,yC;;;;;;;;;;;;;;ACOA;;;;;;;;GAQG;AAEH,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,iEAAQ;IACR,mEAAS;AACX,CAAC,EAHW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAG5B;AAED;CAkBC;AAlBD,sCAkBC;AAED;IAGS,MAAM,CAAC,sBAAsB,CAAC,YAAoB,EAAE,aAAqB,EAAE,cAAiC,iBAAiB,CAAC,SAAS,EAAE,YAAqB,EAAE,aAAsB;QAC3L,yFAAyF;QACzF,2IAA2I;QAC3I,6GAA6G;QAC7G,6FAA6F;QAC7F,8JAA8J;QAC9J,yKAAyK;QACzK,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;QAEzC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QAErD,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,YAAY,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,aAAa,CAAC;QAErD,wEAAwE;QACxE,IAAI,8BAA8B,GAAY,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,WAAW,KAAK,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAClK,IAAI,6BAA6B,GAAY,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,WAAW,KAAK,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAEhK,EAAE,CAAC,CAAC,8BAA8B,IAAI,6BAA6B,CAAC,CAAC,CAAC;YACpE,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACxI,CAAC;QAED,wJAAwJ;QACxJ,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,WAAW,KAAK,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,CAAC,sBAAc,GAAG,0BAAkB,CAAC,CAAC,CAAC;gBAC1H,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,CAAC,uBAAe,GAAG,2BAAmB,CAAC,CAAC,CAAC;YAChI,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,CAAC,uBAAe,GAAG,2BAAmB,CAAC,CAAC,CAAC;gBAC5H,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,CAAC,sBAAc,GAAG,0BAAkB,CAAC,CAAC,CAAC;YAC9H,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;YAC/C,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;QACnD,CAAC;QAED,IAAI,kBAAkB,GAAW,CAAC,CAAC,WAAW,KAAK,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,0BAAkB,GAAG,2BAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,2BAAmB,GAAG,0BAAkB,CAAC,CAAC,CAAC;QAC3K,IAAI,iBAAiB,GAAW,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAEnG,EAAE,CAAC,CAAC,iBAAiB,GAAG,kBAAkB,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC;YACrE,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,iBAAiB,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAEvG,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC;YAC1G,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;YACnE,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,iBAAiB,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YAE1G,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC,CAAC;QAC9G,CAAC;QAED,oBAAoB;QACpB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAC5F,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAE9F,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;CACF;AAjED,kCAiEC;;;;;;;;;;ACzGD,yCAAuC;AACvC,+CAAsF;AACtF,mDAAmD;AACnD,wCAAkC;AAClC,6CAAmD;AAGnD,oDAAoE;AAEpE,2CAA6C;AAC7C,6CAA8C;AAK9C,IAAO,QAAQ,GAAG,kCAAc,CAAC,QAAQ,CAAC;AAC1C,IAAO,QAAQ,GAAG,kCAAc,CAAC,QAAQ,CAAC;AAI1C,IAAiB,UAAU,CAqQ1B;AArQD,WAAiB,UAAU;IAGzB,IAAO,WAAW,GAAG,uBAAU,CAAC,WAAW,CAAC;IAC5C,IAAO,oBAAoB,GAAG,uBAAU,CAAC,oBAAoB,CAAC;IAE9D,eAAgC,SAAQ,MAAM,CAAC,KAAK;KAEnD;IAFqB,oBAAS,YAE9B;IAED,eAAuB,SAAQ,SAAS;QAGtC;YACE,KAAK,EAAE,CAAC;QACV,CAAC;QAED,IAAI,CAAC,IAAI;YACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;QAED,OAAO;YACL,gBAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,gBAAW,CAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QAChE,CAAC;QAED,MAAM;YACJ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAM,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvE,CAAC;KACF;IAxBY,oBAAS,YAwBrB;IAED,mBAA2B,SAAQ,SAAS;QAG1C,IAAI,CAAC,IAAI;YACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;QAED,OAAO;QAEP,CAAC;QAED,MAAM;YACJ,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC;QAED,MAAM;QAEN,CAAC;KACF;IAlBY,wBAAa,gBAkBzB;IAED,mBAA2B,SAAQ,SAAS;QAc1C;YACE,KAAK,EAAE,CAAC;YAVF,WAAM,GAAW,CAAC,CAAC;YAC3B,2CAA2C;YACnC,WAAM,GAAW,CAAC,CAAC;YAGnB,mBAAc,GAAW,CAAC,CAAC;YAC3B,qBAAgB,GAAW,CAAC,CAAC;YAKnC,IAAI,CAAC,MAAM,GAAG,IAAI,eAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,CAAC;QAED,OAAO;YACL,kIAAkI;YAClI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAM,CAAC,SAAS,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAM,CAAC,SAAS,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,YAAY,GAAG,wBAAU,CAAC,KAAK,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,0BAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,8BAA8B;QACxG,CAAC;QAED,MAAM;YACJ,MAAM,eAAe,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAExD,sCAAsC;YACtC,QAAQ;YACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,EAAE,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACnG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;gBAClD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAM,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;gBAC/E,GAAG,CAAC,WAAW,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;YAEH,eAAe,CAAC,sBAAsB,EAAE,CAAC;YACzC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAEhC,IAAI,OAAO,GAAG,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE;gBACxD,WAAW,CAAC,cAAc,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;YAGH,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC;YAC5F,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,yBAAS,CAAC,WAAW,CAAC,CAAC;YAC/F,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,yBAAS,CAAC,UAAU,CAAC,CAAC;YAC7F,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,yBAAS,CAAC,KAAK,CAAC,CAAC;YAE5F,sBAAsB;YACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAgB,EAAE,EAAE;gBAC3E,EAAE,CAAC,CAAC,KAAK,KAAK,yBAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;oBACrF,EAAE,CAAC,CAAC,KAAK,KAAK,yBAAS,CAAC,WAAW,CAAC,CAAC,CAAC;wBACpC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,OAAO,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACjF,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,IAAI,CAAC,MAAM,EAAE,EAAE;gBAC5G,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,SAAS;aAChB,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC;QACvC,CAAC;QAED,MAAM;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACnC,CAAC,CAAC,MAAM,EAAE,CAAC;YACb,CAAC,CAAC,CAAC;QACL,CAAC;QAED,QAAQ;YACN,yBAAyB;YACzB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAG1B,CAAC;QACO,aAAa;YACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAI,GAAG,GAAG,oBAAQ,CAAC,qBAAqB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvH,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACjC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YAC5B,CAAC;QAEH,CAAC;QACO,aAAa;YACnB,IAAI,WAAW,GAAc,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,EAAE,CAAC,CAAC,WAAW,CAAC,YAAY,GAAG,WAAW,CAAC,UAAU,IAAI,WAAW,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxF,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC;oBACnE,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;YACH,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAEO,YAAY;YAClB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxD,MAAM,SAAS,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;YAC/C,IAAI,MAAM,GAAG,oBAAQ,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,MAAM,aAAa,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,EAAE,iBAAiB,EAAE,CAAC,CAAC;YAEjF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,GAAG,EAAE;gBACvE,WAAW,CAAC,YAAY,EAAE,CAAC;gBAC3B,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC;gBACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAEzB;gBACE,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;YACnF,CAAC;YACD;gBACE,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;YACnF,CAAC;QACH,CAAC;QAEO,gBAAgB;YACtB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,GAAI,WAAW,CAAC,uBAAuB,CAAC,CAAC,CAAC;gBAC5E,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;KACF;IA9IY,wBAAa,gBA8IzB;IAED,mBAA2B,SAAQ,SAAS;QAG1C,IAAI,CAAC,IAAI;YACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;QAED,OAAO;QAEP,CAAC;QAED,MAAM;YACJ,IAAI,MAAM,GAAe,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,+BAA+B;YAC5D,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAqB,EAAE,EAAE;gBAClD,gCAAgC;gBAChC,sEAAsE;gBACtE,MAAM,CAAC,UAAU,EAAE,CAAC;gBACpB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YACxB,CAAC,CAAC,CAAC;QAEL,CAAC;QAED,MAAM;QAEN,CAAC;KACF;IA1BY,wBAAa,gBA0BzB;IAED,kBAA0B,SAAQ,SAAS;QAGzC;YACE,KAAK,EAAE,CAAC;YAHF,UAAK,GAAG,EAAE,CAAC;QAInB,CAAC;QAED,IAAI,CAAC,IAAI;YACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;QAED,OAAO;YAEL,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACnC,sGAAsG;YACtG,gBAAW,CAAC,OAAO,EAAE,CAAC;YACtB,sBAAsB;YACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAEjE,CAAC;QAED,MAAM;YACJ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAM,CAAC,eAAe,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACzE,CAAC;QAED,MAAM;QAEN,CAAC;KACF;IA/BY,uBAAY,eA+BxB;AAEH,CAAC,EArQgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAqQ1B;;;;;;;;;;AC3RD,+CAGoC;AACpC;;;KAGK;AACL;IAqCE;;;SAGK;IACL;QACE,2HAA2H;QAC3H,kDAAkD;QAElD,SAAS;QACT,IAAI,CAAC,eAAe,GAAG,mBAAO,CAAC,EAA+B,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,GAAG,mBAAO,CAAC,EAAwB,CAAC,CAAC;QAClD,IAAI,CAAC,eAAe,GAAG,mBAAO,CAAC,EAAiC,CAAC,CAAC;QAClE,IAAI,CAAC,eAAe,GAAG,mBAAO,CAAC,EAAiC,CAAC,CAAC;QAElE,IAAI,CAAC,SAAS,GAAG,mBAAO,CAAC,EAAqC,CAAC,CAAC;QAChE,IAAI,CAAC,SAAS,GAAG,mBAAO,CAAC,EAAqC,CAAC,CAAC;QAChE,IAAI,CAAC,SAAS,GAAG,mBAAO,CAAC,EAAqC,CAAC,CAAC;QAChE,IAAI,CAAC,SAAS,GAAG,mBAAO,CAAC,EAAqC,CAAC,CAAC;QAChE,IAAI,CAAC,SAAS,GAAG,mBAAO,CAAC,EAAqC,CAAC,CAAC;QAEhE,SAAS;QACT,IAAI,CAAC,YAAY,GAAG,mBAAO,CAAC,EAA2B,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,GAAG,mBAAO,CAAC,EAA2B,CAAC,CAAC;QAEzD,QAAQ;QACR,IAAI,CAAC,sBAAsB,GAAG,mBAAO,CAAC,EAAkC,CAAC,CAAC;QAC1E,IAAI,CAAC,mBAAmB,GAAG,mBAAO,CAAC,EAA8B,CAAC,CAAC;QAEnE,cAAc;QACd,IAAI,CAAC,cAAc,GAAG,mBAAO,CAAC,EAAmC,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,GAAG,mBAAO,CAAC,EAAmC,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,GAAG,mBAAO,CAAC,EAA2C,CAAC,CAAC;QAC3E,IAAI,CAAC,gBAAgB,GAAG,mBAAO,CAAC,EAAsC,CAAC,CAAC;QACxE,IAAI,CAAC,kBAAkB,GAAG,mBAAO,CAAC,EAA0C,CAAC,CAAC;QAC9E,IAAI,CAAC,4BAA4B,GAAG,mBAAO,CAAC,EAAsC,CAAC,CAAC;QACpF,IAAI,CAAC,+BAA+B,GAAG,mBAAO,CAAC,EAAsC,CAAC,CAAC;IACzF,CAAC;IAED;;;;QAII;IACJ,IAAI,CAAC,MAAqB;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,QAAQ;QACN,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACnE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,iCAAiC;QACnC,CAAC;IACH,CAAC;IAGD;;;OAGG;IACH,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAM,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC1F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAM,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAE1F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,0BAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACzG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,4BAAY,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAClG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,4BAAY,CAAC,0BAA0B,EAAE,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAEvI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0BAAU,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0BAAU,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0BAAU,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAE/D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACjE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAAY,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;IAGD;;;;SAIK;IACL,IAAI,MAAM;QACR,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;QACtF,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED;;;;SAIK;IACL,IAAI,MAAM,CAAC,KAAoB;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;CACF;AAED,oEAAoE;AACpE,sBAAsB;AACtB,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;AACtC,kBAAe,WAAW,CAAC;;;;;;;AC7J3B,yE;;;;;;ACAA,kE;;;;;;ACAA,2E;;;;;;ACAA,2E;;;;;;ACAA,+E;;;;;;ACAA,+E;;;;;;ACAA,+E;;;;;;ACAA,+E;;;;;;ACAA,+E;;;;;;ACAA,qE;;;;;;ACAA,qE;;;;;;ACAA,4E;;;;;;ACAA,wE;;;;;;ACAA,6E;;;;;;ACAA,6E;;;;;;ACAA,qF;;;;;;ACAA,gF;;;;;;ACAA,oF;;;;;;ACAA,gF;;;;;;ACAA,gF;;;;;;;;;ACAA,yCAA2C;AAE3C,uCAAmC;AACnC,6CAAkD;AAClD,+CAAoG;AACpG,6CAAgD;AAChD,uDAAuE;AACvE,qDAAmE;AACnE,kDAA6D;AAC7D,oDAAiE;AAGjE,IAAO,SAAS,GAAG,sBAAS,CAAC,SAAS,CAAC;AACvC,IAAO,aAAa,GAAG,sBAAS,CAAC,aAAa,CAAC;AAC/C,IAAO,SAAS,GAAG,sBAAS,CAAC,SAAS,CAAC;AACvC,IAAO,SAAS,GAAG,sBAAS,CAAC,SAAS,CAAC;AACvC,IAAO,gBAAgB,GAAG,0CAAmB,CAAC,gBAAgB,CAAC;AAC/D,IAAO,mBAAmB,GAAG,0CAAmB,CAAC,mBAAmB,CAAC;AACrE,IAAO,eAAe,GAAG,sCAAiB,CAAC,eAAe,CAAC;AAC3D,IAAO,WAAW,GAAG,sCAAiB,CAAC,WAAW,CAAC;AACnD,IAAO,eAAe,GAAG,sCAAiB,CAAC,eAAe,CAAC;AAC3D,IAAO,cAAc,GAAG,gCAAc,CAAC,cAAc,CAAC;AACtD,IAAO,eAAe,GAAG,gCAAc,CAAC,eAAe,CAAC;AACxD,IAAO,aAAa,GAAG,gCAAc,CAAC,aAAa,CAAC;AACpD,IAAO,cAAc,GAAG,gCAAc,CAAC,cAAc,CAAC;AACtD,IAAO,gBAAgB,GAAG,oCAAgB,CAAC,gBAAgB,CAAC;AAC5D,IAAO,cAAc,GAAG,oCAAgB,CAAC,cAAc,CAAC;AAExD,IAAO,YAAY,GAAG,sBAAS,CAAC,YAAY,CAAC;AAC7C,2CAA4C;AAC5C,IAAO,UAAU,GAAG,sBAAS,CAAC,UAAU,CAAC;AACzC,kDAA6D;AAC7D,IAAO,iBAAiB,GAAG,sCAAiB,CAAC,iBAAiB,CAAC;AAE/D;;;;;;;;;GASG;AACH;IAiBE;;;;OAIG;IACH,YAAY,IAAiB,EAAE,KAAmB;QAlB1C,2BAAsB,GAAG,EAAE,CAAC,CAAC,qDAAqD;QAG1F,SAAS;QACD,cAAS,GAAkB,EAAE,CAAC;QAepC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACI,IAAI,CAAC,mBAAkD;QAC5D,wBAAwB;QACxB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC;QACxE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC;QAChF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC;QAC1E,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC;QAC7E,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC;QAChF,mFAAmF;QACnF,mBAAmB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACpC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACpD,KAAK,CAAC,QAAQ,CAAC;gBACb,IAAI,CAAC,mBAAmB;gBACxB,IAAI,CAAC,2BAA2B;gBAChC,IAAI,CAAC,2BAA2B;gBAChC,IAAI,CAAC,wBAAwB;aAC9B,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,0BAA0B,EAAE,CAAC;IACrD,CAAC;IAED;;;OAGG;IACI,SAAS,CAAC,CAAS,EAAE,CAAS;QACnC,IAAI,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;aACtC,aAAa,CACZ,CAAC,IAAI,gBAAgB,EAAE;YACrB,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;YAC/B,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;YAChC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;YACpC,IAAI,cAAc,EAAE;YACpB,IAAI,mBAAmB,EAAE;YACzB,IAAI,eAAe,EAAE;YACrB,IAAI,aAAa,CAAC,wBAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE3C,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,YAAY,CACnE,sBAAM,CAAC,OAAO,EACd,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAClF,MAAM,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,wBAAU,CAAC,eAAe,CAAC,CAAC;QAEjG,MAAM,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnF,MAAM,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC;aACzD,UAAU,EAAE,CAAC;QAEhB,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,wBAAU,CAAC,IAAI,CAAC,CAAC;QAEnF,MAAM,CAAC,YAAY,CAAsB,6BAAa,CAAC,SAAS,CAAC;aAC9D,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC;aAC3C,YAAY,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,sBAAM,CAAC,OAAO,CAAC,CAAC;aAC1D,YAAY,CAAC,IAAI,CAAC,2BAA2B,EAAE,CAAC,sBAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG;YACzB,GAAG,EAAE,WAAI,CAAC,OAAO,EAAE;SACpB,CAAC;QACF,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACI,QAAQ,CAAC,WAAuB,EAAE,CAAS,EAAE,CAAS,EAAE,WAAwB;QACrF,IAAI,UAAU,GAAe,WAAW,CAAC,CAAC,6CAA6C;QACvF,gDAAgD;QAEhD,IAAI,KAAK,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;aAC3C,aAAa,CACZ;YACE,IAAI,gBAAgB,EAAE;YACtB,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;YAChC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;YACpC,IAAI,cAAc,EAAE;YACpB,IAAI,mBAAmB,EAAE;YACzB,IAAI,gCAAc,EAAE;YACpB,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAc,EAAE,EAAE;gBACrE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,6BAAa,CAAC,EAAE,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;YACH,IAAI,eAAe,EAAE;YACrB,IAAI,aAAa,CAAC,UAAU,CAAC;SAC9B,CAAC,CAAC;QAEP,KAAK,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,YAAY,CAClE,sBAAM,CAAC,OAAO,EACd,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAElF,KAAK,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,wBAAU,CAAC,WAAW,CAAC,CAAC;QAE5F,KAAK,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC;aACpD,QAAQ,CAAC,4BAAY,CAAC,IAAI,EAAE,IAAI,SAAS,EAAE,CAAC;aAC5C,QAAQ,CAAC,4BAAY,CAAC,IAAI,EAAE,IAAI,SAAS,EAAE,CAAC;aAC5C,QAAQ,CAAC,4BAAY,CAAC,QAAQ,EAAE,IAAI,aAAa,EAAE,CAAC;aACpD,QAAQ,CAAC,4BAAY,CAAC,OAAO,EAAE,IAAI,SAAS,EAAE,CAAC;aAC/C,QAAQ,CAAC,4BAAY,CAAC,OAAO,EAAE,IAAI,YAAY,EAAE,CAAC;aAClD,QAAQ,CAAC,4BAAY,CAAC,KAAK,EAAE,IAAI,UAAU,EAAE,CAAC;aAC9C,QAAQ,CAAC,4BAAY,CAAC,IAAI,CAAC,CAAC;QAE/B,KAAK,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC;aACxD,UAAU,EAAE,CAAC;QAChB,KAAK,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAE7E,KAAK,CAAC,YAAY,CAAsB,6BAAa,CAAC,SAAS,CAAC;aAC7D,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,CAAC;aAChD,YAAY,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,sBAAM,CAAC,OAAO,CAAC,CAAC;aAC1D,YAAY,CAAC,IAAI,CAAC,2BAA2B,EAAE,CAAC,sBAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,4CAA4C;QAC5C,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG;YAClB,GAAG,EAAE,WAAI,CAAC,OAAO,EAAE;SACpB,CAAC;QACF,IAAI,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;YAE3C,sGAAsG;YACtG,WAAW,EAAE,CAAC;YACd,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAChC,GAAG,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,8EAA8E;QACrH,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAEM,SAAS,CAAC,CAAS,EAAE,CAAS,EAAE,KAAa;QAElD,IAAI,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;aACtC,aAAa,CAAC;YACb,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;YAChC,IAAI,cAAc,EAAE;YACpB,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;YAC/B,IAAI,mBAAmB,EAAE;YACzB,IAAI,eAAe,EAAE;YACrB,IAAI,cAAc,EAAE;SAAC,CAAC,CAAC;QAE3B,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;QACvE,MAAM,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC;aACzD,UAAU,CAAC,KAAK,CAAC;aACjB,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAErC,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;QACpI,MAAM,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC;aACvD,UAAU,EAAE,CAAC;QAEhB,MAAM,CAAC,YAAY,CAAsB,6BAAa,CAAC,SAAS,CAAC;aAC9D,iBAAiB,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;aACrD,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,sBAAM,CAAC,MAAM,CAAC,CAAC;aACvD,YAAY,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,sBAAM,CAAC,MAAM,CAAC,CAAC;aAC5D,YAAY,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,sBAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAE7D,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,YAAY,CACnE,sBAAM,CAAC,OAAO,EACd,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAElF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,GAAG,GAAG,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAChC,GAAG,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,8EAA8E;QACrH,MAAM,CAAC,MAAM,CAAC;IAEhB,CAAC;IAEM,WAAW,CAAC,CAAS,EAAE,CAAS;QACrC,IAAI,QAAQ,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;aACxC,aAAa,CAAC;YACb,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;YAChC,IAAI,cAAc,EAAE;YACpB,IAAI,mBAAmB,EAAE;YACzB,IAAI,iBAAiB,EAAE;YACvB,IAAI,eAAe,EAAE;SACtB,CAAC,CAAC;QAEL,QAAQ,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC;aAC3D,UAAU,CAAC,KAAK,CAAC,CAAC;QAErB,QAAQ,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC;aACvD,QAAQ,CAAC,eAAe,EAAE,CAAC;aAC3B,YAAY,CACX,sBAAM,CAAC,OAAO,EACd,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAEpF,QAAQ,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAE1E,QAAQ,CAAC,YAAY,CAAsB,6BAAa,CAAC,SAAS,CAAC;aAChE,iBAAiB,CAAC,IAAI,CAAC,2BAA2B,CAAC;aACnD,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,sBAAM,CAAC,MAAM,CAAC,CAAC;aACvD,YAAY,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,sBAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAG7D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;YAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAChC,GAAG,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,8EAA8E;QACrH,MAAM,CAAC,QAAQ,CAAC;QAEhB;YACE,IAAI,MAAM,GAAG,oBAAQ,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,IAAI,UAAU,GAAG,GAAG,EAAE;gBACpB,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACf,KAAK,CAAC;wBACJ,MAAM,CAAC,0BAAU,CAAC,UAAU,CAAC;oBAC/B,KAAK,CAAC;wBACJ,MAAM,CAAC,0BAAU,CAAC,UAAU,CAAC;oBAC/B,KAAK,CAAC;wBACJ,MAAM,CAAC,0BAAU,CAAC,YAAY,CAAC;oBACjC,KAAK,CAAC;wBACJ,MAAM,CAAC,0BAAU,CAAC,WAAW,CAAC;oBAChC,KAAK,CAAC;wBACJ,MAAM,CAAC,0BAAU,CAAC,WAAW,CAAC;oBAChC;wBACE,KAAK,CAAC;gBACV,CAAC;YACH,CAAC,CAAC;YACF,MAAM,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;IACH,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACxC,CAAC,CAAC,WAAW,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,QAAQ;QACV,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAExB,CAAC;IAEO,sBAAsB,CAAC,KAAa;QAC1C,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC;QAC1C,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC;IAC1C,CAAC;CACF;AArRD,mCAqRC;;;;;;;;;;AChUD,+CAAqE;AACrE,yCAAuC;AAEvC;;;;;;KAMK;AACL;IAKE,YAAY,IAAiB,EAAE,CAAS,EAAE,CAAS,EAAE,UAA6B;QAJ1E,gBAAW,GAA2B,IAAI,GAAG,EAAE,CAAC;QAEhD,mBAAc,GAAkB,IAAI,iBAAO,EAAE,CAAC;QAGpD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,UAAU,CAAC,OAAO,CAAC,CAAC,SAAoB,EAAE,EAAE;gBAC1C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,0BAAU,CAAC,gBAAgB,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAe,EAAE,EAAE;YAC3C,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;IAEL,CAAC;IAGO,YAAY,CAAC,SAAoB;QACvC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QACnD,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IACM,YAAY,CAAC,aAA4B;QAC9C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7C,CAAC;IACD;;;;;SAKK;IACE,YAAY,CAAsB,aAAqB;QAC5D,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAM,CAAC;IAClD,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,EAAE;YACzC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IACD;;;;;SAKK;IACL,aAAa,CAAC,UAA4B;QACxC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,UAAU,CAAC,OAAO,CAAC,CAAC,SAAoB,EAAE,EAAE;gBAC1C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACM,OAAO;QACZ,IAAI,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IACD,IAAW,aAAa;QACtB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IACD,IAAI,MAAM;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CACF;AAvED,wBAuEC;;;;;;;;;;;;;;;;;;;;;AClFD;IACE,MAAM,CAAC,OAAO;QACZ,MAAM,CAAC,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;YACvE,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACnE,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAPD,oBAOC;;;;;;;;;;ACND,+CAAqF;AAQrF,6CAAsD;AACtD,2CAA8C;AAE9C,IAAiB,SAAS,CA6KzB;AA7KD,WAAiB,SAAS;IAOxB;QASE,IAAW,MAAM,CAAC,MAAc;YAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC;KACF;IAZqB,eAAK,QAY1B;IAED,mBAA2B,SAAQ,KAAK;QACtC,KAAK;QACL,CAAC;QAED,KAAK;QACL,CAAC;QAED,MAAM;YACJ,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC;YACnF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC,CAAC;YACxE,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC;YACtF,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC;YAC5F,MAAM,kBAAkB,GAAG,EAAE,GAAG,wBAAU,CAAC,UAAU,GAAG,wBAAU,CAAC,UAAU,CAAC;YAC9E,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAEhE,IAAI,OAAO,GAAG,CAAC,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;YAE/C,IAAI,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC;YACtG,IAAI,SAAS,GAAG,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACvD,IAAI,iBAAiB,GAAG,cAAc,CAAC,iBAAiB,CAAC;YAEzD,EAAE,CAAC,CAAC,oBAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,iBAAiB,GAAG,kBAAkB,EAAE,iBAAiB,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAC5H,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;YACjC,CAAC;YAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,iBAAkB,CAAC,CAAC,CAAC;gBACrD,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,SAAS,GAAG,yBAAS,CAAC,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,SAAS,GAAG,yBAAS,CAAC,WAAW,CAAC;YACzH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,SAAS,GAAG,yBAAS,CAAC,WAAW,CAAC,CAAC,CAAC,gBAAgB,CAAC,SAAS,GAAG,yBAAS,CAAC,UAAU,CAAC;YACzH,CAAC;YACD,IAAI,CAAC,YAAY,EAAE,CAAC;QAEtB,CAAC;QACO,YAAY;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC,CAAC;YACxE,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAChE,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,CAAC;QACH,CAAC;KAEF;IAzCY,uBAAa,gBAyCzB;IAED,eAAuB,SAAQ,KAAK;QAElC,KAAK;YACH,IAAI,WAAW,GAAgB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC,CAAC;YACxF,IAAI,aAAa,GAAqB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC;YAC1G,uBAAuB;YACtB,IAAI,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAClD,0CAA0C;YAC1C,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpB,aAAa,CAAC,SAAS,GAAG,yBAAS,CAAC,UAAU,CAAC;YACjD,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,aAAa,CAAC,SAAS,GAAG,yBAAS,CAAC,WAAW,CAAC;YAClD,CAAC;QACH,CAAC;QAED,KAAK;YACH,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG,yBAAS,CAAC,IAAI,CAAC;QAChG,CAAC;QAED,MAAM;YACJ,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC9E,CAAC;KACF;IAvBY,mBAAS,YAuBrB;IAED,kBAA0B,SAAQ,KAAK;QAErC,KAAK;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACnH,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG,yBAAS,CAAC,UAAU,CAAC;YACtG,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG,yBAAS,CAAC,WAAW,CAAC;YACvG,CAAC;QACH,CAAC;QAED,KAAK;QACL,CAAC;QAED,MAAM;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACpC,MAAM,cAAc,GAAW,KAAK,CAAC;gBACrC,MAAM,qBAAqB,GAAG,CAAC,CAAC;gBAEhC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;gBAC5F,IAAI,CAAC,OAAO,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC;qBACrD,MAAM,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC;qBAC1D,UAAU,CAAC,qBAAqB,CAAC,CAAC;YACvC,CAAC;QACH,CAAC;KAEF;IA1BY,sBAAY,eA0BxB;IAED,eAAuB,SAAQ,KAAK;QAElC,KAAK;QACL,CAAC;QAED,KAAK;QACL,CAAC;QAED,MAAM;QACN,CAAC;KAEF;IAXY,mBAAS,YAWrB;IAED,eAAuB,SAAQ,KAAK;QAElC,KAAK;YACH,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACjH,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC;YAC5F,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG,yBAAS,CAAC,UAAU,CAAC;gBACpG,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG,yBAAS,CAAC,WAAW,CAAC;gBACrG,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAElC,CAAC;QACH,CAAC;QAED,KAAK;YACH,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG,yBAAS,CAAC,IAAI,CAAC;QAChG,CAAC;QAED,MAAM;YACJ,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC9E,CAAC;KAEF;IAxBY,mBAAS,YAwBrB;IAED,gBAAwB,SAAQ,KAAK;QAEnC,KAAK;QACL,CAAC;QAED,KAAK;QACL,CAAC;QAED,MAAM;YACJ,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC,CAAC;YACxE,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC;YAE5F,uCAAuC;YACvC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,SAAS,GAAG,yBAAS,CAAC,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,SAAS,GAAG,yBAAS,CAAC,WAAW,CAAC;QAC5I,CAAC;KAEF;IAhBY,oBAAU,aAgBtB;AACH,CAAC,EA7KgB,SAAS,GAAT,iBAAS,KAAT,iBAAS,QA6KzB;;;;;;;;;;ACzLD,2CAAsC;AACtC,+CAAiE;AACjE,6CAAiD;AAKjD,6CAA4C;AAE5C,IAAiB,mBAAmB,CAqGnC;AArGD,WAAiB,mBAAmB;IAElC,IAAO,oBAAoB,GAAG,uBAAU,CAAC,oBAAoB,CAAC;IAG9D,yBAAiC,SAAQ,qBAAS;QAEhD;YACE,KAAK,CAAC,6BAAa,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,CAAC,mBAAmB,GAAG;gBACzB,6BAAa,CAAC,OAAO;aACtB,CAAC;QACJ,CAAC;QAEM,iBAAiB,CAAC,mBAAmC;YAE1D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;YAC/D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAEM,eAAe;YACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QACvD,CAAC;QAEM,YAAY,CAAC,YAA4B,EAAE,OAAsB;YACtE,IAAI,IAAI,GAA2B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;YAE3D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAChE,MAAM,CAAC;YACT,CAAC;YAED,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;gBACzB,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACf,KAAK,sBAAM,CAAC,OAAO;wBACjB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;wBAC5B,KAAK,CAAC;oBAER,KAAK,sBAAM,CAAC,MAAM;wBAChB,sDAAsD;wBACtD,4CAA4C;wBAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,6BAAa,CAAC,EAAE,CAAC,CAAC;wBAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC,CAAC;wBACnF,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC;wBAE7E,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;gCAC/B,IAAI,YAAY,GAAG,IAAI,oBAAoB,EAAE,CAAC;gCAC9C,YAAY,CAAC,mBAAmB,CAAC,wBAAU,CAAC,WAAW,CAAC,CAAC;gCACzD,UAAU,CAAC,UAAU,CAAC,wBAAU,CAAC,WAAW,CAAC,CAAC;4BAChD,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACR,CAAC;wBACD,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;4BAC/B,UAAU,CAAC,UAAU,CAAC,wBAAU,CAAC,YAAY,CAAC,CAAC;wBACjD,CAAC,CAAC,CAAC;wBACH,KAAK,CAAC;oBAER;wBACE,KAAK,CAAC;gBACV,CAAC;YACH,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;KAEF;IA3DY,uCAAmB,sBA2D/B;IAED,sBAA8B,SAAQ,qBAAS;QAG7C,YAAY,IAAiB;YAC3B,KAAK,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;QAEM,UAAU,CAAC,OAAgB,IAAI;YACpC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAEnG,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,IAAW,OAAO;YAChB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;QACzC,CAAC;QAEM,WAAW,CAAC,KAAa;YAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;YACnC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAEM,UAAU;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACpE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QAC7C,CAAC;KACF;IAlCY,oCAAgB,mBAkC5B;AACH,CAAC,EArGgB,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAqGnC;;;;;;;;;;AC5GD;;;KAGK;AACL;IAKE;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,CAAC;IAED;;;;;SAKK;IACE,SAAS,CAAC,IAAiD;QAChE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAEM,SAAS,CAAC,IAAiD,EAAE,MAAqB;QACvF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAEM,cAAc,CAAC,IAAY,EAAE,SAA0B;QAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAEM,cAAc,CAAC,IAAY;QAChC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,UAAU;QACZ,IAAI,GAAG,GAAoB,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,KAAoB,EAAE,EAAE;YAChD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,IAAI,WAAW;QACb,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAI,WAAW,CAAC,KAAqB;QACnC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;CACF;AAnDD,gCAmDC;;;;;;;;;;ACzDD,2CAAwC;AAExC,+CAA+G;AAE/G,2CAA6C;AAO7C,6CAAiD;AAGjD,IAAiB,iBAAiB,CA+KjC;AA/KD,WAAiB,iBAAiB;IAKhC,uBAA+B,SAAQ,qBAAS;QAC9C;YACE,KAAK,CAAC,6BAAa,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC;QAED,MAAM;YACJ,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC;YACtF,MAAM,SAAS,GAAG,eAAe,CAAC,mBAAmB,EAAE,CAAC;YACxD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,wBAAU,CAAC,UAAU,CAAC,CAAE;gBACxE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;YAC7C,CAAC;QACH,CAAC;KACF;IAdY,mCAAiB,oBAc7B;IACD,qBAA6B,SAAQ,qBAAS;QAG5C,YAAY,IAAiB;YAC3B,KAAK,CAAC,6BAAa,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,6BAAa,CAAC,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,6BAAa,CAAC,KAAK,CAAC,CAAC;QACrD,CAAC;QAED;;;;aAIK;QACL,UAAU;YACR,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC;YAC3E,IAAI,UAAU,GAAG;gBACf,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACzD,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aACpC,CAAC;YAEF,iEAAiE;YACjE,IAAI,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3F,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChB,mGAAmG;gBACnG,UAAU,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3C,UAAU,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EACpD,WAAW;gBACT,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC,WAAW;gBAC1E,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QAC5F,CAAC;QAEO,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,GAAG,GAAG;YACnD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC;YACrF,IAAI,WAAW,GAAG,cAAc,CAAC,KAAK,CAAC,YAAY,CAAc,6BAAa,CAAC,EAAE,CAAC,CAAC;YACnF,IAAI,OAAe,CAAC;YACpB,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC;YACxE,WAAW;gBACT,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,kBAAkB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC;gBACpE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,kBAAkB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YACtE,WAAW;gBACT,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,kBAAkB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC;gBACpE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,kBAAkB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEtE,4BAA4B,OAAgB,IAAI,EAAE,SAAiB,EAAE,KAAa;gBAChF,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACpC,CAAC;YAED,4BAA4B,OAAgB,IAAI,EAAE,SAAiB,EAAE,KAAa;gBAChF,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACpC,CAAC;QACH,CAAC;KAEF;IAzDY,iCAAe,kBAyD3B;IAED,iBAAyB,SAAQ,qBAAS;QAIxC,YAAY,MAAc,EAAE,YAA2B;YAErD,KAAK,CAAC,6BAAa,CAAC,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,mBAAmB,GAAG,CAAC,6BAAa,CAAC,OAAO,EAAE,6BAAa,CAAC,OAAO,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,IAAI,CAAC,CAAC;YACnH,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;QAClC,CAAC;QAED,MAAM;YACJ,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAEM,MAAM;YACX,8DAA8D;YAC9D,iFAAiF;YACjF,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC;YAC3E,+EAA+E;YAE/E,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;gBAC5B,KAAK,0BAAU,CAAC,aAAa;oBAC3B,KAAK,CAAC,QAAQ,CAAC,4BAAY,CAAC,QAAQ,CAAC,CAAC;oBACtC,KAAK,CAAC;gBACR,KAAK,0BAAU,CAAC,KAAK;oBACnB,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAkB,6BAAa,CAAC,MAAM,CAAC,CAAC;oBACjF,IAAI,SAAS,GAAY,UAAU,CAAC,gBAAgB,EAAE,IAAI,UAAU,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;oBACxF,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACf,KAAK,CAAC,QAAQ,CAAC,4BAAY,CAAC,KAAK,CAAC,CAAC;oBACrC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,oCAAoC;wBACpC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;4BAC9B,KAAK,CAAC,QAAQ,CAAC,4BAAY,CAAC,OAAO,CAAC,CAAC;4BACrC,MAAM,CAAC;wBACT,CAAC;wBACD,KAAK,CAAC,QAAQ,CAAC,4BAAY,CAAC,OAAO,CAAC,CAAC;oBACvC,CAAC;oBACD,KAAK,CAAC;gBACR,KAAK,0BAAU,CAAC,QAAQ;oBACtB,KAAK,CAAC,QAAQ,CAAC,4BAAY,CAAC,IAAI,CAAC,CAAC;oBAClC,KAAK,CAAC;gBACR;oBACE,KAAK,CAAC;YAEV,CAAC;QACH,CAAC;QAEO,kBAAkB;YACxB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,MAAc,EAAE,EAAE;gBAC9C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAC/D,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,YAAY;YAClB,MAAM,aAAa,GAAkB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC;YACjG,MAAM,gBAAgB,GAAqB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC;YAC7G,MAAM,QAAQ,GAAW,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACtE,MAAM,UAAU,GAAG,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAE7E,MAAM,iBAAiB,GAAW,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG,gBAAgB,CAAC,OAAO,CAAC;YACjK,MAAM,sBAAsB,GAAG,GAAG,CAAC;YAEnC,EAAE,CAAC,CAAC,oBAAQ,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,sBAAsB,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;gBACpI,MAAM,CAAC,0BAAU,CAAC,aAAa,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,0BAAU,CAAC,KAAK,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,0BAAU,CAAC,QAAQ,CAAC;YAC7B,CAAC;QAEH,CAAC;QAED,IAAI,MAAM;YACR,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;QAED,IAAI,UAAU;YACZ,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;KACF;IAjFY,6BAAW,cAiFvB;IAED,qBAA6B,SAAQ,qBAAS;QAG5C,YAAY,IAAiB;YAC3B,KAAK,CAAC,6BAAa,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;QAED,QAAQ,CAAC,MAAqB;YAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;KACF;IAXY,iCAAe,kBAW3B;AAEH,CAAC,EA/KgB,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QA+KjC;;;;;;;;;;AC7LD,2CAAsC;AACtC,+CAA6E;AAC7E,4CAAyC;AAMzC,IAAiB,cAAc,CAmL9B;AAnLD,WAAiB,cAAc;IAC7B,qBAA6B,SAAQ,qBAAS;QAE5C;YACE,KAAK,CAAC,6BAAa,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,6BAAa,CAAC,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC;QAED;;;;aAIK;QACE,UAAU,CAAC,MAAc;YAE9B,2CAA2C;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAsB,6BAAa,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;gBACzF,IAAI,CAAC,MAAM,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/E,IAAI,CAAC,MAAM,CAAC,YAAY,CAAiB,6BAAa,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,sBAAM,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACtH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACxB,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpC,CAAC;QACH,CAAC;QAEM,SAAS,CAAC,MAAc;YAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QAC3B,CAAC;QACM,gBAAgB;YACrB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;QACnC,CAAC;QACM,YAAY;YACjB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;KACF;IArCY,8BAAe,kBAqC3B;IAED,oBAA4B,SAAQ,qBAAS;QAC3C;YACE,KAAK,CAAC,6BAAa,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;QAEM,QAAQ,CAAC,UAAkB;YAChC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC;YAC5C,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAEM,YAAY,CAAC,IAAY,EAAE,MAA4B,EAAE,SAAkB,EAAE,IAAc,EAAE,eAAyB;YAC3H,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;QACpF,CAAC;QAEM,YAAY,CAAC,IAAY;YAC9B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC;QACM,mBAAmB;YACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;QACnD,CAAC;QAEM,aAAa,CAAC,IAAY,EAAE,SAAkB,EAAE,IAAc,EAAE,cAAwB;YAC7F,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACtC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE;oBAC5E,OAAO,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,CAAC;QACN,CAAC;KACF;IA9BY,6BAAc,iBA8B1B;IAED,mBAA2B,SAAQ,qBAAS;QA2B1C,YAAY,QAAQ;YAClB,KAAK,CAAC,6BAAa,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC;QAGD,IAAI,WAAW;YACb,EAAE,CAAC,CAAC,oBAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACpD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChD,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACvD,CAAC;QACH,CAAC;QAED,IAAI,UAAU;YAEZ,EAAE,CAAC,CAAC,oBAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAC,0BAAU,CAAC,UAAU,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjD,MAAM,CAAC,0BAAU,CAAC,YAAY,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,CAAC,0BAAU,CAAC,UAAU,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACpD,MAAM,CAAC,0BAAU,CAAC,WAAW,CAAC;YAChC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChD,MAAM,CAAC,0BAAU,CAAC,WAAW,CAAC;YAChC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;YACtD,CAAC;QACH,CAAC;QAED,IAAI,KAAK;YACP,EAAE,CAAC,CAAC,oBAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjD,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACpD,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChD,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;YACtD,CAAC;QACH,CAAC;QAED,IAAI,KAAK;YACP,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QACD,IAAI,QAAQ;YACV,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;KAEF;IAzFY,4BAAa,gBAyFzB;IAED,oBAA4B,SAAQ,qBAAS;QAG3C;YACE,KAAK,CAAC,6BAAa,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;QAED,IAAI,KAAK,CAAC,KAAa;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;QAED,IAAI,KAAK;YACP,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;KAEF;IAfY,6BAAc,iBAe1B;AACH,CAAC,EAnLgB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAmL9B;;;;;;;;;;ACzLD;IACS,MAAM,CAAC,eAAe,CAAC,QAAoB;QAChD,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IACM,MAAM,CAAC,cAAc,CAAC,QAAoB;QAC/C,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IACM,MAAM,CAAC,YAAY,CAAC,QAAoB;QAC7C,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IACM,MAAM,CAAC,WAAW,CAAC,QAAoB;QAC5C,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IACM,MAAM,CAAC,WAAW,CAAC,QAAoB;QAC5C,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;CACF;AAhBD,4BAgBC;;;;;;;;;;AClBD,+CAAoF;AAEpF,2CAAwC;AAYxC,IAAiB,gBAAgB,CA0FhC;AA1FD,WAAiB,gBAAgB;IAI/B,oBAA4B,SAAQ,qBAAS;QAK3C,YAAY,IAAiB,EAAE,OAAyB;YACtD,KAAK,CAAC,6BAAa,CAAC,KAAK,CAAC,CAAC;YALrB,cAAS,GAAY,KAAK,CAAC;YAE3B,WAAM,GAAG,CAAC,CAAC;YAIjB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,CAAC;QAED,MAAM;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAI,QAAQ,CAAC,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;QAEO,WAAW;YACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5F,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC3B,CAAC;QACD,IAAW,iBAAiB;YAC1B,MAAM,aAAa,GAAkB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC;YACjG,MAAM,gBAAgB,GAAqB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC;YAE7G,MAAM,UAAU,GAAG,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7E,MAAM,iBAAiB,GAAW,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG,gBAAgB,CAAC,OAAO,CAAC;YAEjK,MAAM,CAAC,iBAAiB,CAAC;QAE3B,CAAC;KACF;IApCY,+BAAc,iBAoC1B;IAED,sBAA8B,SAAQ,qBAAS;QAG7C;YACE,KAAK,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;QAEO,gBAAgB;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;YACrI,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;YACvI,CAAC;QACH,CAAC;QAEO,SAAS;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;QAC3G,CAAC;QACO,QAAQ;YACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAgB,6BAAa,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5G,CAAC;QACM,MAAM;YACX,IAAI,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAmB,6BAAa,CAAC,OAAO,CAAC,CAAC;YAEzF,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxB,KAAK,yBAAS,CAAC,UAAU;oBACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,UAAU,GAAG,yBAAS,CAAC,IAAI,CAAC;oBACjC,KAAK,CAAC;gBACR,KAAK,yBAAS,CAAC,WAAW;oBACxB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,UAAU,GAAG,yBAAS,CAAC,IAAI,CAAC;oBACjC,KAAK,CAAC;gBACR;oBACE,KAAK,CAAC;YACV,CAAC;QACH,CAAC;QACD,IAAI,SAAS;YACX,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;QAED,IAAI,SAAS,CAAC,KAAgB;YAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;KACF;IA/CY,iCAAgB,mBA+C5B;AACH,CAAC,EA1FgB,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QA0FhC;;;;;;;;;;ACxGD,+CAAkD;AAClD,+CAAyE;AACzE,2CAAwC;AAIxC,oBAA4B,SAAQ,qBAAS;IAE3C;QACE,KAAK,CAAC,6BAAa,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,sBAAY,EAAE,CAAC;IACjC,CAAC;IACM,QAAQ,CAAC,IAAkB,EAAE,KAAY;QAC9C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC3B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACM,QAAQ,CAAC,IAAkB;QAChC,IAAI,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC;IACH,CAAC;IACD,IAAW,YAAY;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC3B,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;CACF;AAzBD,wCAyBC;;;;;;;;;;AC3BD;IAKE;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,CAAC;IACM,GAAG,CAAC,IAAkB,EAAE,KAAY;QACzC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IACM,KAAK,CAAC,IAAkB;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IACM,MAAM;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IACM,QAAQ,CAAC,IAAkB;QAChC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACD,IAAW,OAAO;QAChB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CAEF;AA9BD,+BA8BC;;;;;;;;;;AClCD,yCAAuC;AAGvC;IAKE;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAyB,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,EAAE,CAAC;IAChC,CAAC;IACD,GAAG,CAAC,SAAqB,EAAE,MAAiB;QAC1C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,GAAG;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAgB,EAAE,GAAe,EAAE,EAAE;YACtD,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAE,CAAC;gBAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,IAAI,OAAO;QACT,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF;AAvBD,wBAuBC;;;;;;;;;;AC1BD,+CAA6E;AAC7E,2CAA8C;AAC9C,yCAAuC;AAGvC,IAAiB,cAAc,CAsL9B;AAtLD,WAAiB,cAAc;IAC7B;QAgBE,YAAY,IAAiB;YAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;QAWD;;;;WAIG;QACH,IAAI,YAAY;YACd,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAED;;;;WAIG;QACH,IAAI,YAAY;YACd,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAED;;;;WAIG;QACH,IAAI,YAAY,CAAC,KAAa;YAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;QAED,IAAI,gBAAgB;YAClB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC;QAED,IAAI,OAAO;YACT,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;QAED,IAAI,cAAc;YAChB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;QAED,IAAI,aAAa;YACf,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;QACD,IAAI,gBAAgB;YAClB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC;QACD;;;;WAIG;QACH,IAAI,cAAc;YAChB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;QAED;;;;;WAKG;QACH,IAAI,UAAU;YACZ,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;QAGD,IAAI,uBAAuB;YACzB,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;QACvC,CAAC;QAED,cAAc;YACZ,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,oBAAQ,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;KACF;IAvGqB,wBAAS,YAuG9B;IAED,cAAsB,SAAQ,SAAS;QACrC,YAAY,IAAiB;YAC3B,KAAK,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,gBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;YAChG,IAAI,CAAC,cAAc,GAAG,IAAI,gBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1F,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;YACrC,IAAI,CAAC,cAAc,GAAG,CAAC,0BAAU,CAAC,UAAU,EAAE,0BAAU,CAAC,cAAc,EAAE,0BAAU,CAAC,aAAa,EAAE,0BAAU,CAAC,UAAU,EAAE,0BAAU,CAAC,WAAW,CAAC,CAAC;QACpJ,CAAC;QAEM,IAAI;YACT,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAM,CAAC,SAAS,CAAC,CAAC;YACnD,GAAG,CAAC,eAAe,CAAC,0BAAU,CAAC,WAAW,EAAE,0BAAU,CAAC,WAAW,CAAC,CAAC;YACpE,GAAG,CAAC,eAAe,CAAC,0BAAU,CAAC,UAAU,EAAE,0BAAU,CAAC,UAAU,CAAC,CAAC;YAElE,GAAG,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;YAC9C,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;YAC5C,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,WAAW,EAAE,CAAC;YACjD,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC;YAE/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,uBAAuB,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;YAE9F,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAEhB,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;YAChC,CAAC;QACH,CAAC;QAEM,OAAO;YACZ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC;KACF;IApCY,uBAAQ,WAoCpB;IAED,cAAsB,SAAQ,SAAS;QACrC,YAAY,IAAiB;YAC3B,KAAK,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,gBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;YAChG,IAAI,CAAC,cAAc,GAAG,IAAI,gBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1F,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,CAAC,0BAAU,CAAC,UAAU,EAAE,0BAAU,CAAC,UAAU,EAAE,0BAAU,CAAC,WAAW,EAAE,0BAAU,CAAC,aAAa,EAAE,0BAAU,CAAC,aAAa,CAAC,CAAC;YACjJ,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;YAErC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;YAChC,CAAC;QAEH,CAAC;QAED,IAAI;YAEF,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAM,CAAC,SAAS,CAAC,CAAC;YACnD,GAAG,CAAC,eAAe,CAAC,0BAAU,CAAC,WAAW,EAAE,0BAAU,CAAC,WAAW,CAAC,CAAC;YACpE,GAAG,CAAC,eAAe,CAAC,0BAAU,CAAC,UAAU,EAAE,0BAAU,CAAC,UAAU,CAAC,CAAC;YAElE,GAAG,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;YAC9C,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;YAC5C,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,WAAW,EAAE,CAAC;YACjD,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC;YAE/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,uBAAuB,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;YAC9F,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,CAAC;QAED,OAAO;YACL,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC;KACF;IApCY,uBAAQ,WAoCpB;AAEH,CAAC,EAtLgB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAsL9B","file":"js/main.js","sourcesContent":["export enum States {\r\n  GAMEOVER_SATE = 'gameover_state',\r\n  MAIN_MENU_STATE = 'main_menu_state',\r\n  BOOT_STATE = 'boot_state',\r\n  PRELOAD_STATE = 'preload_state',\r\n  GAME_STATE = 'game_state'\r\n}\r\n\r\nexport enum Levels {\r\n  LEVEL_ONE = 'level_one',\r\n  LEVEL_TWO = 'level_two'\r\n}\r\n\r\nexport enum Difficulty {\r\n  INSANE = 1,\r\n  HARD = 2,\r\n  NORMAL = 3,\r\n  EASY = 4\r\n}\r\n\r\nexport enum TankLayout {\r\n  GREEN_FORTRESS = 'tanks_tankGreen1.png', GREEN_ARTILERY = 'tanks_tankGreen2.png',\r\n  GREEN_HUNTER = 'tanks_tankGreen3.png', GREEN_RECON = 'tanks_tankGreen4.png',\r\n  GREEN_LIGHT = 'tanks_tankGreen5.png',\r\n  GREY_FORTRESS = 'tanks_tankGrey1.png', GREY_ARTILERY = 'tanks_tankGrey2.png',\r\n  GREY_HUNTER = 'tanks_tankGrey3.png', GREY_RECON = 'tanks_tankGrey4.png',\r\n  GREY_LIGHT = 'tanks_tankGrey5.png',\r\n  CANDY_FORTRESS = 'tanks_tankDesert1.png', CANDY_ARTILLERY = 'tanks_tankDesert2.png',\r\n  CANDY_HUNTER = 'tanks_tankDesert3.png', CANDY_RECON = 'tanks_tankDesert4.png',\r\n  CANDY_LIGHT = 'tanks_tankDesert5.png',\r\n  DARK_FORTRESS = 'tanks_tankNavy1.png', DARK_ARTILLERY = 'tanks_tankNavy2.png',\r\n  DARK_HUNTER = 'tanks_tankNavy3.png', DARK_RECON = 'tanks_tankNavy4.png',\r\n  DARK_LIGHT = 'tanks_tankNavy5.png',\r\n  BULLET_ONE = 'tank_bullet1.png', BULLET_TWO = 'tank_bullet2.png',\r\n  BULLET_THREE = 'tank_bullet3.png', BULLET_FOUR = 'tank_bullet4.png',\r\n  BULLET_FIVE = 'tank_bullet5.png', BULLET_SIX = 'tank_bullet6.png',\r\n  EXPLOSION_ONE = 'tank_explosion1.png',\r\n  EXPLOSION_TWO = 'tank_explosion2.png',\r\n  EXPLOSION_THREE = 'tank_explosion3.png',\r\n  EXPLOSION_FOUR = 'tank_explosion4.png',\r\n  EXPLOSION_FIVE = 'tank_explosion5.png',\r\n  EXPLOSION_SIX = 'tank_explosion6.png',\r\n  EXPLOSION_SEVEN = 'tank_explosion7.png',\r\n  EXPLOSION_EIGHT = 'tank_explosion8.png',\r\n  EXPLOSION_NINE = 'tank_explosion9.png',\r\n  EXPLOSION_TEN = 'tank_explosion10.png',\r\n  EXPLOSION_ELEVEN = 'tank_explosion11.png',\r\n  EXPLOSION_TWELVE = 'tank_explosion12.png',\r\n  TANK_SPRITESHEET = 'tankSpritesheet'\r\n}\r\n\r\nexport enum ComponentType {\r\n  DISASTER = 'disaster_component',\r\n  HEALTH = 'health_component',\r\n  TANK = 'tank_component',\r\n  OWNER = 'owner_component',\r\n  STATE = 'state_component',\r\n  AI = 'ai_component',\r\n  COLLISION = 'collision_component',\r\n  BULLET = 'bullet_component',\r\n  LAYER = 'layer_component',\r\n  SHOOT = 'shoot_component',\r\n  PHYSICS = 'physics_component',\r\n  CAMERA = 'camera_component',\r\n  MOVABLE = 'movable_component'\r\n}\r\n\r\nexport enum UIComponents {\r\n  PROGRESS_BAR = 'progresBar',\r\n  LOGO = 'logo',\r\n  PANEL = 'green_panel.png',\r\n  FULL_BUTTON = 'green_button00.png',\r\n  YES_BUTTON = 'green_boxCheckmark.png',\r\n  NO_BUTTON = 'green_boxCross.png',\r\n  UI_SPRITESHEET = 'uiSpritesheet',\r\n  LEVEL_ONE_IMAGE = 'level_one_image',\r\n  LEVEL_TWO_IMAGE = 'level_two_image',\r\n  CANDY_FORTRESS_IMG = 'candy_fortress_img', CANDY_ARTILLERY_IMG = 'candy_artillery_img',\r\n  CANDY_HUNTER_IMG = 'candy_hunter_img', CANDY_RECON_IMG = 'candy_recon_img',\r\n  CANDY_LIGHT_IMG = 'candy_light_img',\r\n  PLAYER_VISUALS_SPRITESHEET = 'player_visuals_spritesheet',\r\n  FULL_HEART = 'hudHeart_full.png',\r\n  HALF_HEART = 'hudHeart_half.png',\r\n  EMPTY_HEART = 'hudHeart_empty.png'\r\n}\r\n\r\nexport enum TileLayers {\r\n  GRASS_LAYER = 'grassLayer',\r\n  BACKGROUND = 'background',\r\n  CANDY_LAYER = 'candyLayer'\r\n}\r\n\r\nexport enum InputType {\r\n  STOP = 'stop',\r\n  RIGHT_INPUT = 'right',\r\n  LEFT_INPUT = 'left',\r\n  SHOOT = 'shoot'\r\n}\r\n\r\nexport enum Action {\r\n  EXPLODE = 'explode_action',\r\n  DAMAGE = 'damage_action',\r\n  NOTHING = 'no_action'\r\n}\r\n\r\nexport enum AnimationTypes {\r\n  EXPLOSION = 'explosion_animation'\r\n}\r\n\r\nexport enum FsmStateName {\r\n  EVADE,\r\n  SUICIDE,\r\n  IDLE,\r\n  SEEK,\r\n  PURSUING,\r\n  FLEEING\r\n}\r\n\r\nexport enum MainMenuButtons {\r\n  NEW_GAME = 'new_game',\r\n  HIGH_SCORE = 'high_score',\r\n  PREFERENCES = 'preferences',\r\n  SELECT_LEVEL = 'select_level',\r\n  SELECT_PLAYER = 'select_player',\r\n  SELECT_DIFFICULTY = 'select_difficulty',\r\n  BACK = 'back'\r\n}\r\nexport enum AIConstant {\r\n  FAR_AWAY,\r\n  CLOSE,\r\n  CANNOT_HIT,\r\n  CAN_HIT_ENEMY\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/GameConstants.ts","import { Difficulty, Levels, TankLayout } from '../constants/GameConstants';\r\n\r\n/**\r\n * @class\r\n * Will hold the options selected by the player\r\n * */\r\nexport class DataConfig {\r\n  /**\r\n   * @static\r\n   * Represents the level selected by the player\r\n   * */\r\n  private static _shadowLevel: Levels;\r\n  private static _level: Levels = Levels.LEVEL_ONE;\r\n  private static _tank: TankLayout.CANDY_RECON\r\n    | TankLayout.CANDY_ARTILLERY\r\n    | TankLayout.CANDY_FORTRESS\r\n    | TankLayout.CANDY_HUNTER\r\n    | TankLayout.CANDY_LIGHT\r\n    = TankLayout.CANDY_HUNTER;\r\n  private static _difficulty: Difficulty = Difficulty.NORMAL;\r\n  private static _shadowTank: TankLayout.CANDY_RECON | TankLayout.CANDY_ARTILLERY | TankLayout.CANDY_FORTRESS | TankLayout.CANDY_HUNTER | TankLayout.CANDY_LIGHT;\r\n  private static _shadowDifficulty: Difficulty;\r\n  /**\r\n   * @static\r\n   * Returns the selected level\r\n   * */\r\n  static get level(): Levels {\r\n    return this._level;\r\n  }\r\n\r\n  /**\r\n   * @static\r\n   * Sets the playable level\r\n   * @param {Levels} value - the enum representation of a level\r\n   * */\r\n  static set level(value: Levels) {\r\n    this._shadowLevel = this._level;\r\n    this._level = value;\r\n  }\r\n\r\n  static set tank(value: TankLayout.CANDY_RECON | TankLayout.CANDY_ARTILLERY | TankLayout.CANDY_FORTRESS | TankLayout.CANDY_HUNTER | TankLayout.CANDY_LIGHT) {\r\n    this._shadowTank = this._tank;\r\n    this._tank = value;\r\n  }\r\n\r\n  static get tank(): TankLayout.CANDY_RECON | TankLayout.CANDY_ARTILLERY | TankLayout.CANDY_FORTRESS | TankLayout.CANDY_HUNTER | TankLayout.CANDY_LIGHT {\r\n    return this._tank;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * Checks if the any of the data has been changed see {@link DataConfig}\r\n   * @return {boolean} changed\r\n   * */\r\n  static hasChanged(): boolean {\r\n    let changed = false;\r\n\r\n    this._level === this._shadowLevel ? changed = changed : changed = true;\r\n\r\n    return changed;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * Will revert the values to their prior conditions NOT the initial conditions\r\n   * */\r\n  static revertChanges(): void {\r\n    this._shadowLevel ? this._level = this._shadowLevel : this._level = this._level;\r\n    this._shadowTank ? this._tank = this._shadowTank : this._tank = this._tank;\r\n    this._shadowDifficulty ? this._difficulty = this._shadowDifficulty : this._difficulty = this._difficulty;\r\n    DataConfig.applyCahnges();\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * Use once you set up all the values to confirm the changes\r\n   * */\r\n  static applyCahnges(): void {\r\n    this._shadowLevel = null;\r\n    this._shadowTank = null;\r\n    this._shadowDifficulty = null;\r\n  }\r\n\r\n\r\n  static get playerMaxHealth(): number {\r\n    switch (this._difficulty) {\r\n      case Difficulty.EASY:\r\n        return 8;\r\n      case Difficulty.NORMAL:\r\n        return 6;\r\n      case Difficulty.HARD:\r\n        return 4;\r\n      case Difficulty.INSANE:\r\n        return 2;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  static get enemyHealth(): number {\r\n    switch (this._difficulty) {\r\n      case Difficulty.EASY:\r\n      case Difficulty.NORMAL:\r\n        return 4;\r\n      case Difficulty.HARD:\r\n        return 8;\r\n      case Difficulty.INSANE:\r\n        return 10;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  static get playerDamage(): number {\r\n    switch (this._difficulty) {\r\n      case Difficulty.EASY:\r\n        return 3;\r\n      case Difficulty.NORMAL:\r\n        return 2;\r\n      case Difficulty.HARD:\r\n      case Difficulty.INSANE:\r\n        return 1;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  static get enemyDamage(): number {\r\n    switch (this._difficulty) {\r\n      case Difficulty.EASY:\r\n      case Difficulty.NORMAL:\r\n        return 1;\r\n      case Difficulty.HARD:\r\n        return 2;\r\n      case Difficulty.INSANE:\r\n        return 3;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  static get difficulty(): Difficulty {\r\n    return this._difficulty;\r\n  }\r\n\r\n  static set difficulty(value: Difficulty) {\r\n    this._shadowDifficulty = this._difficulty;\r\n    this._difficulty = value;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/data.config.ts","export class MathUtil {\n\n  public static normalize(val, max = 4941, min = -46) {\n    return (val - min) / (max - min);\n  }\n  public static degToRad(degrees: number): number {\n    return degrees * Math.PI / 180;\n  }\n  public static radToDeg(rad: number): number {\n    return rad * 180 / Math.PI;\n  }\n  /**\n   * @description\n   * Will return a random number between the two values provided including the values\n   * @param {number} min - The lowest number to return\n   * @param {number} max - The maximum number to return\n   * @return {number} randomNum - A number between min and max\n   * */\n  public static randomIntFromInterval(min: number, max: number): number\n  {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n public static isBetween(toCompare , max: number , min: number): boolean {\n    if (max > toCompare && toCompare > min) {\n      return true;\n    }\n    return false;\n }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/math.util.ts","import { ComponentType } from '../constants/GameConstants';\r\nimport { Entity } from '../entities/entity';\r\n\r\nexport abstract class Component {\r\n\r\n  protected _name: ComponentType;\r\n  protected _target: Entity;\r\n  protected _requiredComponents: Array<ComponentType> = [];\r\n\r\n  constructor(name: ComponentType){\r\n    this._name = name;\r\n  }\r\n  get name(): ComponentType {\r\n    return this._name;\r\n  }\r\n\r\n  get target(): Entity {\r\n    return this._target;\r\n  }\r\n\r\n  set target(target: Entity) {\r\n    this._target = target;\r\n  }\r\n\r\n  public validateComponentRequirments(){\r\n    let errorString: string = '';\r\n    this._requiredComponents.forEach((comp: ComponentType) => {\r\n      if (!this._target.getComponent(comp)) {\r\n        errorString += `Missing component: ${comp.toString()} from component: ${this._name}}`;\r\n      }\r\n    });\r\n    if (errorString) {\r\n      throw new Error(errorString);\r\n    }\r\n  }\r\n  public update(params?: any): void {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/component.ts","import {\n  Difficulty, Levels, MainMenuButtons, States, TankLayout, TileLayers,\n  UIComponents\n} from '../constants/GameConstants';\nimport Vector from '../util/vector';\nimport { DataConfig } from '../config/data.config';\nimport { MenuConfig } from '../config/menu.config';\n\nexport namespace UiManagers {\n  export class MenuManager {\n    // Class Global vars\n    private static _fakeMapExists: boolean = false;\n\n    private static _fakeMap: Phaser.Tilemap;\n    private static _animationTime: number = 333;\n    private static _buttonHeight: number = 50;\n    private static _buttonLength: number = 100;\n\n    /**\n     * @description\n     * Draws the loading screen at state passed\n     * @param {Phaser.State} state\n     */\n    public static setLoadingScreen(state: Phaser.State): void {\n      let logo = state.add.sprite(state.game.world.centerX, state.game.world.centerY, UIComponents.LOGO);\n      let progressBar = state.add.sprite(state.game.world.centerX, state.game.world.centerY + 128, UIComponents.PROGRESS_BAR);\n\n      logo.anchor.setTo(0.5);\n      progressBar.anchor.setTo(0.5);\n      state.load.setPreloadSprite(progressBar);\n    }\n\n    /**\n     * @description\n     * Will use the default box scheme to draw boxes at a location\n     * @param {number} noOfBoxes - How many boxes will be created\n     * @param {Array<Vector>} location - An Array of vectors see {@Link Vector} the location of where the boxes will be created\n     * @param {Phaser.State} state - State to draw the boxes\n     * @param {Array<string} itemToAttach - What text to attach (Optional)\n     * @param {boolean} enableInput - Enable input on buttons defaults to true\n     * @param {UIComponents} componentToDraw - What component will be the parent\n     * @param {Vector} childRelevantPosition - Defaults to 0.5, will place the children at this position of parent object\n     * @return {Array<Phaser.Sprite>} arr - Returns an array of sprites in the order passed\n     */\n    private static drawBoxes(noOfBoxes: number, location: Array<Vector>,\n                             state: Phaser.State, itemToAttach?: Array<string>,\n                             enableInput: boolean = true,\n                             componentToDraw: UIComponents = UIComponents.FULL_BUTTON,\n                             childRelevantPosition: Vector = new Vector(0.5, 0.5)): Array<Phaser.Sprite> {\n      let arr = [];\n\n      for (let i = 0; i < noOfBoxes; i++) {\n\n        let sprite = state.add.sprite(location[i].x, location[i].y, UIComponents.UI_SPRITESHEET, componentToDraw);\n        let style = {font: '22px Arial', fill: '#ff0044', wordWrap: true, wordWrapWidth: sprite.width, align: 'center'};\n        let attachment: string;\n\n        sprite.scale.setTo(0.0, 0.0);\n        sprite.anchor.setTo(0.5, 0.5);\n\n        if (itemToAttach) {\n          itemToAttach[i] ? attachment = itemToAttach[i] : null;\n        }\n        if (attachment) {\n          if (attachment.includes('level') || attachment.includes('img')) {\n            let imageSprite = state.game.add.sprite(0, 0, attachment);\n            imageSprite.anchor.setTo(childRelevantPosition.x, childRelevantPosition.y);\n            sprite.addChild(imageSprite);\n\n          } else {\n            let toAttach = state.game.add.text(0, 0, attachment, style);\n            toAttach.anchor.setTo(childRelevantPosition.x, childRelevantPosition.y);\n            sprite.addChild(toAttach);\n          }\n        }\n        sprite.inputEnabled = enableInput;\n        arr.push(sprite);\n      }\n      return arr;\n    }\n\n    /**\n     * @description\n     * Draws Tick button and Cross button at provided location\n     * @param cancelLocation\n     * @param okLocation\n     * @param state\n     * @return\n     */\n    public static drawAcceptCancelButtons(okLocation: Vector, cancelLocation: Vector, state: Phaser.State): Phaser.Sprite[] {\n      let arr = [];\n      console.log('drawing buttons');\n      arr = this.drawBoxes(\n        1,\n        [okLocation],\n        state,\n        null,\n        true,\n        UIComponents.YES_BUTTON\n      );\n      arr.push(this.drawBoxes(\n        1,\n        [cancelLocation],\n        state,\n        null,\n        true,\n        UIComponents.NO_BUTTON\n      )[0]);\n      arr.forEach((value, index) => {\n        state.game.add.tween(value.scale).to({x: 1.0, y: 1.0}, this._animationTime, Phaser.Easing.Bounce.Out, true);\n      });\n      return arr;\n    }\n\n    /**\n     * @description\n     * Use to draw the main menu at selected state\n     * @return {MenuConfig} config\n     * returns the config file with the sprites\n     */\n    public static drawMainMenu(state: Phaser.State, restartGame: boolean = false): MenuConfig {\n      if (state.key === States.GAMEOVER_SATE || restartGame) {\n        state.game.state.start(States.BOOT_STATE, true, true);\n        this._fakeMapExists = false;\n        this._fakeMap = null;\n        return;\n      }\n      let textArr = ['New Game', 'High Score', 'Preferences'];\n      let config = new MenuConfig();\n\n      let arr = this.drawBoxes(3,\n        [\n          new Vector(state.game.world.centerX, state.game.world.centerY - this._buttonHeight * 2),\n          new Vector(state.game.world.centerX, state.game.world.centerY - this._buttonHeight),\n          new Vector(state.game.world.centerX, state.game.world.centerY)],\n        state,\n        textArr);\n\n      arr.forEach((value, index) => {\n        state.game.add.tween(value.scale).to({x: 1.0, y: 1.0}, this._animationTime, Phaser.Easing.Bounce.Out, true);\n        config.setSprite(MainMenuButtons[textArr[index].toUpperCase().replace(' ', '_')], value);\n        state.game.camera.focusOn(value);\n        value.bringToTop();\n      });\n      let map: Phaser.Tilemap;\n\n      if (!this._fakeMapExists) {\n        map = config.fakeTileMap = state.game.add.tilemap(Levels.LEVEL_ONE);\n        map.addTilesetImage(TileLayers.GRASS_LAYER, TileLayers.GRASS_LAYER);\n        map.addTilesetImage(TileLayers.BACKGROUND, TileLayers.BACKGROUND);\n\n        map.createLayer('SkyPrimary').resizeWorld();\n        map.createLayer('GroundSecondary').resizeWorld();\n        map.createLayer('GroundPrimary').resizeWorld();\n        this._fakeMapExists = true;\n        this._fakeMap = map;\n      }\n\n      config.getSprite(MainMenuButtons.NEW_GAME).events.onInputDown.add(() => {\n        this._fakeMapExists ? this._fakeMap.destroy() : null;\n        state.game.state.start(States.GAME_STATE); // Phaser cant detect start on first state???\n      });\n\n      config.getSprite(MainMenuButtons.PREFERENCES).events.onInputDown.add(() => {\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawPreferences(state);\n        });\n      });\n\n      return config;\n\n    }\n\n    /**\n     * @description\n     * Fades out passed sprites and then destroys them\n     * @param {Phaser.State} state\n     * @param {Array<Phaser.Sprite>} fadeoutSprites\n     * @return {Promise} promise - The returned promise will be completed when all sprites have fadedout\n     */\n    public static fadeoutSprites(state: Phaser.State, fadeoutSprites: Array<Phaser.Sprite>): Promise<void> {\n      return new Promise((resolve, reject) => {\n        if (fadeoutSprites) {\n          fadeoutSprites.forEach((sprite: Phaser.Sprite) => {\n            state.game.add.tween(sprite.scale).to({\n              x: 0.0,\n              y: 0.0\n            }, this._animationTime, Phaser.Easing.Linear.None, true).onComplete.add(() => {\n              sprite.destroy();\n              resolve();\n            });\n          });\n        } else {\n          reject();\n        }\n      });\n    }\n\n    /**\n     * @description\n     * Function to draw preferences options on current state\n     * @param {Phaser.State} state - Current State\n     * @param {Phaser.Sprite[]} fadeoutSprites\n     * @return {MenuConfig} MenuConfig - The menu config to return\n     */\n    public static drawPreferences(state: Phaser.State): MenuConfig {\n      let config = new MenuConfig();\n      let textArr = ['Select Level', 'Select Player', 'Select Difficulty', 'Back'];\n\n      let arr = this.drawBoxes(4,\n        [\n          new Vector(state.game.world.centerX, state.game.world.centerY - this._buttonHeight * 2),\n          new Vector(state.game.world.centerX, state.game.world.centerY - this._buttonHeight),\n          new Vector(state.game.world.centerX, state.game.world.centerY),\n          new Vector(state.game.world.centerX, state.game.world.centerY + this._buttonHeight)],\n        state,\n        textArr);\n\n      arr.forEach((value, index) => {\n        state.game.add.tween(value.scale).to({x: 1.0, y: 1.0}, this._animationTime, Phaser.Easing.Bounce.Out, true);\n        config.setSprite(MainMenuButtons[textArr[index].toUpperCase().replace(' ', '_')], value);\n        // Gives the change of scenery effect\n        state.game.camera.focusOn(value);\n      });\n\n      // Back Button\n      config.getSprite(MainMenuButtons.BACK).events.onInputDown.add(() => {\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawMainMenu(state);\n        });\n      });\n      config.getSprite(MainMenuButtons.SELECT_DIFFICULTY).events.onInputDown.add(() => {\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawDifficulty(state);\n        });\n      });\n      // Select level Button\n      config.getSprite(MainMenuButtons.SELECT_LEVEL).events.onInputDown.add(() => {\n        this.fadeoutSprites(state, arr);\n        this.fadeoutSprites(state, arr).then(() => {\n          // Preference menu has faded out\n          this.drawLevels(state);\n        });\n      });\n\n      config.getSprite(MainMenuButtons.SELECT_PLAYER).events.onInputDown.add(() => {\n        this.fadeoutSprites(state, arr);\n        this.fadeoutSprites(state, arr).then(() => {\n          // Preference menu has faded out\n          this.drawPlayerChoice(state);\n        });\n      });\n      return config;\n    }\n\n    /**\n     * @description\n     * Function to draw the player options of tank choices\n     * @param {Phaser.State} state\n     * @return config\n     */\n    public static drawPlayerChoice(state: Phaser.State): MenuConfig {\n      let centerX = state.game.world.centerX;\n      let centerY = state.game.world.centerY;\n      let config: MenuConfig = new MenuConfig();\n      let tanks = [\n        UIComponents.CANDY_RECON_IMG,\n        UIComponents.CANDY_LIGHT_IMG,\n        UIComponents.CANDY_HUNTER_IMG,\n        UIComponents.CANDY_ARTILLERY_IMG,\n        UIComponents.CANDY_FORTRESS_IMG\n      ];\n      let vecs: Vector[] = [\n        new Vector(centerX, centerY),\n        new Vector(centerX + this._buttonLength, centerY),\n        new Vector(centerX + this._buttonLength * 2, centerY),\n        new Vector(centerX, centerY + this._buttonLength),\n        new Vector(centerX + this._buttonLength, centerY + this._buttonLength)\n      ];\n\n      let arr = this.drawBoxes(\n        tanks.length,\n        vecs,\n        state,\n        tanks,\n        true,\n        UIComponents.PANEL\n      );\n      arr.forEach((value, index) => {\n        state.game.add.tween(value.scale).to({x: 1.0, y: 1.0}, this._animationTime, Phaser.Easing.Bounce.Out, true);\n        config.setSprite(UIComponents[tanks[index].toUpperCase().replace(' ', '_')], value);\n        // Gives the change of scenery effect\n      });\n\n      config.getSprite(UIComponents.CANDY_ARTILLERY_IMG).events.onInputDown.add(() => {\n        DataConfig.tank = TankLayout.CANDY_ARTILLERY;\n      });\n      config.getSprite(UIComponents.CANDY_FORTRESS_IMG).events.onInputDown.add(() => {\n        DataConfig.tank = TankLayout.CANDY_FORTRESS;\n      });\n      config.getSprite(UIComponents.CANDY_HUNTER_IMG).events.onInputDown.add(() => {\n        DataConfig.tank = TankLayout.CANDY_HUNTER;\n      });\n      config.getSprite(UIComponents.CANDY_LIGHT_IMG).events.onInputDown.add(() => {\n        DataConfig.tank = TankLayout.CANDY_LIGHT;\n      });\n      config.getSprite(UIComponents.CANDY_RECON_IMG).events.onInputDown.add(() => {\n        DataConfig.tank = TankLayout.CANDY_RECON;\n      });\n\n      let lastSprite = arr[arr.length - 2];\n      let bArr = this.drawAcceptCancelButtons(new Vector(lastSprite.x - 30, lastSprite.y + 100), new Vector(lastSprite.x + 10, lastSprite.y + 100), state);\n      bArr[0].events.onInputDown.add(() => {\n        DataConfig.applyCahnges();\n        this.fadeoutSprites(state, bArr);\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawPreferences(state);\n        });\n      });\n      bArr[1].events.onInputDown.add(() => {\n        this.fadeoutSprites(state, bArr);\n        DataConfig.revertChanges();\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawPreferences(state);\n        });\n      });\n\n      return config;\n    }\n\n    public static drawDifficulty(state: Phaser.State) {\n      let centerX = state.game.world.centerX;\n      let centerY = state.game.world.centerY;\n      let config: MenuConfig = new MenuConfig();\n      let difficulties = ['Easy', 'Normal', 'Hard', 'Insane'];\n      let loc = [\n        new Vector(centerX, centerY - this._buttonHeight * 2),\n        new Vector(centerX, centerY - this._buttonHeight),\n        new Vector(centerX, centerY),\n        new Vector(centerX, centerY + this._buttonHeight)\n      ];\n\n      let arr = this.drawBoxes(4,\n        loc,\n        state,\n        difficulties);\n\n      arr.forEach((sprite: Phaser.Sprite, index: number) => {\n        state.game.add.tween(sprite.scale).to({x: 1.0, y: 1.0}, this._animationTime, Phaser.Easing.Bounce.Out, true);\n        switch (index) {\n          case 0:\n            config.setSprite(Difficulty.EASY, sprite);\n            break;\n          case 1:\n            config.setSprite(Difficulty.NORMAL, sprite);\n            break;\n          case 2:\n            config.setSprite(Difficulty.HARD, sprite);\n            break;\n          case 3:\n            config.setSprite(Difficulty.INSANE, sprite);\n            break;\n          default:\n            break;\n        }\n      });\n\n      config.getSprite(Difficulty.EASY).events.onInputDown.add(() => {\n        DataConfig.difficulty = Difficulty.EASY;\n      });\n      config.getSprite(Difficulty.NORMAL).events.onInputDown.add(() => {\n        DataConfig.difficulty = Difficulty.NORMAL;\n      });\n      config.getSprite(Difficulty.HARD).events.onInputDown.add(() => {\n        DataConfig.difficulty = Difficulty.HARD;\n      });\n      config.getSprite(Difficulty.INSANE).events.onInputDown.add(() => {\n        DataConfig.difficulty = Difficulty.INSANE;\n      });\n\n      let lastSprite = arr[arr.length - 1];\n      let bArr = this.drawAcceptCancelButtons(new Vector(lastSprite.x - 30, lastSprite.y + 100), new Vector(lastSprite.x + 10, lastSprite.y + 100), state);\n      bArr[0].events.onInputDown.add(() => {\n        DataConfig.applyCahnges();\n        this.fadeoutSprites(state, bArr);\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawPreferences(state);\n        });\n      });\n      bArr[1].events.onInputDown.add(() => {\n        this.fadeoutSprites(state, bArr);\n        DataConfig.revertChanges();\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawPreferences(state);\n        });\n      });\n\n      return config;\n    }\n\n    /**\n     * @description\n     * Will Generate the available levels the player can choose from\n     * @return {MenuConfig} config - see {@Link MenuConfig}\n     */\n    public static drawLevels(state: Phaser.State): MenuConfig {\n      let centerX = state.game.world.centerX;\n      let centerY = state.game.world.centerY;\n      let config: MenuConfig = new MenuConfig();\n      let levels = [UIComponents.LEVEL_ONE_IMAGE, UIComponents.LEVEL_TWO_IMAGE];\n\n      let arr = this.drawBoxes(2,\n        [\n          new Vector(centerX, centerY),\n          new Vector(centerX + this._buttonLength, centerY)],\n        state,\n        levels, true,\n        UIComponents.PANEL);\n\n      arr.forEach((value, index) => {\n        state.game.add.tween(value.scale).to({x: 1.0, y: 1.0}, this._animationTime, Phaser.Easing.Bounce.Out, true);\n        let name = UIComponents[levels[index].toUpperCase().replace(' ', '_')];\n        config.setSprite(name, value);\n        value.events.onInputDown.add(() => {\n          let lName = name.toString();\n          if (lName.includes('one')) {\n            DataConfig.level = Levels.LEVEL_ONE;\n          } else if (lName.includes('two')) {\n            DataConfig.level = Levels.LEVEL_TWO;\n          }\n        });\n      });\n\n      // Setup ok/no buttons\n      let lastSprite = arr[arr.length - 1];\n      let bArr = this.drawAcceptCancelButtons(new Vector(lastSprite.x - arr.length * 50, lastSprite.y + 100), new Vector(lastSprite.x - (arr.length - 1) * 50, lastSprite.y + 100), state);\n      bArr[0].events.onInputDown.add(() => {\n        DataConfig.applyCahnges();\n        this.fadeoutSprites(state, bArr);\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawPreferences(state);\n        });\n      });\n      bArr[1].events.onInputDown.add(() => {\n        this.fadeoutSprites(state, bArr);\n        DataConfig.revertChanges();\n        this.fadeoutSprites(state, arr).then(() => {\n          this.drawPreferences(state);\n        });\n      });\n\n      return config;\n    }\n\n    public static drawGameOver(state: Phaser.State, score: number): void {\n      let map: Phaser.Tilemap;\n      if (this._fakeMapExists) {\n        this._fakeMapExists = false;\n        this._fakeMap.destroy();\n      }\n      map = state.game.add.tilemap(Levels.LEVEL_ONE);\n      map.addTilesetImage(TileLayers.GRASS_LAYER, TileLayers.GRASS_LAYER);\n      map.addTilesetImage(TileLayers.BACKGROUND, TileLayers.BACKGROUND);\n\n      map.createLayer('SkyPrimary').resizeWorld();\n      map.createLayer('GroundSecondary').resizeWorld();\n      map.createLayer('GroundPrimary').resizeWorld();\n      this._fakeMapExists = true;\n      this._fakeMap = map;\n\n      state.game.camera.unfollow();\n      let centerX = state.game.world.centerX;\n      let centerY = state.game.world.centerY;\n      let loc = [new Vector(centerX, centerY)];\n\n      this.drawBoxes(1, loc, state, ['Main Menu']).forEach((value: Phaser.Sprite, index) => {\n        state.game.add.tween(value.scale).to({x: 1.0, y: 1.0}, this._animationTime, Phaser.Easing.Bounce.Out, true);\n        state.game.camera.focusOn(value);\n        value.events.onInputDown.add(() => {\n          this.drawMainMenu(state);\n        });\n      });\n      let gameOver = state.game.add.text(centerX - 145, centerY + 110, `You lost :( your score was ${score}!`, {\n        font: '22px Arial',\n        fill: '#ff0044'\n      });\n      gameOver.scale.setTo(0.0, 0.0);\n      state.game.add.tween(gameOver.scale).to({x: 1.0, y: 1.0}, this._animationTime, Phaser.Easing.Bounce.Out, true);\n    }\n\n    public static drawPauseMenu(state: Phaser.State): void {\n      const buttonWidth = 130;\n\n      let pauseMenu = state.add.sprite(state.game.world.right - buttonWidth, state.game.world.top, UIComponents.UI_SPRITESHEET, UIComponents.FULL_BUTTON);\n      let toAttach = state.game.add.text(0, 0, 'Pause', {font: '22px Arial', fill: '#ff0044', wordWrap: true, wordWrapWidth: pauseMenu.width, align: 'center'});\n\n      toAttach.anchor.setTo(-1, -0.35);\n      pauseMenu.addChild(toAttach);\n      pauseMenu.scale = new Phaser.Point(0.7, 0.7);\n      pauseMenu.inputEnabled = true;\n      pauseMenu.fixedToCamera = true;\n\n      pauseMenu.events.onInputDown.add( () => {\n\n        if (state.game.paused === true) { // if game is already pause do not recreate pause menu\n          return;\n        }\n\n        state.game.paused = true;\n\n        let mainMenuBtn = state.add.sprite(state.game.camera.x + (state.game.width / 2) , state.game.camera.y + (state.game.height / 2), UIComponents.UI_SPRITESHEET, UIComponents.FULL_BUTTON);\n        let backBtn = state.add.sprite(state.game.camera.x + (state.game.width / 2) , state.game.camera.y - (buttonWidth / 2) + (state.game.height / 2), UIComponents.UI_SPRITESHEET, UIComponents.FULL_BUTTON);\n\n        let mainMenuTxt = state.add.text(0, 0, 'Main Menu', {font: '22px Arial', fill: '#ff0044', wordWrap: true, wordWrapWidth: mainMenuBtn.width, align: 'center'});\n        let resumeTxt = state.add.text(0, 0, 'Resume', {font: '22px Arial', fill: '#ff0044', wordWrap: true, wordWrapWidth: backBtn.width, align: 'center'});\n\n        mainMenuTxt.anchor.setTo(-0.4, -0.35);\n        resumeTxt.anchor.setTo(-0.65, -0.35);\n\n        mainMenuBtn.addChild(mainMenuTxt);\n        backBtn.addChild(resumeTxt);\n\n        mainMenuBtn.inputEnabled = true;\n        backBtn.inputEnabled = true;\n\n        mainMenuBtn.events.onInputDown.add( () => {\n          state.game.paused = false;\n          this.drawMainMenu(state, true);\n        });\n\n        backBtn.events.onInputDown.add( () => {\n          state.game.paused = false;\n          mainMenuBtn.destroy();\n          backBtn.destroy();\n        });\n      });\n    }\n\n    public static drawYouWonMenu() {\n\n    }\n  }\n\n  export class PlayerVisualsManager {\n\n    private _state: Phaser.State;\n    private static _heartList: Array<Phaser.Sprite> = [];\n\n    constructor(state?: Phaser.State) {\n      this._state = state;\n    }\n\n    public displayPlayerMaxHealth() {\n      this.drawHearts(DataConfig.playerMaxHealth / 2, this._state.game.world.left + 50, this._state.game.world.top + 20, UIComponents.FULL_HEART);\n    }\n\n    public removeHeartByDamage(damage: number) {\n      for (let i = damage; i > 0; i--) {\n        let heart = PlayerVisualsManager._heartList.reverse().find((heartSprite: Phaser.Sprite) => { // we reverse the array to get the last heart\n          return heartSprite.frameName === UIComponents.FULL_HEART || heartSprite.frameName === UIComponents.HALF_HEART;\n        });\n        if (heart) { // if two consecutive bullets hit the player on the same frame, the game doesnt have a chance to call game over and hearts are undefined\n          if (heart.frameName === UIComponents.HALF_HEART) {\n            heart.frameName = UIComponents.EMPTY_HEART;\n          } else {\n          heart.frameName = UIComponents.HALF_HEART;\n          }\n          PlayerVisualsManager._heartList.reverse(); // ensure array returns to its original form\n        }\n      }\n    }\n\n    public addHeartByHealingReceived(healing: number) {\n      for (let i = healing; i >= 0; i--) {\n        let heart = PlayerVisualsManager._heartList.find((heart: Phaser.Sprite) => {\n          return heart.frame === UIComponents.EMPTY_HEART || heart.frame === UIComponents.HALF_HEART;\n        });\n        if (heart.frame === UIComponents.HALF_HEART) {\n          heart.frame = UIComponents.FULL_HEART;\n        } else {\n          heart.frame = UIComponents.FULL_HEART;\n        }\n      }\n    }\n\n    private drawHearts(no: number, x: number, y: number, kindOfHeart: UIComponents.HALF_HEART | UIComponents.FULL_HEART | UIComponents.EMPTY_HEART) {\n      const heartWidth = 128;\n      for (let i = 0; i < no; i++) {\n        let heart = this._state.add.sprite(x + (heartWidth / 2) * i, y, UIComponents.PLAYER_VISUALS_SPRITESHEET, kindOfHeart);\n        heart.fixedToCamera = true;\n        heart.scale = new Phaser.Point(0.5, 0.5);\n        PlayerVisualsManager._heartList.push(heart);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/UI/uimanagers.ts","export default class Vector {\n\n  private _x: number;\n  private _y: number;\n\n  constructor(x?: number, y?: number){\n    this._x = x;\n    this._y = y;\n  }\n\n  get x(): number {\n    return this._x;\n  }\n\n  set x(value: number) {\n    this._x = value;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n\n  set y(value: number) {\n    this._y = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/vector.ts","'use strict';\n\n\n/** Imports */\nrequire('pixi');\nrequire('p2');\nrequire('phaser');\n\nimport 'styles/style.styl';\nimport { States } from './constants/GameConstants';\n\nimport { DEFAULT_GAME_HEIGHT, DEFAULT_GAME_WIDTH, SCALE_MODE, ScreenMetrics, ScreenUtils } from './util/ScreenMetrics';\nimport { GameStates } from './states/gameStates';\n\nimport BootState = GameStates.BootState;\nimport PreloadState = GameStates.PreloadState;\nimport GameState = GameStates.MainGameState;\nimport MainMenuState = GameStates.MainMenuState;\nimport GameoverState = GameStates.GameoverState;\n\n// The main class of our application\nexport class App extends Phaser.Game {\n  constructor(config: Phaser.IGameConfig) {\n    super(config);\n    this.state.add(States.BOOT_STATE, BootState);\n    this.state.add(States.PRELOAD_STATE, PreloadState);\n    this.state.add(States.GAME_STATE, GameState);\n    this.state.add(States.MAIN_MENU_STATE, MainMenuState);\n    this.state.add(States.GAMEOVER_SATE, GameoverState);\n    this.state.start(States.BOOT_STATE);\n  }\n}\n\n\n// Like python's `__name__ == \"__main__\"` checks whether the module is part\n// of another program or it is executable.\nif (!module.parent) {\n  window.onload = () => {\n    let gameWidth: number = DEFAULT_GAME_WIDTH;\n    let gameHeight: number = DEFAULT_GAME_HEIGHT;\n\n    if (SCALE_MODE === 'USER_SCALE') {\n      let screenMetrics: ScreenMetrics = ScreenUtils.calculateScreenMetrics(gameWidth, gameHeight);\n\n      gameWidth = screenMetrics.gameWidth;\n      gameHeight = screenMetrics.gameHeight;\n    }\n\n    const config: Phaser.IGameConfig = {\n      width: gameWidth, // width of canvas\n      height: gameHeight, // height of canvas\n      renderer: Phaser.AUTO, // rendering context. The recommended parameter is Phaser.AUTO\n      parent: '',\n      resolution: 1,\n      forceSetTimeOut: false // tell Phaser to use `setTimeOut` even if `requestAnimationFrame` is available.\n    };\n\n   new App(config); // Initialize the application. It will automatically inject <canvas /> into <body />\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./styles/style.styl\n// module id = 24\n// module chunks = 0","export declare let DEBUG: boolean;\r\nexport declare let DEFAULT_GAME_WIDTH: number;\r\nexport declare let DEFAULT_GAME_HEIGHT: number;\r\nexport declare let MAX_GAME_WIDTH: number;\r\nexport declare let MAX_GAME_HEIGHT: number;\r\nexport declare let SCALE_MODE: string;\r\n\r\n/*\r\n    All credits for this class belong to http://sbcgamesdev.blogspot.co.uk/2015/04/phaser-tutorial-manage-different-screen.html\r\n    The Screen[...] classes are modified versions of the classes in an article I found.\r\n    Author: Tomáš Rychnovský\r\n    Article: http://sbcgamesdev.blogspot.ca/2015/04/phaser-tutorial-manage-different-screen.html\r\n    Date: Thursday, April 9, 2015\r\n    Big thanks to Tomáš!\r\n\r\n */\r\n\r\nexport enum ScreenOrientation {\r\n  PORTRAIT,\r\n  LANDSCAPE\r\n}\r\n\r\nexport class ScreenMetrics {\r\n  windowWidth: number;\r\n  windowHeight: number;\r\n\r\n  defaultGameWidth: number;\r\n  defaultGameHeight: number;\r\n\r\n  maxGameWidth: number;\r\n  maxGameHeight: number;\r\n\r\n  gameWidth: number;\r\n  gameHeight: number;\r\n\r\n  scaleX: number;\r\n  scaleY: number;\r\n\r\n  offsetX: number;\r\n  offsetY: number;\r\n}\r\n\r\nexport class ScreenUtils {\r\n  public static screenMetrics: ScreenMetrics;\r\n\r\n  public static calculateScreenMetrics(defaultWidth: number, defaultHeight: number, orientation: ScreenOrientation = ScreenOrientation.LANDSCAPE, maxGameWidth?: number, maxGameHeight?: number): ScreenMetrics {\r\n    // Just to give some explanation as to the numbers and colors in the included background;\r\n    // The GREEN is the safe area and will be displayed fully on any device and is based on 16:10 aspect ratio, build your actual gameplay here\r\n    // The YELLOW is the extra area that will be visible on devices with a 3:2 aspect ratio (iPhone 4S and below)\r\n    // The BLUE is the extra area that will be visible on devices with a 4:3 aspect ratio (iPads)\r\n    // The RED is the extra area that will be visible on devices with a 16:9 aspect ratio (iPhone 5 and above) (this is probably the most common ratio overall...)\r\n    // The GREY area will most likely never be seen, unless some device has a really odd aspect ratio (and with Android, I wouldn't be surprised if there is a few out there)\r\n    this.screenMetrics = new ScreenMetrics();\r\n\r\n    this.screenMetrics.windowWidth = window.innerWidth;\r\n    this.screenMetrics.windowHeight = window.innerHeight;\r\n\r\n    this.screenMetrics.defaultGameWidth = defaultWidth;\r\n    this.screenMetrics.defaultGameHeight = defaultHeight;\r\n\r\n    // Swap width and height if necessary to match the specified orientation\r\n    let dimensionsOppositeForLandscape: boolean = ((this.screenMetrics.windowWidth < this.screenMetrics.windowHeight) && orientation === ScreenOrientation.LANDSCAPE);\r\n    let dimensionsOppositeForPortrait: boolean = ((this.screenMetrics.windowHeight < this.screenMetrics.windowWidth) && orientation === ScreenOrientation.PORTRAIT);\r\n\r\n    if (dimensionsOppositeForLandscape || dimensionsOppositeForPortrait) {\r\n      [this.screenMetrics.windowWidth, this.screenMetrics.windowHeight] = [this.screenMetrics.windowHeight, this.screenMetrics.windowWidth];\r\n    }\r\n\r\n    // Calculate the max width and max height if not provided; ratios are based off iPad (4:3) and iPhone 5+ (16:9) as the extremes in both width and height\r\n    if (!maxGameWidth || !maxGameHeight) {\r\n      if (orientation === ScreenOrientation.LANDSCAPE) {\r\n        this.screenMetrics.maxGameWidth = Math.round(this.screenMetrics.defaultGameWidth * (MAX_GAME_WIDTH / DEFAULT_GAME_WIDTH));\r\n        this.screenMetrics.maxGameHeight = Math.round(this.screenMetrics.defaultGameHeight * (MAX_GAME_HEIGHT / DEFAULT_GAME_HEIGHT));\r\n      } else {\r\n        this.screenMetrics.maxGameWidth = Math.round(this.screenMetrics.defaultGameWidth * (MAX_GAME_HEIGHT / DEFAULT_GAME_HEIGHT));\r\n        this.screenMetrics.maxGameHeight = Math.round(this.screenMetrics.defaultGameHeight * (MAX_GAME_WIDTH / DEFAULT_GAME_WIDTH));\r\n      }\r\n    } else {\r\n      this.screenMetrics.maxGameWidth = maxGameWidth;\r\n      this.screenMetrics.maxGameHeight = maxGameHeight;\r\n    }\r\n\r\n    let defaultAspectRatio: number = ((orientation === ScreenOrientation.LANDSCAPE) ? (DEFAULT_GAME_WIDTH / DEFAULT_GAME_HEIGHT) : (DEFAULT_GAME_HEIGHT / DEFAULT_GAME_WIDTH));\r\n    let windowAspectRatio: number = (this.screenMetrics.windowWidth / this.screenMetrics.windowHeight);\r\n\r\n    if (windowAspectRatio > defaultAspectRatio) {\r\n      this.screenMetrics.gameHeight = this.screenMetrics.defaultGameHeight;\r\n      this.screenMetrics.gameWidth = (Math.ceil((this.screenMetrics.gameHeight * windowAspectRatio) * 0.5) * 2);\r\n      this.screenMetrics.gameWidth = Math.min(this.screenMetrics.gameWidth, this.screenMetrics.maxGameWidth);\r\n\r\n      this.screenMetrics.offsetX = ((this.screenMetrics.gameWidth - this.screenMetrics.defaultGameWidth) * 0.5);\r\n      this.screenMetrics.offsetY = 0;\r\n    } else {\r\n      this.screenMetrics.gameWidth = this.screenMetrics.defaultGameWidth;\r\n      this.screenMetrics.gameHeight = (Math.ceil((this.screenMetrics.gameWidth / windowAspectRatio) * 0.5) * 2);\r\n      this.screenMetrics.gameHeight = Math.min(this.screenMetrics.gameHeight, this.screenMetrics.maxGameHeight);\r\n\r\n      this.screenMetrics.offsetX = 0;\r\n      this.screenMetrics.offsetY = ((this.screenMetrics.gameHeight - this.screenMetrics.defaultGameHeight) * 0.5);\r\n    }\r\n\r\n    // Calculate scaling\r\n    this.screenMetrics.scaleX = (this.screenMetrics.windowWidth / this.screenMetrics.gameWidth);\r\n    this.screenMetrics.scaleY = (this.screenMetrics.windowHeight / this.screenMetrics.gameHeight);\r\n\r\n    return this.screenMetrics;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/ScreenMetrics.ts","/** Imports */\nimport { ActionComponents } from '../component/action.components';\nimport AssetsUtils from '../UI/Assets';\nimport { ComponentType, InputType, Levels, States } from '../constants/GameConstants';\nimport TankWorldFactory from '../TankWorldFactory';\nimport Input from '../util/input';\nimport { DataConfig } from '../config/data.config';\nimport { Entity } from '../entities/entity';\nimport { MenuConfig } from '../config/menu.config';\nimport { TankGameLevels } from '../config/levels/levels.tankLevels';\nimport { CollisionComponents } from '../component/collision.components';\nimport { MathUtil } from '../util/math.util';\nimport { UiManagers } from '../UI/uimanagers';\n\nimport ShootComponent = ActionComponents.ShootComponent;\nimport MovableComponent = ActionComponents.MovableComponent;\nimport TankLevel = TankGameLevels.TankLevel;\nimport LevelOne = TankGameLevels.LevelOne;\nimport LevelTwo = TankGameLevels.LevelTwo;\nimport Vector from '../util/vector';\n\n\nexport namespace GameStates {\n\n  import PhysicsComponent = CollisionComponents.PhysicsComponent;\n  import MenuManager = UiManagers.MenuManager;\n  import PlayerVisualsManager = UiManagers.PlayerVisualsManager;\n\n  export abstract class GameState extends Phaser.State {\n    game: Phaser.Game; // Necessary if we add property to `App` class\n  }\n\n  export class BootState extends GameState {\n    private _args;\n\n    constructor() {\n      super();\n    }\n\n    init(args) {\n      this._args = args;\n    }\n\n    preload(): void {\n      AssetsUtils.init(this.load);\n      AssetsUtils.loadBoot();\n      this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n      this.scale.pageAlignVertically = true;\n      this.scale.pageAlignHorizontally = true;\n      this.scale.setGameSize(window.innerWidth, window.innerHeight);\n    }\n\n    create(): void {\n      this.game.stage.backgroundColor = '#FFF';\n      this.game.state.start(States.PRELOAD_STATE, true, false, this._args);\n    }\n  }\n\n  export class GameoverState extends GameState {\n    private _args;\n\n    init(args) {\n      this._args = args;\n    }\n\n    preload() {\n\n    }\n\n    create() {\n      MenuManager.drawGameOver(this, this._args.score);\n    }\n\n    update() {\n\n    }\n  }\n\n  export class MainGameState extends GameState {\n    private _input: Input;\n    private _inputSubscription;\n    private _factory: TankWorldFactory;\n    private _levels: Map<Levels, TankLevel>;\n    private _score: number = 0;\n    // keep record of spawn time in miliseconds\n    private _timer: number = 0;\n    private _scoreText: Phaser.Text;\n    private _player: Entity;\n    private _disasterTimer: number = 0;\n    private _activeDisasters: number = 0;\n    private _activeLevel: Levels;\n\n    constructor() {\n      super();\n      this._input = new Input();\n      this._levels = new Map();\n    }\n\n    preload() {\n      // As we have generated our own world bounds we need to reset them and tell phaser we have them in a group, which rests in factort\n      this._levels.set(Levels.LEVEL_ONE, new LevelOne(this.game));\n      this._levels.set(Levels.LEVEL_TWO, new LevelTwo(this.game));\n      this._activeLevel = DataConfig.level;\n      this._levels.get(this._activeLevel).init();\n      this._factory = new TankWorldFactory(this.game, this);\n      this._factory.init(this._levels.get(this._activeLevel).collisionLayer); // Initialise collision groups\n    }\n\n    create() {\n      const playerUIBuilder = new PlayerVisualsManager(this);\n      const activeLevel = this._levels.get(this._activeLevel);\n\n      // Subscribe to game winning condition\n      // Input\n      this._player = this._factory.newPlayer(activeLevel.playerStartPos.x, activeLevel.playerStartPos.y);\n      let sub = this._player.whenDestroyed.subscribe(() => {\n        this.game.state.start(States.GAMEOVER_SATE, true, false, {score: this._score});\n        sub.unsubscribe();\n      });\n\n      playerUIBuilder.displayPlayerMaxHealth();\n      MenuManager.drawPauseMenu(this);\n\n      let gamewon = activeLevel.whenStageCleared.subscribe(() => {\n        MenuManager.drawYouWonMenu();\n      });\n\n\n      const physicsComponent = this._player.getComponent<PhysicsComponent>(ComponentType.PHYSICS);\n      this._input.add(this.game.input.keyboard.addKey(Phaser.Keyboard.RIGHT), InputType.RIGHT_INPUT);\n      this._input.add(this.game.input.keyboard.addKey(Phaser.Keyboard.LEFT), InputType.LEFT_INPUT);\n      this._input.add(this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR), InputType.SHOOT);\n\n      // Subscribe to inputs\n      this._inputSubscription = this._input.emitter.subscribe((input: InputType) => {\n        if (input !== InputType.SHOOT.toString()) {\n          this._player.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = input;\n          if (input === InputType.RIGHT_INPUT) {\n            physicsComponent.scaleSprite(1);\n          } else {\n            physicsComponent.scaleSprite(-1);\n          }\n        } else {\n          this._player.getComponent<ShootComponent>(ComponentType.SHOOT).canShoot = true;\n        }\n      });\n\n      this._scoreText = this.game.add.text(this.game.world.left + 50, this.game.world.top, `Score: ${this._score}`, {\n        font: '22px Arial',\n        fill: '#ff0044'\n      });\n      this._scoreText.fixedToCamera = true;\n    }\n\n    update() {\n      if (this.canSpawnDisaster()) {\n        this.spawnDisaster();\n      }\n      if (this.canSpawnEnemy()) {\n        this.spawnEnemies();\n      }\n      this._input.run();\n      this._factory.entities.forEach((e) => {\n        e.update();\n      });\n    }\n\n    shutdown() {\n      // Ensure no memory leaks\n      this._inputSubscription.unsubscribe();\n      this._factory.cleanUp();\n\n\n    }\n    private spawnDisaster() {\n      this._factory.newDisaster(this._player.sprite.x  + 100 * MathUtil.randomIntFromInterval(-10, 10), this.game.world.top);\n      this._activeDisasters++;\n      if (this._activeDisasters >= 7) {\n        this._disasterTimer = Date.now();\n        this._activeDisasters = 0;\n      }\n\n    }\n    private canSpawnEnemy(): boolean {\n      let activeLevel: TankLevel = this._levels.get(this._activeLevel);\n      if (activeLevel.enemiesCount < activeLevel.capEnemies && activeLevel.totalEnemies !== 0) {\n        if (Date.now() - this._timer > activeLevel.enemiesSpawnTime * 1000) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    private spawnEnemies() {\n      const activeLevel = this._levels.get(this._activeLevel);\n      const enemyKind = activeLevel.getRandomEnemy();\n      let random = MathUtil.randomIntFromInterval(0, 1);\n      const spawningPoint = new Phaser.Point(getSpawningPointX(), getSpawningPointY());\n\n      this._factory.newEnemy(enemyKind, spawningPoint.x, spawningPoint.y, () => {\n        activeLevel.enemiesCount--;\n        this._score += 100;\n        this._scoreText.setText(`Score: ${this._score}`);\n      });\n      this._timer = Date.now();\n\n      function getSpawningPointX(): number {\n        return random === 0 ? activeLevel.playerStartPos.x : activeLevel.enemyStartPos.x;\n      }\n      function getSpawningPointY(): number {\n        return random === 0 ? activeLevel.playerStartPos.y : activeLevel.enemyStartPos.y;\n      }\n    }\n\n    private canSpawnDisaster() {\n      const activeLevel = this._levels.get(this._activeLevel);\n      if (Date.now() - this._disasterTimer >  activeLevel.randomDisasterSpawnTime) {\n        return true;\n      }\n    }\n  }\n\n  export class MainMenuState extends GameState {\n    private _args;\n\n    init(args) {\n      this._args = args;\n    }\n\n    preload() {\n\n    }\n\n    create() {\n      let config: MenuConfig = MenuManager.drawMainMenu(this);\n      this.game.camera.unfollow(); // stop following the main menu\n      config.allSprites.forEach((sprite: Phaser.Sprite) => {\n        // This is when the game restart\n        // The sprites must be set to top and visible otherwise will be hidden\n        sprite.bringToTop();\n        sprite.visible = true;\n      });\n\n    }\n\n    update() {\n\n    }\n  }\n\n  export class PreloadState extends GameState {\n    private _args = {};\n\n    constructor() {\n      super();\n    }\n\n    init(args) {\n      this._args = args;\n    }\n\n    preload() {\n\n      MenuManager.setLoadingScreen(this);\n      // Reminder to me: When loading phaser assets, it must be done on a state prior to the state of usage!\n      AssetsUtils.loadAll();\n      // Set World variables\n      this.game.physics.startSystem(Phaser.Physics.P2JS);\n      this.game.physics.p2.gravity.y = 1400;\n      this.game.physics.p2.setImpactEvents(true);\n      this.game.physics.p2.setBoundsToWorld(true, true, false, true);\n\n    }\n\n    create() {\n      this.game.state.start(States.MAIN_MENU_STATE, true, false, this._args);\n    }\n\n    update() {\n\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/gameStates.ts","import {\n  Levels, TankLayout, TileLayers,\n  UIComponents\n} from '../constants/GameConstants';\n/**\n * @class\n * Class to load assets into the cached memory\n * */\nclass AssetLoader {\n\n  // Asset URL;\n  // levels\n  private _levelOneUrl: string;\n  private _levelTwoUrl: string;\n\n  // Spritesheet\n  private _tankSpritesheetUrl: string;\n  private _tankSpritesheetUrlXLM: string;\n  private _playerVisualsSpritesheetUrl: string;\n  private _playerVisualsSpritesheetUrlXML: string;\n\n  // loading screen\n  private _progressBarUrl: string;\n  private _logoUrl: string;\n\n  // Layers\n  private _grassLayerUrl: string;\n  private _backgroundUrl: string;\n  private _candyLayerUrl: string;\n  private _uiBackgroundUrl: string;\n  private uiBackgroundUrlXML: string;\n\n  // Images\n  private _levelOneImgUrl: string;\n  private _levelTwoImgUrl: string;\n  private _tank1Url: string;\n  private _tank2Url: string;\n  private _tank3Url: string;\n  private _tank4Url: string;\n  private _tank5Url: string;\n\n  // loader\n  private _loader: Phaser.Loader;\n\n\n  /**\n   * @constructor\n   * Will generate all required paths for the assets\n   * */\n  constructor() {\n    // Since Webpack is running in build-time, it can't figure out which modules to bundle when the name is a dynamic variable.\n    // Therefor all required targets must be hardcoded\n\n    // Images\n    this._progressBarUrl = require('assets/images/progressBar.png');\n    this._logoUrl = require('assets/images/logo.png');\n    this._levelOneImgUrl = require('assets/images/levelOneImage.png');\n    this._levelTwoImgUrl = require('assets/images/levelTwoImage.png');\n\n    this._tank1Url = require('assets/images/tanks_tankDesert1.png');\n    this._tank2Url = require('assets/images/tanks_tankDesert2.png');\n    this._tank3Url = require('assets/images/tanks_tankDesert3.png');\n    this._tank4Url = require('assets/images/tanks_tankDesert4.png');\n    this._tank5Url = require('assets/images/tanks_tankDesert5.png');\n\n    // Levels\n    this._levelOneUrl = require('assets/levels/level1.json');\n    this._levelTwoUrl = require('assets/levels/level2.json');\n\n    // Atlas\n    this._tankSpritesheetUrlXLM = require('assets/spritesheet/tanks_xml.xml');\n    this._tankSpritesheetUrl = require('assets/spritesheet/tanks.png');\n\n    // Spritesheet\n    this._grassLayerUrl = require('assets/spritesheet/grassLayer.png');\n    this._candyLayerUrl = require('assets/spritesheet/candyLayer.png');\n    this._backgroundUrl = require('assets/spritesheet/backgroundElements.png');\n    this._uiBackgroundUrl = require('assets/spritesheet/UISpritesheet.png');\n    this.uiBackgroundUrlXML = require('assets/spritesheet/UISpritesheet_xml.xml');\n    this._playerVisualsSpritesheetUrl = require('assets/spritesheet/playerVisuals.png');\n    this._playerVisualsSpritesheetUrlXML = require('assets/spritesheet/playerVisuals.xml');\n  }\n\n  /**\n   * Run once during Boot state to pass reference to loader.\n   * @param {Phaser.Loader} loader   The phaser loader\n   * @return {void}\n   **/\n  init(loader: Phaser.Loader): void {\n    this.loader = loader;\n  }\n\n  /**\n   * @description\n   * Loads the pre-requisites for the loading screen\n   */\n  loadBoot(): void {\n    try {\n      this.loader.image(UIComponents.PROGRESS_BAR, this._progressBarUrl);\n      this.loader.image(UIComponents.LOGO, this._logoUrl);\n    } catch (e) {\n      // todo: Exception handling class\n    }\n  }\n\n\n  /**\n   * @description\n   * Loads all assets into the cached memory **Note this doesnt include loading screen assets see {@link AssetLoader#loadBoot}\n   */\n  loadAll(): void {\n    this.loader.tilemap(Levels.LEVEL_ONE, this._levelOneUrl, null, Phaser.Tilemap.TILED_JSON);\n    this.loader.tilemap(Levels.LEVEL_TWO, this._levelTwoUrl, null, Phaser.Tilemap.TILED_JSON);\n\n    this.loader.atlasXML(TankLayout.TANK_SPRITESHEET, this._tankSpritesheetUrl, this._tankSpritesheetUrlXLM);\n    this.loader.atlasXML(UIComponents.UI_SPRITESHEET, this._uiBackgroundUrl, this.uiBackgroundUrlXML);\n    this.loader.atlasXML(UIComponents.PLAYER_VISUALS_SPRITESHEET, this._playerVisualsSpritesheetUrl, this._playerVisualsSpritesheetUrlXML);\n\n    this.loader.image(TileLayers.GRASS_LAYER, this._grassLayerUrl);\n    this.loader.image(TileLayers.BACKGROUND, this._backgroundUrl);\n    this.loader.image(UIComponents.LEVEL_ONE_IMAGE, this._levelOneImgUrl);\n    this.loader.image(UIComponents.LEVEL_TWO_IMAGE, this._levelTwoImgUrl);\n    this.loader.image(TileLayers.CANDY_LAYER, this._candyLayerUrl);\n\n    this.loader.image(UIComponents.CANDY_ARTILLERY_IMG, this._tank1Url);\n    this.loader.image(UIComponents.CANDY_HUNTER_IMG, this._tank2Url);\n    this.loader.image(UIComponents.CANDY_LIGHT_IMG, this._tank5Url);\n    this.loader.image(UIComponents.CANDY_FORTRESS_IMG, this._tank3Url);\n    this.loader.image(UIComponents.CANDY_RECON_IMG, this._tank4Url);\n  }\n\n\n  /**\n   * @description\n   * Returns the cached memory object see {@link Phaser.Loader}\n   * @return {Phaser.Loader} AssetLoader._loader\n   * */\n  get loader(): Phaser.Loader {\n    if (this._loader === null) {\n      throw new Error('Loader cannot be empty, ensure AssetsUtils.init() has run before');\n    }\n    return this._loader;\n  }\n\n  /**\n   * @description\n   * Sets current loader\n   * @param {Phaser.Loader} value\n   * */\n  set loader(value: Phaser.Loader) {\n    this._loader = value;\n  }\n}\n\n// Imitate all methods as static as this class needs to be initiated\n// noinspection TsLint\nconst AssetsUtils = new AssetLoader();\nexport default AssetsUtils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/UI/Assets.ts","module.exports = __webpack_public_path__ + \"assets/images/progressBar.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/progressBar.png\n// module id = 33\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/logo.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/logo.png\n// module id = 34\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/levelOneImage.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/levelOneImage.png\n// module id = 35\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/levelTwoImage.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/levelTwoImage.png\n// module id = 36\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/tanks_tankDesert1.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/tanks_tankDesert1.png\n// module id = 37\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/tanks_tankDesert2.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/tanks_tankDesert2.png\n// module id = 38\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/tanks_tankDesert3.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/tanks_tankDesert3.png\n// module id = 39\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/tanks_tankDesert4.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/tanks_tankDesert4.png\n// module id = 40\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/tanks_tankDesert5.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/tanks_tankDesert5.png\n// module id = 41\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/levels/level1.json\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/levels/level1.json\n// module id = 42\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/levels/level2.json\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/levels/level2.json\n// module id = 43\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/tanks_xml.xml\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/tanks_xml.xml\n// module id = 44\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/tanks.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/tanks.png\n// module id = 45\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/grassLayer.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/grassLayer.png\n// module id = 46\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/candyLayer.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/candyLayer.png\n// module id = 47\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/backgroundElements.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/backgroundElements.png\n// module id = 48\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/UISpritesheet.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/UISpritesheet.png\n// module id = 49\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/UISpritesheet_xml.xml\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/UISpritesheet_xml.xml\n// module id = 50\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/playerVisuals.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/playerVisuals.png\n// module id = 51\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/spritesheet/playerVisuals.xml\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/spritesheet/playerVisuals.xml\n// module id = 52\n// module chunks = 0","import { Entity } from './entities/entity';\nimport CollisionGroup = Phaser.Physics.P2.CollisionGroup;\nimport { Guid } from './util/guid';\nimport { DataConfig } from './config/data.config';\nimport { Action, ComponentType, FsmStateName, States, TankLayout } from './constants/GameConstants';\nimport { FsmStates } from './AI/fsm/fsm.states';\nimport { CollisionComponents } from './component/collision.components';\nimport { ControlComponents } from './component/control.components';\nimport { DataComponents } from './component/data.components';\nimport { ActionComponents } from './component/action.components';\nimport { TankGameLevels } from './config/levels/levels.tankLevels';\n\nimport IdleState = FsmStates.IdleState;\nimport PursuingState = FsmStates.PursuingState;\nimport FleeState = FsmStates.FleeState;\nimport SeekState = FsmStates.SeekState;\nimport PhysicsComponent = CollisionComponents.PhysicsComponent;\nimport CollisionsComponent = CollisionComponents.CollisionsComponent;\nimport CameraComponent = ControlComponents.CameraComponent;\nimport AiComponent = ControlComponents.AiComponent;\nimport BulletComponent = ControlComponents.BulletComponent;\nimport LayerComponent = DataComponents.LayerComponent;\nimport HealthComponent = DataComponents.HealthComponent;\nimport TankComponent = DataComponents.TankComponent;\nimport OwnerComponent = DataComponents.OwnerComponent;\nimport MovableComponent = ActionComponents.MovableComponent;\nimport ShootComponent = ActionComponents.ShootComponent;\nimport TankLevel = TankGameLevels.TankLevel;\nimport SuicideState = FsmStates.SuicideState;\nimport { MathUtil } from './util/math.util';\nimport EvadeState = FsmStates.EvadeState;\nimport { StateComponent } from './component/state.component';\nimport DisasterComponent = ControlComponents.DisasterComponent;\n\n/**\n * @class TankWorldFactory\n * @description\n * This is the game factory and exposes functions to\n * create a new player {@link TankWorldFactory#newPlayer}\n * create a new bullet {@link TankWorldFactory#newBullet}\n * create a new enemy {@link TankWorldFactory#newEnemy}\n * start spawning enemies {@Link TankWorldFactory#spawnEnemies}\n * All of the above are dependant on the information passed to the factory by what {@link TankLevel} is loaded\n */\nexport default class TankWorldFactory {\n\n  private _game: Phaser.Game;\n  private _player: Entity;\n  private _entitiesSubscriptions = []; // Keep a record of the subscriptions to remove later\n  private _currentState: Phaser.State;\n\n  // Arrays\n  private _entities: Array<Entity> = [];\n\n  // Collision Groups\n  private _tankCollisionGroup: CollisionGroup;\n  private _enemyTankCollisionGroup: CollisionGroup;\n  private _playerBulletCollisionGroup: CollisionGroup;\n  private _enemyBulletsCollisionGroup: CollisionGroup;\n  private _groundCollisionGroup: CollisionGroup;\n\n  /**\n   * @constructor\n   * @param {Phaser.Game} game\n   * @param state - Current conditions\n   */\n  constructor(game: Phaser.Game, state: Phaser.State) {\n    this._game = game;\n    this._currentState = state;\n  }\n\n  /**\n   * Initializes the factory\n   * @param {Array<Phaser.Physics.P2.Body>} levelCollisionLayer - The current level collision layer so that tank factory objects can collide with it\n   */\n  public init(levelCollisionLayer: Array<Phaser.Physics.P2.Body>): void {\n    // init collision groups\n    this._tankCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    this._playerBulletCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    this._groundCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    this._enemyTankCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    this._enemyBulletsCollisionGroup = this._game.physics.p2.createCollisionGroup();\n    // Have to do this here as we cannot enforce layer to be Entity to attach component\n    levelCollisionLayer.forEach((layer) => {\n      layer.setCollisionGroup(this._groundCollisionGroup);\n      layer.collides([\n        this._tankCollisionGroup,\n        this._playerBulletCollisionGroup,\n        this._enemyBulletsCollisionGroup,\n        this._enemyTankCollisionGroup\n      ]);\n    });\n\n    // Force all groups to collide with world bounds\n    this._game.physics.p2.updateBoundsCollisionGroup();\n  }\n\n  /**\n   * @description\n   * Creates a new player based on the loaded level {@link TankLevel#playerStartPos}\n   */\n  public newPlayer(x: number, y: number): Entity {\n    let player = new Entity(this._game, x, y)\n      .withComponent(\n        [new MovableComponent(),\n          new CameraComponent(this._game),\n          new PhysicsComponent(this._game),\n          new ShootComponent(this._game, this),\n          new LayerComponent(),\n          new CollisionsComponent(),\n          new HealthComponent(),\n          new TankComponent(DataConfig.tank)]);\n\n    player.getComponent<LayerComponent>(ComponentType.LAYER).addAnimation(\n      Action.EXPLODE,\n      Phaser.Animation.generateFrameNames('tank_explosion', 1, 8, '.png'), 15, false);\n    player.getComponent<HealthComponent>(ComponentType.HEALTH).setHealth(DataConfig.playerMaxHealth);\n\n    player.getComponent<CameraComponent>(ComponentType.CAMERA).setFocus(player.sprite);\n    player.getComponent<PhysicsComponent>(ComponentType.PHYSICS)\n      .addPhysics();\n\n    player.getComponent<LayerComponent>(ComponentType.LAYER).addLayer(DataConfig.tank);\n\n    player.getComponent<CollisionsComponent>(ComponentType.COLLISION)\n      .setCollisionGroup(this._tankCollisionGroup)\n      .collidesWith(this._groundCollisionGroup, [Action.NOTHING])\n      .collidesWith(this._enemyBulletsCollisionGroup, [Action.DAMAGE]);\n\n    this._entities.push(player);\n    this._player = player;\n\n    this._player.sprite.data = {\n      tag: Guid.newGuid()\n    };\n    return player;\n  }\n\n  /**\n   * @description\n   * Creates a new enemy based on the loaded level {@link TankLevel#enemyStartPos}\n   */\n  public newEnemy(kindOfenemy: TankLayout, x: number, y: number, subFunction?: () => void) {\n    let kindOfTank: TankLayout = kindOfenemy; // As each level can have many random enemies\n    // Get one store it and use it where appropriate\n\n    let enemy = new Entity(this._game, x, y, null)\n      .withComponent(\n        [\n          new MovableComponent(),\n          new PhysicsComponent(this._game),\n          new ShootComponent(this._game, this),\n          new LayerComponent(),\n          new CollisionsComponent(),\n          new StateComponent(),\n          new AiComponent(this._player, this._entities.filter((entity: Entity) => {\n            return entity.hasComponent(ComponentType.AI);\n          })),\n          new HealthComponent(),\n          new TankComponent(kindOfTank)\n        ]);\n\n    enemy.getComponent<LayerComponent>(ComponentType.LAYER).addAnimation(\n      Action.EXPLODE,\n      Phaser.Animation.generateFrameNames('tank_explosion', 1, 8, '.png'), 15, false);\n\n    enemy.getComponent<HealthComponent>(ComponentType.HEALTH).setHealth(DataConfig.enemyHealth);\n\n    enemy.getComponent<StateComponent>(ComponentType.STATE)\n      .addState(FsmStateName.SEEK, new SeekState())\n      .addState(FsmStateName.IDLE, new IdleState())\n      .addState(FsmStateName.PURSUING, new PursuingState())\n      .addState(FsmStateName.FLEEING, new FleeState())\n      .addState(FsmStateName.SUICIDE, new SuicideState())\n      .addState(FsmStateName.EVADE, new EvadeState())\n      .setState(FsmStateName.IDLE);\n\n    enemy.getComponent<PhysicsComponent>(ComponentType.PHYSICS)\n      .addPhysics();\n    enemy.getComponent<LayerComponent>(ComponentType.LAYER).addLayer(kindOfTank);\n\n    enemy.getComponent<CollisionsComponent>(ComponentType.COLLISION)\n      .setCollisionGroup(this._enemyTankCollisionGroup)\n      .collidesWith(this._groundCollisionGroup, [Action.NOTHING])\n      .collidesWith(this._playerBulletCollisionGroup, [Action.DAMAGE]);\n\n    this._entities.push(enemy);\n    // NECESSARY FOR BULLET TO GET CORRECT GROUP\n    enemy.sprite.data = {\n      tag: Guid.newGuid()\n    };\n    let sub = enemy.whenDestroyed.subscribe(() => {\n\n      // this is to ensure when the entity is destroyed all memorie refs are released for garbage collection\n      subFunction();\n      const index = this._entities.indexOf(enemy);\n      this._entities.splice(index, 1);\n      sub.unsubscribe();\n    });\n    this._entitiesSubscriptions.push(sub); // In case player dies before all entites we still need to clean up the memory\n    return enemy;\n  }\n\n  public newBullet(x: number, y: number, owner: Entity): Entity {\n\n    let bullet = new Entity(this._game, x, y)\n      .withComponent([\n        new PhysicsComponent(this._game),\n        new LayerComponent(),\n        new BulletComponent(this._game),\n        new CollisionsComponent(),\n        new HealthComponent(),\n        new OwnerComponent()]);\n\n    bullet.getComponent<OwnerComponent>(ComponentType.OWNER).owner = owner;\n    bullet.getComponent<HealthComponent>(ComponentType.HEALTH).setHealth(1);\n    bullet.getComponent<PhysicsComponent>(ComponentType.PHYSICS)\n      .addPhysics(false)\n      .scaleSprite(owner.sprite.scale.x);\n\n    bullet.getComponent<LayerComponent>(ComponentType.LAYER).addLayer(owner.getComponent<TankComponent>(ComponentType.TANK).bulletKind);\n    bullet.getComponent<BulletComponent>(ComponentType.BULLET)\n      .bulletInit();\n\n    bullet.getComponent<CollisionsComponent>(ComponentType.COLLISION)\n      .setCollisionGroup(this.setBulletColisionGroup(owner))\n      .collidesWith(this._tankCollisionGroup, [Action.DAMAGE])\n      .collidesWith(this._enemyTankCollisionGroup, [Action.DAMAGE])\n      .collidesWith(this._groundCollisionGroup, [Action.DAMAGE]);\n\n    bullet.getComponent<LayerComponent>(ComponentType.LAYER).addAnimation(\n      Action.EXPLODE,\n      Phaser.Animation.generateFrameNames('tank_explosion', 1, 8, '.png'), 15, false);\n\n    this._entities.push(bullet);\n    let sub = bullet.whenDestroyed.subscribe(() => {\n      const index = this._entities.indexOf(bullet);\n      this._entities.splice(index, 1);\n      sub.unsubscribe();\n    });\n    this._entitiesSubscriptions.push(sub); // In case player dies before all entites we still need to clean up the memory\n    return bullet;\n\n  }\n\n  public newDisaster(x: number, y: number) {\n    let disaster = new Entity(this._game, x, y)\n      .withComponent([\n        new PhysicsComponent(this._game),\n        new LayerComponent(),\n        new CollisionsComponent(),\n        new DisasterComponent(),\n        new HealthComponent()\n      ]);\n\n    disaster.getComponent<PhysicsComponent>(ComponentType.PHYSICS)\n      .addPhysics(false);\n\n    disaster.getComponent<LayerComponent>(ComponentType.LAYER)\n      .addLayer(getRandomLayout())\n      .addAnimation(\n        Action.EXPLODE,\n        Phaser.Animation.generateFrameNames('tank_explosion', 1, 8, '.png'), 15, false);\n\n    disaster.getComponent<HealthComponent>(ComponentType.HEALTH).setHealth(1);\n\n    disaster.getComponent<CollisionsComponent>(ComponentType.COLLISION)\n      .setCollisionGroup(this._enemyBulletsCollisionGroup)\n      .collidesWith(this._tankCollisionGroup, [Action.DAMAGE])\n      .collidesWith(this._groundCollisionGroup, [Action.DAMAGE]);\n\n\n    this._entities.push(disaster);\n    let sub = disaster.whenDestroyed.subscribe(() => {\n      const index = this._entities.indexOf(disaster);\n      this._entities.splice(index, 1);\n      sub.unsubscribe();\n    });\n    this._entitiesSubscriptions.push(sub); // In case player dies before all entites we still need to clean up the memory\n    return disaster;\n\n    function getRandomLayout() {\n      let random = MathUtil.randomIntFromInterval(0, 5);\n      let tankLayout = () => {\n        switch (random) {\n          case 0:\n            return TankLayout.BULLET_ONE;\n          case 1:\n            return TankLayout.BULLET_TWO;\n          case 2:\n            return TankLayout.BULLET_THREE;\n          case 3:\n            return TankLayout.BULLET_FOUR;\n          case 4:\n            return TankLayout.BULLET_FIVE;\n          default:\n            break;\n        }\n      };\n      return tankLayout();\n    }\n  }\n\n  public cleanUp() {\n    this._entities = null;\n    this._entitiesSubscriptions.forEach((e) => {\n      e.unsubscribe();\n    });\n  }\n\n  get entities(): Array<Entity> {\n    return this._entities;\n\n  }\n\n  private setBulletColisionGroup(owner: Entity): CollisionGroup {\n    if (owner.sprite.data.tag === this._player.sprite.data.tag) {\n      return this._playerBulletCollisionGroup;\n    }\n    return this._enemyBulletsCollisionGroup;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/TankWorldFactory.ts","import { Component } from '../component/component';\r\nimport {ComponentType, TankLayout} from '../constants/GameConstants';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n/**\r\n * @class Entity\r\n * @description\r\n * Represents any object that can be added to the game world\r\n * Exposes functions to load components in order to modify the actions and the abilities of the entity see {@link Entity#addComponent}\r\n * Exposes a function to retrieve any component that is loaded to an entity see {@link  Entity#getComponent}\r\n * */\r\nexport class Entity {\r\n  private _components: Map<string, Component> = new Map();\r\n  private _sprite: Phaser.Sprite;\r\n  private _whenDestroyed: Subject<void> = new Subject();\r\n\r\n  constructor(game: Phaser.Game, x: number, y: number, components?: Array<Component>) {\r\n    if (components) {\r\n        components.forEach((component: Component) => {\r\n          this.addComponent(component);\r\n        });\r\n    }\r\n    this._sprite = game.add.sprite(x, y, TankLayout.TANK_SPRITESHEET);\r\n    this._components.forEach((comp: Component) => {\r\n      comp.validateComponentRequirments();\r\n    });\r\n\r\n  }\r\n\r\n\r\n  private addComponent(component: Component): Component {\r\n    this._components.set(component.name, component);\r\n    this._components.get(component.name).target = this;\r\n    return component;\r\n  }\r\n  public hasComponent(componentName: ComponentType) {\r\n    return this._components.has(componentName);\r\n  }\r\n  /**\r\n   * Retrieves a component by Component type see {@Link ComponentType}\r\n   * and casts it to any parameter that extends Component see {@Link Component}\r\n   * @param {string} componentName\r\n   * @return {Component} component\r\n   * */\r\n  public getComponent<T extends Component>(componentName: string): T {\r\n    return this._components.get(componentName) as T;\r\n  }\r\n\r\n  public update(): void {\r\n    this._components.forEach((componentType) => {\r\n      this._components.get(componentType.name).update();\r\n    });\r\n  }\r\n  /**\r\n   * Loads an array of components {@Link Component} to an entity\r\n   * and then returns the entity\r\n   * @param {Array<Component>} components\r\n   * @return {Entity} this\r\n   * */\r\n  withComponent(components: Array<Component>): this {\r\n    if (components) {\r\n      components.forEach((component: Component) => {\r\n        this.addComponent(component);\r\n      });\r\n      return this;\r\n    }\r\n  }\r\n  public destroy(): void {\r\n    try {\r\n      this._components.clear();\r\n      this._sprite.destroy();\r\n      this._whenDestroyed.next();\r\n    } catch (e) {\r\n      this._whenDestroyed.error(e);\r\n    }\r\n  }\r\n  public get whenDestroyed(): Subject<void> {\r\n    return this._whenDestroyed;\r\n  }\r\n  get sprite(): Phaser.Sprite {\r\n    return this._sprite;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/entity.ts","export class Guid {\n  static newGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/guid.ts","import { Entity } from '../../entities/entity';\nimport {ComponentType, FsmStateName, InputType} from '../../constants/GameConstants';\nimport { ActionComponents } from '../../component/action.components';\nimport { ControlComponents } from '../../component/control.components';\n\nimport ShootComponent = ActionComponents.ShootComponent;\nimport MovableComponent = ActionComponents.MovableComponent;\nimport { CollisionComponents } from '../../component/collision.components';\nimport { DataComponents } from '../../component/data.components';\nimport { DataConfig } from '../../config/data.config';\nimport {MathUtil} from '../../util/math.util';\n\nexport namespace FsmStates {\n\n  import AiComponent = ControlComponents.AiComponent;\n  import PhysicsComponent = CollisionComponents.PhysicsComponent;\n  import HealthComponent = DataComponents.HealthComponent;\n  import TankComponent = DataComponents.TankComponent;\n\n  export abstract class State {\n    protected _entity: Entity;\n\n    public abstract enter(): void;\n\n    public abstract leave(): void;\n\n    public abstract update(): void;\n\n    public set entity(entity: Entity) {\n      this._entity = entity;\n    }\n  }\n\n  export class PursuingState extends State {\n    enter(): void {\n    }\n\n    leave(): void {\n    }\n\n    update(): void {\n      const tankComponent = this._entity.getComponent<TankComponent>(ComponentType.TANK);\n      const aiComp = this._entity.getComponent<AiComponent>(ComponentType.AI);\n      const shootComponent = this._entity.getComponent<ShootComponent>(ComponentType.SHOOT);\n      const movableComponent = this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE);\n      const difficultyModifier = 10 + DataConfig.difficulty * DataConfig.difficulty;\n      const distance = this._entity.sprite.x - aiComp.player.sprite.x;\n\n      let seconds = (distance / tankComponent.speed);\n\n      let futurePosition = aiComp.player.sprite.x + (aiComp.player.sprite.body.velocity.x / 1000) * seconds;\n      let direction = futurePosition - this._entity.sprite.x;\n      let rangeOfProjectile = shootComponent.rangeOfProjectile;\n\n      if (MathUtil.isBetween(Math.abs(direction), rangeOfProjectile + difficultyModifier, rangeOfProjectile - difficultyModifier)) {\n        shootComponent.canShoot = true;\n      }  else if (Math.abs(direction) < rangeOfProjectile ) {\n        direction > 0 ? movableComponent.direction = InputType.LEFT_INPUT : movableComponent.direction = InputType.RIGHT_INPUT;\n      } else {\n        direction > 0 ? movableComponent.direction = InputType.RIGHT_INPUT : movableComponent.direction = InputType.LEFT_INPUT;\n      }\n      this.correctScale();\n\n    }\n    private correctScale (){\n      const aiComp = this._entity.getComponent<AiComponent>(ComponentType.AI);\n      const distance = aiComp.player.sprite.x - this._entity.sprite.x;\n      if (distance > 0 && this._entity.sprite.scale.x === -1) {\n        this._entity.sprite.scale.x = 1;\n      } else if (distance < 0 && this._entity.sprite.scale.x === 1) {\n        this._entity.sprite.scale.x = -1;\n      }\n    }\n\n  }\n\n  export class FleeState extends State {\n\n    enter(): void {\n      let aiComponent: AiComponent = this._entity.getComponent<AiComponent>(ComponentType.AI);\n      let moveComponent: MovableComponent = this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE);\n     // Get player direction\n      let playerDir = aiComponent.player.sprite.scale.x;\n      // Go in the other direction of the player\n      if (playerDir === 1) {\n        moveComponent.direction = InputType.LEFT_INPUT;\n      }\n      else {\n        moveComponent.direction = InputType.RIGHT_INPUT;\n      }\n    }\n\n    leave(): void {\n      this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.STOP;\n    }\n\n    update(): void {\n      this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).update();\n    }\n  }\n\n  export class SuicideState extends State {\n    private _direction: number;\n    enter(): void {\n      this._direction = this._entity.getComponent<AiComponent>(ComponentType.AI).player.sprite.x - this._entity.sprite.x;\n      if (this._direction < 0) {\n        this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.LEFT_INPUT;\n      } else {\n        this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.RIGHT_INPUT;\n      }\n    }\n\n    leave(): void {\n    }\n\n    update(): void {\n      if (Math.abs(this._direction) <= 10) {\n        const overKillDamage: number = 10000;\n        const playerDamageOnSuicide = 2;\n\n        this._entity.getComponent<HealthComponent>(ComponentType.HEALTH).dealDamage(overKillDamage);\n        this._entity.getComponent<AiComponent>(ComponentType.AI)\n          .player.getComponent<HealthComponent>(ComponentType.HEALTH)\n          .dealDamage(playerDamageOnSuicide);\n      }\n    }\n\n  }\n\n  export class IdleState extends State {\n\n    enter(): void {\n    }\n\n    leave(): void {\n    }\n\n    update(): void {\n    }\n\n  }\n\n  export class SeekState extends State {\n\n    enter(): void {\n      let direction = this._entity.getComponent<AiComponent>(ComponentType.AI).player.sprite.x - this._entity.sprite.x;\n      const physicsComponent = this._entity.getComponent<PhysicsComponent>(ComponentType.PHYSICS);\n      if (direction < 0) {\n        this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.LEFT_INPUT;\n        physicsComponent.scaleSprite(-1);\n\n      } else {\n        this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.RIGHT_INPUT;\n        physicsComponent.scaleSprite(1);\n\n      }\n    }\n\n    leave(): void {\n      this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).direction = InputType.STOP;\n    }\n\n    update(): void {\n      this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE).update();\n    }\n\n  }\n\n  export class EvadeState extends State {\n\n    enter(): void {\n    }\n\n    leave(): void {\n    }\n\n    update(): void {\n      const aiComp = this._entity.getComponent<AiComponent>(ComponentType.AI);\n      const movableComponent = this._entity.getComponent<MovableComponent>(ComponentType.MOVABLE);\n\n      // Move until in range to pursuit again\n      aiComp.player.sprite.scale.x > 0 ? movableComponent.direction = InputType.LEFT_INPUT : movableComponent.direction = InputType.RIGHT_INPUT;\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/fsm/fsm.states.ts","import {Component} from './component';\r\nimport {Action, ComponentType} from '../constants/GameConstants';\r\nimport {DataConfig} from '../config/data.config';\r\nimport {DataComponents} from './data.components';\r\n\r\nimport CollisionGroup = Phaser.Physics.P2.CollisionGroup;\r\nimport HealthComponent = DataComponents.HealthComponent;\r\nimport {UiManagers} from '../UI/uimanagers';\r\n\r\nexport namespace CollisionComponents {\r\n\r\n  import PlayerVisualsManager = UiManagers.PlayerVisualsManager;\r\n  import TankComponent = DataComponents.TankComponent;\r\n\r\n  export class CollisionsComponent extends Component {\r\n\r\n    constructor() {\r\n      super(ComponentType.COLLISION);\r\n      this._requiredComponents = [\r\n        ComponentType.PHYSICS\r\n      ];\r\n    }\r\n\r\n    public setCollisionGroup(ownerCollisionGroup: CollisionGroup): CollisionsComponent {\r\n\r\n      this.target.sprite.body.setCollisionGroup(ownerCollisionGroup);\r\n      return this;\r\n    }\r\n\r\n    public cleanCollisions() {\r\n      this.target.sprite.body.data.shapes[0].sensor = true;\r\n    }\r\n\r\n    public collidesWith(collidesWith: CollisionGroup, actions: Array<Action>): CollisionsComponent {\r\n      let body: Phaser.Physics.P2.Body = this.target.sprite.body;\r\n\r\n      if (this.target.sprite.body.collidesWith.includes(collidesWith)) {\r\n        return;\r\n      }\r\n\r\n      actions.forEach((action) => {\r\n        switch (action) {\r\n          case Action.NOTHING:\r\n            body.collides(collidesWith);\r\n            break;\r\n\r\n          case Action.DAMAGE:\r\n            // Each bullet does the same damage regardless of type\r\n            // Bullet damage depends on difficulty level\r\n            const aiComp = this.target.getComponent(ComponentType.AI);\r\n            const healthComp = this.target.getComponent<HealthComponent>(ComponentType.HEALTH);\r\n            const tankComp = this.target.getComponent<TankComponent>(ComponentType.TANK);\r\n\r\n            if (!aiComp && tankComp) {\r\n              body.collides(collidesWith, () => {\r\n                let heartManager = new PlayerVisualsManager();\r\n                heartManager.removeHeartByDamage(DataConfig.enemyDamage);\r\n                healthComp.dealDamage(DataConfig.enemyDamage);\r\n              });\r\n              break;\r\n            }\r\n            body.collides(collidesWith, () => {\r\n              healthComp.dealDamage(DataConfig.playerDamage);\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      return this;\r\n    }\r\n\r\n  }\r\n\r\n  export class PhysicsComponent extends Component {\r\n    private _game: Phaser.Game;\r\n\r\n    constructor(game: Phaser.Game) {\r\n      super(ComponentType.PHYSICS);\r\n      this._game = game;\r\n    }\r\n\r\n    public addPhysics(drag: boolean = true): PhysicsComponent {\r\n      this._game.physics.p2.enable(this.target.sprite);\r\n      this.target.sprite.anchor.setTo(0.5, 0.5);\r\n      drag ? this.target.sprite.body.angularDamping = 0.7 : this.target.sprite.body.angularDamping = 0.0;\r\n\r\n      return this;\r\n    }\r\n\r\n    public get gravity(): number {\r\n      return this._game.physics.p2.gravity.y;\r\n    }\r\n\r\n    public scaleSprite(scale: number): PhysicsComponent {\r\n      this.target.sprite.scale.x = scale;\r\n      return this;\r\n    }\r\n\r\n    public stopSprite() {\r\n      this.target.sprite.body.motionState = Phaser.Physics.P2.Body.STATIC;\r\n      this.target.sprite.body.restitution = 0.0;\r\n      this.target.sprite.body.velocity.x = 0;\r\n      this.target.sprite.body.velocity.y = 0;\r\n      this.target.sprite.body.allowGravity = false;\r\n      this.target.sprite.body.data.gravityScale = 0;\r\n      this.target.sprite.body.angularDumping = 1;\r\n    }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/collision.components.ts","import {Difficulty, MainMenuButtons, UIComponents} from '../constants/GameConstants';\r\n\r\n/**\r\n * @class\r\n * As the only way to create a menu in phaser is sprites we need a class to store and retrieve them\r\n * */\r\nexport class MenuConfig {\r\n  private _mapSprites: Map<MainMenuButtons | UIComponents | Difficulty, Phaser.Sprite>;\r\n  private _spriteGroups: Map<string, Array<Phaser.Sprite>>;\r\n  private _fakeTileMap: Phaser.Tilemap;\r\n\r\n  constructor() {\r\n    this._mapSprites = new Map();\r\n    this._spriteGroups = new Map();\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * returns the matching sprite\r\n   * @param {MainMenuButtons | UIComponents} name\r\n   * @return {Phaser.Sprite} sprite\r\n   * */\r\n  public getSprite(name: MainMenuButtons | UIComponents | Difficulty): Phaser.Sprite {\r\n    return this._mapSprites.get(name);\r\n  }\r\n\r\n  public setSprite(name: MainMenuButtons | UIComponents | Difficulty, sprite: Phaser.Sprite) {\r\n    if (!this._mapSprites.has(name)) {\r\n      this._mapSprites.set(name, sprite);\r\n    }\r\n  }\r\n\r\n  public setSpriteGroup(name: string, spriteArr: Phaser.Sprite[]) {\r\n    if (!this._spriteGroups.has(name)) {\r\n      this._spriteGroups.set(name, spriteArr);\r\n    }\r\n  }\r\n\r\n  public getSpriteGroup(name: string): Phaser.Sprite[] {\r\n    return this._spriteGroups.get(name);\r\n  }\r\n\r\n  get allSprites() {\r\n    let arr: Phaser.Sprite[] = [];\r\n    this._mapSprites.forEach((value: Phaser.Sprite) => {\r\n      arr.push(value);\r\n    });\r\n    return arr;\r\n  }\r\n\r\n  get fakeTileMap(): Phaser.Tilemap {\r\n    return this._fakeTileMap;\r\n  }\r\n\r\n  set fakeTileMap(value: Phaser.Tilemap) {\r\n    this._fakeTileMap = value;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/menu.config.ts","import { Component } from './component';\nimport { Entity } from '../entities/entity';\nimport {AIConstant, AnimationTypes, ComponentType, FsmStateName, TankLayout} from '../constants/GameConstants';\nimport { CollisionComponents } from './collision.components';\nimport { MathUtil } from '../util/math.util';\nimport { DataComponents } from './data.components';\n\nimport PhysicsComponent = CollisionComponents.PhysicsComponent;\nimport TankComponent = DataComponents.TankComponent;\nimport OwnerComponent = DataComponents.OwnerComponent;\nimport { StateComponent } from './state.component';\nimport {DataConfig} from '../config/data.config';\n\n\nexport namespace ControlComponents {\n\n  import HealthComponent = DataComponents.HealthComponent;\n  import LayerComponent = DataComponents.LayerComponent;\n\n  export class DisasterComponent extends Component {\n    constructor() {\n      super(ComponentType.DISASTER);\n    }\n\n    update(){\n      const layoutComponent = this.target.getComponent<LayerComponent>(ComponentType.LAYER);\n      const animation = layoutComponent.getCurrentAnimation();\n      if (!animation.isPlaying) {\n          this.target.sprite.angle = 45;\n          this.target.sprite.body.velocity.y = 200 * (5 - DataConfig.difficulty) ;\n          this.target.sprite.body.velocity.x = 100;\n      }\n    }\n  }\n  export class BulletComponent extends Component {\n    private _game: Phaser.Game;\n\n    constructor(game: Phaser.Game) {\n      super(ComponentType.BULLET);\n      this._game = game;\n      this._requiredComponents.push(ComponentType.OWNER);\n      this._requiredComponents.push(ComponentType.LAYER);\n    }\n\n    /**\n     * @description\n     * Initiates a normal bullet tank bullet and ensures it will reach the target\n     * If this is an AI the target passed at the AI else at the mouse pointer of the player\n     * */\n    bulletInit() {\n      let cOwner = this.target.getComponent<OwnerComponent>(ComponentType.OWNER);\n      let seekObject = {\n        x: this._game.input.activePointer.x + this._game.camera.x,\n        y: this._game.input.activePointer.y\n      };\n\n      // Check if there is an AIComponent if yes this is not our player\n      let aiComponent = cOwner ? cOwner.owner.getComponent<AiComponent>(ComponentType.AI) : null;\n      if (aiComponent) {\n        // If yes do not fire bulet according to mouse but to player; AIComponent knows where the player is\n        seekObject.x = aiComponent.player.sprite.x;\n        seekObject.y = aiComponent.player.sprite.y;\n      }\n      this.accelerateToObject(this.target.sprite, seekObject,\n        aiComponent\n          ? cOwner.owner.getComponent<TankComponent>(ComponentType.TANK).bulletSpeed\n          : Math.abs(cOwner.owner.getComponent<TankComponent>(ComponentType.TANK).bulletSpeed));\n    }\n\n    private accelerateToObject(obj1, obj2, velocity = 500) {\n      let angle = Math.atan2(obj2.y - obj1.y, obj2.x - obj1.x);\n      const ownerComponent = this.target.getComponent<OwnerComponent>(ComponentType.OWNER);\n      let aiComponent = ownerComponent.owner.getComponent<AiComponent>(ComponentType.AI);\n      let aiAngle: number;\n      ownerComponent.owner.sprite.scale.x > 0 ? aiAngle = -45 : aiAngle = 180;\n      aiComponent\n        ? obj1.body.velocity.x = calculateVelocityX(true, velocity, aiAngle)\n        : obj1.body.velocity.x = calculateVelocityX(false, velocity, angle);\n      aiComponent\n        ? obj1.body.velocity.y = calculateVelocityY(true, velocity, aiAngle)\n        : obj1.body.velocity.y = calculateVelocityY(false, velocity, angle);\n\n      function calculateVelocityX(isAi: boolean = true, tankSpeed: number, angle: number): number {\n        return velocity * Math.cos(angle);\n      }\n\n      function calculateVelocityY(isAi: boolean = true, tankSpeed: number, angle: number): number {\n        return velocity * Math.sin(angle);\n      }\n    }\n\n  }\n\n  export class AiComponent extends Component {\n    private _player: Entity;\n    private _friendlies: Array<Entity>;\n\n    constructor(player: Entity, aiFriendlies: Array<Entity>) {\n\n      super(ComponentType.AI);\n      this._requiredComponents = [ComponentType.MOVABLE, ComponentType.PHYSICS, ComponentType.SHOOT, ComponentType.TANK];\n      this._player = player;\n      this._friendlies = aiFriendlies;\n    }\n\n    update() {\n      this.decide();\n    }\n\n    public decide() {\n      // Check if state was given externally or has to be calculated\n      // Justify this in the report say tanks can only spawn on the right of the player\n      let sComp = this._target.getComponent<StateComponent>(ComponentType.STATE);\n      // Here we are adding some random params to simulate a more realistic behaviour\n\n      switch (this.canHitPlayer()) {\n        case AIConstant.CAN_HIT_ENEMY:\n          sComp.setState(FsmStateName.PURSUING);\n          break;\n        case AIConstant.CLOSE:\n          let healthComp = this.target.getComponent<HealthComponent>(ComponentType.HEALTH);\n          let lowHealth: boolean = healthComp.getCurrentHealth() <= healthComp.getMaxHealth() / 2;\n          if (!lowHealth) {\n            sComp.setState(FsmStateName.EVADE);\n          } else {\n            // Check if there is a reason to die\n            if (this.checkIfAliesNearby()) {\n              sComp.setState(FsmStateName.SUICIDE);\n              return;\n            }\n            sComp.setState(FsmStateName.FLEEING);\n          }\n          break;\n        case AIConstant.FAR_AWAY:\n          sComp.setState(FsmStateName.SEEK);\n          break;\n        default:\n          break;\n\n      }\n    }\n\n    private checkIfAliesNearby(): boolean {\n      return this._friendlies.some((entity: Entity) => {\n        return Math.abs(this.target.sprite.x - entity.sprite.x) < 20;\n      });\n    }\n\n    private canHitPlayer(): AIConstant {\n      const tankComponent: TankComponent = this.target.getComponent<TankComponent>(ComponentType.TANK);\n      const physicsComponent: PhysicsComponent = this.target.getComponent<PhysicsComponent>(ComponentType.PHYSICS);\n      const distance: number = this._player.sprite.x - this.target.sprite.x;\n      const velocityYi = tankComponent.bulletSpeed * Math.sin(tankComponent.angle);\n\n      const rangeOfProjectile: number = (2 * ((velocityYi) * (velocityYi)) * Math.sin(tankComponent.angle) * Math.cos(tankComponent.angle)) / physicsComponent.gravity;\n      const decisionMakingDistance = 300;\n\n      if (MathUtil.isBetween(rangeOfProjectile, Math.abs(distance) + decisionMakingDistance, Math.abs(distance) - decisionMakingDistance)) {\n        return AIConstant.CAN_HIT_ENEMY;\n      } else if (rangeOfProjectile > Math.abs(distance)) {\n        return AIConstant.CLOSE;\n      } else {\n        return AIConstant.FAR_AWAY;\n      }\n\n    }\n\n    get player(): Entity {\n      return this._player;\n    }\n\n    get friendlies(): Array<Entity> {\n      return this._friendlies;\n    }\n  }\n\n  export class CameraComponent extends Component {\n    private _game: Phaser.Game;\n\n    constructor(game: Phaser.Game) {\n      super(ComponentType.CAMERA);\n      this._game = game;\n    }\n\n    setFocus(entity: Phaser.Sprite) {\n      this._game.camera.follow(entity);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/control.components.ts","import {Component} from './component';\nimport {Action, ComponentType, TankLayout} from '../constants/GameConstants';\nimport {TankUtil} from '../UI/tank.util';\nimport {Entity} from '../entities/entity';\nimport {CollisionComponents} from './collision.components';\nimport PhysicsComponent = CollisionComponents.PhysicsComponent;\nimport CollisionsComponent = CollisionComponents.CollisionsComponent;\n\nexport namespace DataComponents {\n  export class HealthComponent extends Component {\n    private _maxHealth: number;\n    constructor() {\n      super(ComponentType.HEALTH);\n      this._requiredComponents.push(ComponentType.LAYER);\n      this._requiredComponents.push(ComponentType.PHYSICS);\n    }\n\n    /**\n     * @description\n     * Deals damage to target returns true if target is still alive after damage\n     *\n     * */\n    public dealDamage(damage: number) {\n\n      // Check if the damage will kill the entity\n      if (this.target.sprite.health - damage <= 0) {\n        this.target.getComponent<CollisionsComponent>(ComponentType.COLLISION).cleanCollisions();\n        this.target.getComponent<PhysicsComponent>(ComponentType.PHYSICS).stopSprite();\n        this.target.getComponent<LayerComponent>(ComponentType.LAYER).playAnimation(Action.EXPLODE, null, null, true).then(() => {\n          this.target.destroy();\n        });\n      } else {\n        this.target.sprite.damage(damage);\n      }\n    }\n\n    public setHealth(health: number) {\n      this.target.sprite.health = health;\n      this._maxHealth = health;\n    }\n    public getCurrentHealth(): number {\n      return this.target.sprite.health;\n    }\n    public getMaxHealth(): number{\n      return this._maxHealth;\n    }\n  }\n\n  export class LayerComponent extends Component {\n    constructor() {\n      super(ComponentType.LAYER);\n    }\n\n    public addLayer(cachedName: string): LayerComponent {\n      if (cachedName) {\n        this.target.sprite.frameName = cachedName;\n      }\n      return this;\n    }\n\n    public addAnimation(name: string, frames?: number[] | string[], frameRate?: number, loop?: boolean, useNumericIndex?: boolean) {\n      this.target.sprite.animations.add(name, frames, frameRate, loop, useNumericIndex);\n    }\n\n    public getAnimation(name: string): Phaser.Animation {\n      return this.target.sprite.animations.getAnimation(name);\n    }\n    public getCurrentAnimation(): Phaser.Animation {\n      return this.target.sprite.animations.currentAnim;\n    }\n\n    public playAnimation(name: string, frameRate?: number, loop?: boolean, killOnComplete?: boolean): Promise<void> {\n      return new Promise(((resolve, reject) => {\n        this.target.sprite.animations.play(name, frameRate, loop).onComplete.add(() => {\n          resolve();\n        });\n      }));\n    }\n  }\n\n  export class TankComponent extends Component {\n\n    private _bulletSpeed: number;\n    private _bulletKind: TankLayout.BULLET_FIVE | TankLayout.BULLET_FOUR | TankLayout.BULLET_ONE | TankLayout.BULLET_SIX | TankLayout.BULLET_THREE | TankLayout.BULLET_TWO;\n    private _speed: number;\n\n    private _tankKind: TankLayout.CANDY_RECON\n      | TankLayout.CANDY_ARTILLERY\n      | TankLayout.CANDY_FORTRESS\n      | TankLayout.CANDY_HUNTER\n      | TankLayout.CANDY_LIGHT\n      | TankLayout.DARK_ARTILLERY\n      | TankLayout.DARK_FORTRESS\n      | TankLayout.DARK_HUNTER\n      | TankLayout.DARK_LIGHT\n      | TankLayout.DARK_RECON\n      | TankLayout.GREEN_ARTILERY\n      | TankLayout.GREEN_HUNTER\n      | TankLayout.GREEN_LIGHT\n      | TankLayout.GREEN_RECON\n      | TankLayout.GREEN_FORTRESS\n      | TankLayout.GREY_ARTILERY\n      | TankLayout.GREY_FORTRESS\n      | TankLayout.GREY_HUNTER\n      | TankLayout.GREY_LIGHT\n      | TankLayout.GREY_RECON;\n\n    constructor(tankKind) {\n      super(ComponentType.TANK);\n      this._tankKind = tankKind;\n    }\n\n\n    get bulletSpeed(): number {\n      if (TankUtil.isLightTank(this._tankKind)) {\n        return 700;\n      } else if (TankUtil.isHunterTank(this._tankKind)) {\n        return 1000;\n      } else if (TankUtil.isFortressTank(this._tankKind)) {\n        return 850;\n      } else if (TankUtil.isArtilleryTank(this._tankKind)) {\n        return 1200;\n      } else if (TankUtil.isReconTank(this._tankKind)) {\n        return 800;\n      } else {\n        throw new Error('NO TANK FOUND TO SET BULLET SPEED');\n      }\n    }\n\n    get bulletKind(): TankLayout.BULLET_FIVE | TankLayout.BULLET_FOUR | TankLayout.BULLET_ONE | TankLayout.BULLET_SIX | TankLayout.BULLET_THREE | TankLayout.BULLET_TWO {\n\n      if (TankUtil.isLightTank(this._tankKind)) {\n        return TankLayout.BULLET_ONE;\n      } else if (TankUtil.isHunterTank(this._tankKind)) {\n        return TankLayout.BULLET_THREE;\n      } else if (TankUtil.isFortressTank(this._tankKind)) {\n        return TankLayout.BULLET_SIX;\n      } else if (TankUtil.isArtilleryTank(this._tankKind)) {\n        return TankLayout.BULLET_FOUR;\n      } else if (TankUtil.isReconTank(this._tankKind)) {\n        return TankLayout.BULLET_FIVE;\n      } else {\n        throw new Error('NO TANK FOUND TO SET BULLET KIND');\n      }\n    }\n\n    get speed(): number {\n      if (TankUtil.isLightTank(this._tankKind)) {\n        return 400;\n      } else if (TankUtil.isHunterTank(this._tankKind)) {\n        return 400;\n      } else if (TankUtil.isFortressTank(this._tankKind)) {\n        return 300;\n      } else if (TankUtil.isArtilleryTank(this._tankKind)) {\n        return 400;\n      } else if (TankUtil.isReconTank(this._tankKind)) {\n        return 500;\n      } else {\n        throw new Error('NO TANK FOUND TO SET BULLET KIND');\n      }\n    }\n\n    get angle(): number {\n      return 180;\n    }\n    get tankKind(): TankLayout {\n      return this._tankKind;\n    }\n\n  }\n\n  export class OwnerComponent extends Component {\n    private _owner: Entity;\n\n    constructor() {\n      super(ComponentType.OWNER);\n    }\n\n    set owner(owner: Entity) {\n      this._owner = owner;\n    }\n\n    get owner(): Entity {\n      return this._owner;\n    }\n\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/data.components.ts","import {TankLayout} from '../constants/GameConstants';\r\n\r\nexport class TankUtil {\r\n  public static isArtilleryTank(tankKind: TankLayout): boolean {\r\n    return tankKind.toString().includes('2');\r\n  }\r\n  public static isFortressTank(tankKind: TankLayout): boolean {\r\n    return tankKind.toString().includes('1');\r\n  }\r\n  public static isHunterTank(tankKind: TankLayout): boolean {\r\n    return tankKind.toString().includes('3');\r\n  }\r\n  public static isLightTank(tankKind: TankLayout): boolean {\r\n    return tankKind.toString().includes('5');\r\n  }\r\n  public static isReconTank(tankKind: TankLayout): boolean {\r\n    return tankKind.toString().includes('4');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/UI/tank.util.ts","import { ComponentType, FsmStateName, InputType } from '../constants/GameConstants';\nimport TankWorldFactory from '../TankWorldFactory';\nimport { Component } from './component';\nimport StateMachine from '../AI/fsm/stateMachine';\nimport { FsmStates } from '../AI/fsm/fsm.states';\nimport { DataComponents } from './data.components';\n\nimport State = FsmStates.State;\nimport TankComponent = DataComponents.TankComponent;\nimport {MathUtil} from '../util/math.util';\nimport {ControlComponents} from './control.components';\nimport {DataConfig} from '../config/data.config';\nimport {CollisionComponents} from './collision.components';\n\nexport namespace ActionComponents {\n\n  import PhysicsComponent = CollisionComponents.PhysicsComponent;\n\n  export class ShootComponent extends Component{\n    private _canShoot: boolean = false;\n    private _factory: TankWorldFactory;\n    private _timer = 0;\n\n    constructor(game: Phaser.Game, factory: TankWorldFactory){\n      super(ComponentType.SHOOT);\n      this._factory = factory;\n    }\n\n    update(){\n      if (this._canShoot) {\n        this._canShoot = false;\n        if (Date.now() - this._timer > 1500) {\n          this.shootBullet();\n        }\n      }\n    }\n    set canShoot(value: boolean) {\n      this._canShoot = value;\n    }\n\n    private shootBullet(){\n      this._factory.newBullet(this.target.sprite.x + 50 , this.target.sprite.y - 20, this.target);\n      this._timer = Date.now();\n    }\n    public get rangeOfProjectile(): number {\n      const tankComponent: TankComponent = this.target.getComponent<TankComponent>(ComponentType.TANK);\n      const physicsComponent: PhysicsComponent = this.target.getComponent<PhysicsComponent>(ComponentType.PHYSICS);\n\n      const velocityYi = tankComponent.bulletSpeed * Math.sin(tankComponent.angle);\n      const rangeOfProjectile: number = (2 * ((velocityYi) * (velocityYi)) * Math.sin(tankComponent.angle) * Math.cos(tankComponent.angle)) / physicsComponent.gravity;\n\n      return rangeOfProjectile;\n\n    }\n  }\n\n  export class MovableComponent extends Component {\n\n    private _direction: InputType;\n    constructor() {\n      super(ComponentType.MOVABLE);\n    }\n\n    private _correctRotation() {\n      if (this.target.sprite.body.velocity.x > 0 && this.target.sprite.body.velocity.y < 0) {\n        this.target.sprite.body.angle = Math.atan2(this.target.sprite.body.velocity.y, this.target.sprite.body.velocity.x) * 180 / Math.PI;\n      }\n      if (this.target.sprite.body.velocity.x < 0 && this.target.sprite.body.velocity.y < 0) {\n        this.target.sprite.body.angle = Math.atan2(-this.target.sprite.body.velocity.y, -this.target.sprite.body.velocity.x) * 180 / Math.PI;\n      }\n    }\n\n    private moveRight(): void {\n      this.target.sprite.body.velocity.x = (this.target.getComponent<TankComponent>(ComponentType.TANK).speed);\n    }\n    private moveLeft(): void {\n      this.target.sprite.body.velocity.x = -(this.target.getComponent<TankComponent>(ComponentType.TANK).speed);\n    }\n    public update(){\n      let physicsComponent = this.target.getComponent<PhysicsComponent>(ComponentType.PHYSICS);\n\n      switch (this._direction) {\n        case InputType.LEFT_INPUT:\n          this.moveLeft();\n          this._correctRotation();\n          this._direction = InputType.STOP;\n          break;\n        case InputType.RIGHT_INPUT:\n          this.moveRight();\n          this._correctRotation();\n          this._direction = InputType.STOP;\n          break;\n        default:\n          break;\n      }\n    }\n    get direction(): InputType {\n      return this._direction;\n    }\n\n    set direction(value: InputType) {\n      this._direction = value;\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/action.components.ts","import StateMachine from '../AI/fsm/stateMachine';\nimport { ComponentType, FsmStateName } from '../constants/GameConstants';\nimport { Component } from './component';\nimport { FsmStates } from '../AI/fsm/fsm.states';\nimport State = FsmStates.State;\n\nexport class StateComponent extends Component{\n  private _fsm: StateMachine;\n  constructor(){\n    super(ComponentType.STATE);\n    this._fsm = new StateMachine();\n  }\n  public addState(name: FsmStateName, state: State): StateComponent {\n    this._fsm.add(name, state);\n    state.entity = this.target;\n    return this;\n  }\n  public setState(name: FsmStateName): StateComponent {\n    try {\n      this._fsm.enter(name);\n      return this;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  public get currentState(): State {\n    return this._fsm.current;\n  }\n  update(): void {\n    this._fsm.update();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/state.component.ts","import {FsmStateName} from '../../constants/GameConstants';\nimport {FsmStates} from './fsm.states';\nimport State = FsmStates.State;\n\nexport default class StateMachine {\n\n  private _states: Map<FsmStateName, State>;\n  private _current: State;\n\n  constructor(){\n    this._states = new Map();\n  }\n  public add(name: FsmStateName, state: State) {\n    this._states.set(name, state);\n  }\n  public enter(name: FsmStateName){\n    if (this._current) {\n      this._current.leave();\n    }\n    this._current = this._states.get(name);\n    this._current.enter();\n  }\n  public update(){\n    if (this._current) {\n      this._current.update();\n    }\n  }\n  public hasState(name: FsmStateName): boolean {\n    return this._states.has(name);\n  }\n  public get current(): State{\n    return this._current;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/fsm/stateMachine.ts","import { Subject } from 'rxjs/Subject';\nimport { InputType } from '../constants/GameConstants';\n\nexport default class Input {\n  private _emitter: Subject<InputType>;\n  private _map: Map<any, InputType>;\n  private _game: Phaser.Game;\n\n  constructor(){\n    this._map = new Map<Phaser.Key, InputType>();\n    this._emitter = new Subject();\n  }\n  add(condition: Phaser.Key, action: InputType){\n    this._map.set(condition, action);\n  }\n\n  run(){\n    this._map.forEach((value: InputType, key: Phaser.Key) => {\n      if (key.isDown)  {\n        this._emitter.next(value);\n      }\n    });\n  }\n  get emitter(): Subject<InputType> {\n    return this._emitter;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/input.ts","import {Levels, TankLayout, TileLayers} from '../../constants/GameConstants';\nimport {MathUtil} from '../../util/math.util';\nimport Vector from '../../util/vector';\nimport {Subject} from 'rxjs/Subject';\n\nexport namespace TankGameLevels {\n  export abstract class TankLevel {\n    // vars\n    protected _enemies: Phaser.Group;\n    protected _playerStartPos: Vector;\n    protected _enemyStartPos: Vector;\n    protected _game: Phaser.Game;\n    protected _collisionLayer: Array<Phaser.Physics.P2.Body>;\n    protected _map: Phaser.Tilemap;\n\n    protected _capEnemies: number;\n    protected _enemiesCount: number; // total of enemies the level will have\n    protected _enemiesSpawnTime: number;\n    protected _randomDisasterSpawnTime: number; // time in ms\n    protected _totalEnemies: number;\n    protected _enemyTankKind: Array<TankLayout>;\n    protected _whenStageCleared: Subject<void>;\n    constructor(game: Phaser.Game) {\n      this._game = game;\n    }\n\n    // functions\n    public abstract init(): void;\n\n    /**\n     * @description\n     * Use to clear any variables that should not exist globally once a level has finished e.g. tilemap\n     */\n    public abstract destroy(): void;\n\n    /**\n     * @description\n     * Gets total enemies that will ever exist on current level\n     * @return {number} this._totalEnemies\n     */\n    get totalEnemies(): number {\n      return this._totalEnemies;\n    }\n\n    /**\n     * @description\n     * Gets how many enemies currently are alive at a level\n     * @return {number} this._enemiesCount\n     */\n    get enemiesCount(): number {\n      return this._enemiesCount;\n    }\n\n    /**\n     * @description\n     * Sets how many enemies currently are alive at a level\n     * @param {number} value\n     */\n    set enemiesCount(value: number) {\n      this._enemiesCount = value;\n    }\n\n    get enemiesSpawnTime(): number {\n      return this._enemiesSpawnTime;\n    }\n\n    get enemies(): Phaser.Group {\n      return this._enemies;\n    }\n\n    get playerStartPos(): Vector {\n      return this._playerStartPos;\n    }\n\n    get enemyStartPos(): Vector {\n      return this._enemyStartPos;\n    }\n    get whenStageCleared(): Subject<void> {\n      return this._whenStageCleared;\n    }\n    /**\n     * @description\n     * Return the bodies of the ground layer\n     * @return {Phaser.Physics.P2.Body[]} this._collisionLayer\n     */\n    get collisionLayer(): Array<Phaser.Physics.P2.Body> {\n      return this._collisionLayer;\n    }\n\n    /**\n     * @description\n     * Total of enemies a level can have at a time\n     * @return {number} this._capEnemies\n     *\n     */\n    get capEnemies(): number {\n      return this._capEnemies;\n    }\n\n\n    get randomDisasterSpawnTime(): number {\n      return this._randomDisasterSpawnTime;\n    }\n\n    getRandomEnemy(): TankLayout {\n      let toReturn = this._enemyTankKind[MathUtil.randomIntFromInterval(0, 4)];\n      this._enemiesCount++;\n      return toReturn;\n    }\n  }\n\n  export class LevelOne extends TankLevel {\n    constructor(game: Phaser.Game) {\n      super(game);\n      this._enemiesCount = 0;\n      this._enemiesSpawnTime = 3;\n      this._playerStartPos = new Vector(this._game.world.bounds.left, this._game.world.centerY + 100);\n      this._enemyStartPos = new Vector(this._game.world.bounds.right, this._game.world.centerY);\n      this._capEnemies = 3;\n      this._totalEnemies = 30;\n      this._randomDisasterSpawnTime = 5000;\n      this._enemyTankKind = [TankLayout.DARK_RECON, TankLayout.DARK_ARTILLERY, TankLayout.DARK_FORTRESS, TankLayout.DARK_LIGHT, TankLayout.DARK_HUNTER];\n    }\n\n    public init(): void {\n      let map = this._game.add.tilemap(Levels.LEVEL_ONE);\n      map.addTilesetImage(TileLayers.GRASS_LAYER, TileLayers.GRASS_LAYER);\n      map.addTilesetImage(TileLayers.BACKGROUND, TileLayers.BACKGROUND);\n\n      map.createLayer('SkySecondary').resizeWorld();\n      map.createLayer('SkyPrimary').resizeWorld();\n      map.createLayer('GroundSecondary').resizeWorld();\n      map.createLayer('GroundPrimary').resizeWorld();\n\n      this._collisionLayer = this._game.physics.p2.convertCollisionObjects(map, 'GroundPath', true);\n\n      this._map = map;\n\n      // Setup game winning condition\n      if (this._totalEnemies === 0) {\n        this._whenStageCleared.next();\n      }\n    }\n\n    public destroy(): void {\n      this._map.destroy();\n    }\n  }\n\n  export class LevelTwo extends TankLevel {\n    constructor(game: Phaser.Game) {\n      super(game);\n      this._enemiesCount = 0;\n      this._enemiesSpawnTime = 3;\n      this._playerStartPos = new Vector(this._game.world.bounds.left, this._game.world.centerY + 100);\n      this._enemyStartPos = new Vector(this._game.world.bounds.right, this._game.world.centerY);\n      this._capEnemies = 3;\n      this._totalEnemies = 30;\n      this._enemyTankKind = [TankLayout.GREY_LIGHT, TankLayout.GREY_RECON, TankLayout.GREY_HUNTER, TankLayout.GREY_FORTRESS, TankLayout.GREY_ARTILERY];\n      this._randomDisasterSpawnTime = 5000;\n\n      if (this._totalEnemies === 0) {\n        this._whenStageCleared.next();\n      }\n\n    }\n\n    init(): void {\n\n      let map = this._game.add.tilemap(Levels.LEVEL_TWO);\n      map.addTilesetImage(TileLayers.CANDY_LAYER, TileLayers.CANDY_LAYER);\n      map.addTilesetImage(TileLayers.BACKGROUND, TileLayers.BACKGROUND);\n\n      map.createLayer('SkySecondary').resizeWorld();\n      map.createLayer('SkyPrimary').resizeWorld();\n      map.createLayer('GroundSecondary').resizeWorld();\n      map.createLayer('GroundPrimary').resizeWorld();\n\n      this._collisionLayer = this._game.physics.p2.convertCollisionObjects(map, 'GroundPath', true);\n      this._map = map;\n    }\n\n    destroy(): void {\n      this._map.destroy();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/levels/levels.tankLevels.ts"],"sourceRoot":""}